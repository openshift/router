// Code generated by go-bindata.
// sources:
// test/extended/testdata/router/49802-route.yaml
// test/extended/testdata/router/awslb/awslbcontroller.yaml
// test/extended/testdata/router/awslb/ingress-test.yaml
// test/extended/testdata/router/awslb/namespace.yaml
// test/extended/testdata/router/awslb/operatorgroup.yaml
// test/extended/testdata/router/awslb/podsvc.yaml
// test/extended/testdata/router/awslb/sts-albc-perms-policy.json
// test/extended/testdata/router/awslb/sts-albo-perms-policy.json
// test/extended/testdata/router/awslb/subscription-src-qe-sts.yaml
// test/extended/testdata/router/awslb/subscription-src-qe.yaml
// test/extended/testdata/router/bug1826225-proh2-deploy.yaml
// test/extended/testdata/router/bug2013004-lb-services.yaml
// test/extended/testdata/router/ca-bundle.pem
// test/extended/testdata/router/coreDNS-pod.yaml
// test/extended/testdata/router/egressfirewall-multiDomain.yaml
// test/extended/testdata/router/egressfirewall-wildcard.yaml
// test/extended/testdata/router/error-page-404.http
// test/extended/testdata/router/error-page-503.http
// test/extended/testdata/router/error-page2-404.http
// test/extended/testdata/router/error-page2-503.http
// test/extended/testdata/router/extdns/aws-sts-creds-secret.yaml
// test/extended/testdata/router/extdns/ns-external-dns-operator.yaml
// test/extended/testdata/router/extdns/operatorgroup.yaml
// test/extended/testdata/router/extdns/sample-aws-rt.yaml
// test/extended/testdata/router/extdns/sample-aws-sharedvpc-rt.yaml
// test/extended/testdata/router/extdns/sample-aws-sts-rt.yaml
// test/extended/testdata/router/extdns/sample-azure-rt.yaml
// test/extended/testdata/router/extdns/sample-gcp-svc.yaml
// test/extended/testdata/router/extdns/sts-exdns-perms-policy.json
// test/extended/testdata/router/extdns/subscription.yaml
// test/extended/testdata/router/gateway.yaml
// test/extended/testdata/router/gatewayclass.yaml
// test/extended/testdata/router/httpbin-deploy.yaml
// test/extended/testdata/router/httpbin-pod-withprivilege.json
// test/extended/testdata/router/httpbin-service_secure.json
// test/extended/testdata/router/httproute.yaml
// test/extended/testdata/router/ingress-destCA.yaml
// test/extended/testdata/router/ingress-resource.yaml
// test/extended/testdata/router/ingress-with-class.yaml
// test/extended/testdata/router/ingresscontroller-IBMproxy.yaml
// test/extended/testdata/router/ingresscontroller-azure-cidr.yaml
// test/extended/testdata/router/ingresscontroller-clb.yaml
// test/extended/testdata/router/ingresscontroller-external.yaml
// test/extended/testdata/router/ingresscontroller-hn-PROXY.yaml
// test/extended/testdata/router/ingresscontroller-hostnetwork-only.yaml
// test/extended/testdata/router/ingresscontroller-np-PROXY.yaml
// test/extended/testdata/router/ingresscontroller-np.yaml
// test/extended/testdata/router/ingresscontroller-private.yaml
// test/extended/testdata/router/ingresscontroller-shard.yaml
// test/extended/testdata/router/ingresscontroller-sidecar.yaml
// test/extended/testdata/router/ingresscontroller-syslog.yaml
// test/extended/testdata/router/ingresscontroller-tuning.yaml
// test/extended/testdata/router/ipfailover.yaml
// test/extended/testdata/router/microshift-ingress-destca.yaml
// test/extended/testdata/router/microshift-ingress-http.yaml
// test/extended/testdata/router/ocp57404-stateful-set.yaml
// test/extended/testdata/router/ocp73771-role.yaml
// test/extended/testdata/router/rsyslogd-pod.yaml
// test/extended/testdata/router/scc-bug2007246.json
// test/extended/testdata/router/subdomain-routes/alpha-shard-route.yaml
// test/extended/testdata/router/subdomain-routes/ocp51148-route.yaml
// test/extended/testdata/router/subdomain-routes/route.yaml
// test/extended/testdata/router/svc-additional-backend.yaml
// test/extended/testdata/router/template-web-server-deploy.yaml
// test/extended/testdata/router/test-client-pod-withprivilege.yaml
// test/extended/testdata/router/test-client-pod.yaml
// test/extended/testdata/router/testpod-60350.yaml
// test/extended/testdata/router/testpod-60492.yaml
// test/extended/testdata/router/web-server-deploy.yaml
// test/extended/testdata/router/web-server-signed-deploy.yaml
// test/extended/testdata/router/web-server-v4v6rc.yaml
// DO NOT EDIT!

package testdata

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _testExtendedTestdataRouter49802RouteYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      name: service-unsecure
    name: hello-pod
  namespace: ${NAMESPACE}
  spec:
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    to:
      kind: Service
      name: service-unsecure
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      name: service-unsecure
    name: hello-pod-http
  namespace: ${NAMESPACE}
  spec:
    path: "/test"
    to:
      kind: Service
      name: service-unsecure
parameters:
- name: NAMESPACE
`)

func testExtendedTestdataRouter49802RouteYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouter49802RouteYaml, nil
}

func testExtendedTestdataRouter49802RouteYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouter49802RouteYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/49802-route.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterAwslbAwslbcontrollerYaml = []byte(`kind: AWSLoadBalancerController
apiVersion: networking.olm.openshift.io/v1
metadata:
  name: cluster
spec:
  config:
    replicas: 1
  ingressClass: alb
  subnetTagging: Auto
`)

func testExtendedTestdataRouterAwslbAwslbcontrollerYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterAwslbAwslbcontrollerYaml, nil
}

func testExtendedTestdataRouterAwslbAwslbcontrollerYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterAwslbAwslbcontrollerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/awslb/awslbcontroller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterAwslbIngressTestYaml = []byte(`apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-test
  annotations:
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: instance
spec:
  ingressClassName: alb
  rules:
  - host: foo.bar.com
    http:
      paths:
      - backend:
          service:
            name: service-unsecure
            port:
              number: 27017
        path: /
        pathType: Exact
`)

func testExtendedTestdataRouterAwslbIngressTestYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterAwslbIngressTestYaml, nil
}

func testExtendedTestdataRouterAwslbIngressTestYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterAwslbIngressTestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/awslb/ingress-test.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterAwslbNamespaceYaml = []byte(`apiVersion: v1
kind: Namespace
metadata:
  name: aws-load-balancer-operator
`)

func testExtendedTestdataRouterAwslbNamespaceYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterAwslbNamespaceYaml, nil
}

func testExtendedTestdataRouterAwslbNamespaceYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterAwslbNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/awslb/namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterAwslbOperatorgroupYaml = []byte(`apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: aws-lb-operatorgroup
  namespace: aws-load-balancer-operator
spec:
  upgradeStrategy: Default
`)

func testExtendedTestdataRouterAwslbOperatorgroupYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterAwslbOperatorgroupYaml, nil
}

func testExtendedTestdataRouterAwslbOperatorgroupYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterAwslbOperatorgroupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/awslb/operatorgroup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterAwslbPodsvcYaml = []byte(`apiVersion: v1
kind: Pod
metadata:
  labels:
    name: web-server
  name: web-server-1
spec:
  containers:
  - image: quay.io/openshifttest/nginx-alpine@sha256:cee6930776b92dc1e93b73f9e5965925d49cff3d2e91e1d071c2f0ff72cbca29
    name: nginx
    ports:
    - containerPort: 8080
    - containerPort: 8443
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: service-unsecure
  name: service-unsecure
spec:
  ports:
  - name: http
    port: 27017
    protocol: TCP
    targetPort: 8080
  selector:
    name: web-server
  type: NodePort
`)

func testExtendedTestdataRouterAwslbPodsvcYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterAwslbPodsvcYaml, nil
}

func testExtendedTestdataRouterAwslbPodsvcYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterAwslbPodsvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/awslb/podsvc.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterAwslbStsAlbcPermsPolicyJson = []byte(`{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "iam:CreateServiceLinkedRole"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeTags",
                "ec2:GetCoipPoolUsage",
                "ec2:DescribeCoipPools",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:DescribeTags"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "cognito-idp:DescribeUserPoolClient",
                "acm:ListCertificates",
                "acm:DescribeCertificate",
                "iam:ListServerCertificates",
                "iam:GetServerCertificate",
                "waf-regional:GetWebACL",
                "waf-regional:GetWebACLForResource",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
                "wafv2:GetWebACL",
                "wafv2:GetWebACLForResource",
                "wafv2:AssociateWebACL",
                "wafv2:DisassociateWebACL",
                "shield:GetSubscriptionState",
                "shield:DescribeProtection",
                "shield:CreateProtection",
                "shield:DeleteProtection"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupIngress"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateSecurityGroup"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateTags"
            ],
            "Resource": "arn:aws:ec2:*:*:security-group/*",
            "Condition": {
                "StringEquals": {
                    "ec2:CreateAction": "CreateSecurityGroup"
                },
                "Null": {
                    "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateTags",
                "ec2:DeleteTags"
            ],
            "Resource": "arn:aws:ec2:*:*:security-group/*",
            "Condition": {
                "Null": {
                    "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:DeleteSecurityGroup"
            ],
            "Resource": "*",
            "Condition": {
                "Null": {
                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateTargetGroup"
            ],
            "Resource": "*",
            "Condition": {
                "Null": {
                    "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:DeleteRule"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:RemoveTags"
            ],
            "Resource": [
                "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*"
            ],
            "Condition": {
                "Null": {
                    "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:RemoveTags"
            ],
            "Resource": [
                "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*",
                "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:AddTags"
            ],
            "Resource": [
                "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*"
            ],
            "Condition": {
                "StringEquals": {
                    "elasticloadbalancing:CreateAction": [
                        "CreateTargetGroup",
                        "CreateLoadBalancer"
                    ]
                },
                "Null": {
                    "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:DeleteTargetGroup"
            ],
            "Resource": "*",
            "Condition": {
                "Null": {
                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:DeregisterTargets"
            ],
            "Resource": "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:SetWebAcl",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:ModifyRule"
            ],
            "Resource": "*"
        }
    ]
}
`)

func testExtendedTestdataRouterAwslbStsAlbcPermsPolicyJsonBytes() ([]byte, error) {
	return _testExtendedTestdataRouterAwslbStsAlbcPermsPolicyJson, nil
}

func testExtendedTestdataRouterAwslbStsAlbcPermsPolicyJson() (*asset, error) {
	bytes, err := testExtendedTestdataRouterAwslbStsAlbcPermsPolicyJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/awslb/sts-albc-perms-policy.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterAwslbStsAlboPermsPolicyJson = []byte(`{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "ec2:DescribeSubnets"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
    {
      "Action": [
        "ec2:CreateTags",
        "ec2:DeleteTags"
      ],
      "Effect": "Allow",
      "Resource": "arn:aws:ec2:*:*:subnet/*"
    },
    {
      "Action": [
        "ec2:DescribeVpcs"
      ],
      "Effect": "Allow",
      "Resource": "*"
    }
  ]
}
`)

func testExtendedTestdataRouterAwslbStsAlboPermsPolicyJsonBytes() ([]byte, error) {
	return _testExtendedTestdataRouterAwslbStsAlboPermsPolicyJson, nil
}

func testExtendedTestdataRouterAwslbStsAlboPermsPolicyJson() (*asset, error) {
	bytes, err := testExtendedTestdataRouterAwslbStsAlboPermsPolicyJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/awslb/sts-albo-perms-policy.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterAwslbSubscriptionSrcQeStsYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: aws-load-balancer-operator
  namespace: aws-load-balancer-operator
spec:
  channel: stable-v1
  config:
    env:
    - name: ROLEARN
      value: fakeARN-for-albo
  installPlanApproval: Automatic
  name: aws-load-balancer-operator
  source: qe-app-registry
  sourceNamespace: openshift-marketplace
`)

func testExtendedTestdataRouterAwslbSubscriptionSrcQeStsYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterAwslbSubscriptionSrcQeStsYaml, nil
}

func testExtendedTestdataRouterAwslbSubscriptionSrcQeStsYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterAwslbSubscriptionSrcQeStsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/awslb/subscription-src-qe-sts.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterAwslbSubscriptionSrcQeYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: aws-load-balancer-operator
  namespace: aws-load-balancer-operator
spec:
  channel: stable-v1
  installPlanApproval: Automatic
  name: aws-load-balancer-operator
  source: qe-app-registry
  sourceNamespace: openshift-marketplace
`)

func testExtendedTestdataRouterAwslbSubscriptionSrcQeYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterAwslbSubscriptionSrcQeYaml, nil
}

func testExtendedTestdataRouterAwslbSubscriptionSrcQeYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterAwslbSubscriptionSrcQeYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/awslb/subscription-src-qe.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterBug1826225Proh2DeployYaml = []byte(`apiVersion: v1
kind: List
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: web-server-deploy
    labels:
      name: web-server-deploy
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: web-server-deploy
    template:
      metadata:
        labels:
          name: web-server-deploy
      spec:
        containers:
        - name: nginx
          image: quay.io/openshifttest/nginx-alpine@sha256:cee6930776b92dc1e93b73f9e5965925d49cff3d2e91e1d071c2f0ff72cbca29
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: service-h2c-57001
    name: service-h2c-57001
  spec:
    ports:
    - appProtocol: h2c
      name: h2c
      port: 1110
      protocol: TCP
      targetPort: 8080
    selector:
      name: web-server-deploy
`)

func testExtendedTestdataRouterBug1826225Proh2DeployYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterBug1826225Proh2DeployYaml, nil
}

func testExtendedTestdataRouterBug1826225Proh2DeployYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterBug1826225Proh2DeployYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/bug1826225-proh2-deploy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterBug2013004LbServicesYaml = []byte(`apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: external-lb-57089
  spec:
    ports:
    - name: https
      port: 28443
      protocol: TCP
      targetPort: 8443
    selector:
      name: web-server-rc
    type: LoadBalancer
- apiVersion: v1
  kind: Service
  metadata:
    name: internal-lb-57089
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  spec:
    ports:
    - name: https
      port: 29443
      protocol: TCP
      targetPort: 8443
    selector:
      name: web-server-rc
    type: LoadBalancer
`)

func testExtendedTestdataRouterBug2013004LbServicesYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterBug2013004LbServicesYaml, nil
}

func testExtendedTestdataRouterBug2013004LbServicesYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterBug2013004LbServicesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/bug2013004-lb-services.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterCaBundlePem = []byte(`-----BEGIN CERTIFICATE-----
MIIFDTCCAvWgAwIBAgIUDtkk2PPE+b/uQ8STNJNyuacqLq8wDQYJKoZIhvcNAQEL
BQAwFTETMBEGA1UEAwwKTkUtVGVzdC1DQTAgFw0yNTAxMTcwMzA0NDJaGA8yMDc1
MDExNzAzMDQ0MlowFTETMBEGA1UEAwwKTkUtVGVzdC1DQTCCAiIwDQYJKoZIhvcN
AQEBBQADggIPADCCAgoCggIBAJMUI8/l6x4IDw0uQtJo0f9kV3ogWkgi4yU6UD4c
Wln8TMyg4kwLDg/sADd9o7dGnReLpc0ojnZpsJwBe7AyqmYTv7Q7IfWBmo1Cic5G
FdUbFS77YcIdyU77e7S1iWIt642wJShodU6i6suqvbraR9rNv7YuDs37GRsECHlj
IDRP2GStQqVtyPWLZ8+yG+3COIq+eUD9atsqmGrAYCe4IVy1lDi37g7nupveIFTM
FqQP4NFhTKCEW0ZhnaTHukOOOKRsnec5KV1rbdtkFBH035ECrkIbUemPwuZv+hMH
WNq4cfE8osT6RsY0rxKdGrteUAb7LZJZ3EiK+f7agekO9rvtekq63tMPsbJz4JOj
vNeF0oifvrQYeL4Lv4OGxjI37pwCmbc/f95Dg9P6I9on9/h/Yyyejhlkd7nFNjDL
RhtikKR/at20QF2QKvAb+1CTexa9xIhzMY9ZxtCvQ/PJM5PRHxYv+kSDhfJqFoHc
be6SP2oXZEiXhVlWKCTnuUHjSa6sBgJlZDoT0k5mORWn64WQqBG+L+ywzvbqZX0J
08+mHvpDRQwzOOJg+3IQhsMQDaQ6w7nE9CEHv9Oh1mgoGDSPDr1NIYPRdZ5os1h5
w4sGjnxAzCTX36xU3XqkGLuDsOiBxkf+skIqZ88fr331KvQSbBw2Ia662q2SddDy
ArO3AgMBAAGjUzBRMB0GA1UdDgQWBBTopSzVEFFIz8Y6w270BvrEDDBPUDAfBgNV
HSMEGDAWgBTopSzVEFFIz8Y6w270BvrEDDBPUDAPBgNVHRMBAf8EBTADAQH/MA0G
CSqGSIb3DQEBCwUAA4ICAQCAD17WmP/yOv5I0QUXYgEYiJDVZvmDvOewWhKiTZDI
7hC6edDd4lx/hLmxzSOPHSj4K0wEA+0cVVArYCDp/uiWcV96c1531DdaYu/r2snd
FtUa8YhLB1jvBfxuTqJ1Q9+235PXDrOMprf4g7UMUk00M07D10ujIUorv0dccs3i
hmA+N83nHt9pGE2A2Cnwr++vmsy4jo9kqx5oXjAUovEP1xlOzP+tV6XjLy2tS4l1
rqfF48nnPzhK1nPUR/S7voHcvCfEV+LOCUp/PAZg0SbQDPTUBo0vajOtU4ChB84n
L5c/T2/NOHMR8kV+2d+b4rvoYaHaF9nFd0pC5d+vjAgn1BJRXXGP2tCSjxsMkwVO
C7KF8S1gXN+nXYCQbcrcRsAdCscSI+MJNv9IyMfxeZ/CtjBOQz4AYibrykp+EYL7
o0T9IW/1fjgBhC3qP/YXHLzkzUxdkktOsNdx7RzZNc0XACPcusnXx1Bw+YhQQFJT
sak7Fc8f0+4lFrQ6I2oVJ9CHWNDhSzxpXfY+JExOk8fytpvoFi4PyHyhWZOZOBSr
sshzq+cLKvLqR0rmUdrcC6PtXhM9got8xa/7cW5sbo393oZ720YEYhB4InpbmtDz
IawnZiugprouq6eaQ40KRv4xAJJXyX/yOHA0iGpjvqo8DLg5jzC8kIjulSUEIrgw
4w==
-----END CERTIFICATE-----
`)

func testExtendedTestdataRouterCaBundlePemBytes() ([]byte, error) {
	return _testExtendedTestdataRouterCaBundlePem, nil
}

func testExtendedTestdataRouterCaBundlePem() (*asset, error) {
	bytes, err := testExtendedTestdataRouterCaBundlePemBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ca-bundle.pem", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterCorednsPodYaml = []byte(`apiVersion: v1
kind: Pod
metadata:
  labels:
    name: test-coredns
  name: test-coredns
spec:
  securityContext:
    runAsNonRoot: false
    seccompProfile:
      type: RuntimeDefault
  containers:
  - args:
    - -conf
    - /etc/coredns/Corefile
    command:
    - coredns
    image: replaced-at-runtime
    imagePullPolicy: IfNotPresent
    name: coredns
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - ALL
    volumeMounts:
    - mountPath: /etc/coredns
      name: config-volume
      readOnly: true
  nodeSelector:
    kubernetes.io/os: linux
  volumes:
  - configMap:
      defaultMode: 420
      items:
      - key: Corefile
        path: Corefile
      name: test-coredns-cm
    name: config-volume
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-coredns-cm
data:
  Corefile: |
    .:53 {
        bufsize 512
        errors
        log . {
            class error
        }
        health {
            lameduck 20s
        }
        ready
        template ANY MX {
            rcode NXDOMAIN
        }
        hosts {
            192.168.11.241     www.myocp-test.com
            2000::abcd     myocp-testv6.com
        }
        prometheus 127.0.0.1:9153
        forward . 8.8.8.8 {
            policy random
        }
        cache 900 {
            denial 9984 30
        }
        reload
    }
`)

func testExtendedTestdataRouterCorednsPodYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterCorednsPodYaml, nil
}

func testExtendedTestdataRouterCorednsPodYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterCorednsPodYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/coreDNS-pod.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterEgressfirewallMultidomainYaml = []byte(`kind: EgressFirewall
apiVersion: k8s.ovn.org/v1
metadata:
  name: default
spec:
  egress:
  - type: Allow
    to:
      dnsName: registry-1.docker.io
  - type: Allow
    to:
      dnsName: www.facebook.com
    ports:
      - protocol: TCP
        port: 80
  - type: Deny
    to:
      cidrSelector: 0.0.0.0/0
  - type: Deny
    to:
      cidrSelector: ::/0
`)

func testExtendedTestdataRouterEgressfirewallMultidomainYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterEgressfirewallMultidomainYaml, nil
}

func testExtendedTestdataRouterEgressfirewallMultidomainYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterEgressfirewallMultidomainYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/egressfirewall-multiDomain.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterEgressfirewallWildcardYaml = []byte(`kind: EgressFirewall
apiVersion: k8s.ovn.org/v1
metadata:
  name: default
spec:
  egress:
  - type: Allow
    to:
      dnsName: "*.google.com"
  - type: Deny
    to:
      cidrSelector: 0.0.0.0/0
  - type: Deny
    to:
      cidrSelector: ::/0
`)

func testExtendedTestdataRouterEgressfirewallWildcardYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterEgressfirewallWildcardYaml, nil
}

func testExtendedTestdataRouterEgressfirewallWildcardYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterEgressfirewallWildcardYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/egressfirewall-wildcard.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterErrorPage404Http = []byte(`HTTP/1.0 404 Not Found
Connection: close
Content-Type: text/html

<html>
<head><title>Custom:Not Found</title></head>
<body>
<p>Custom error page:The requested document was not found.</p>
</body>
</html>
`)

func testExtendedTestdataRouterErrorPage404HttpBytes() ([]byte, error) {
	return _testExtendedTestdataRouterErrorPage404Http, nil
}

func testExtendedTestdataRouterErrorPage404Http() (*asset, error) {
	bytes, err := testExtendedTestdataRouterErrorPage404HttpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/error-page-404.http", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterErrorPage503Http = []byte(`HTTP/1.0 503 Service Unavailable
Connection: close
Content-Type: text/html

<html>
<head><title>Custom:Application Unavailable</title></head>
<body>
<p>Custom error page:The requested application is not available.</p>
</body>
</html>
`)

func testExtendedTestdataRouterErrorPage503HttpBytes() ([]byte, error) {
	return _testExtendedTestdataRouterErrorPage503Http, nil
}

func testExtendedTestdataRouterErrorPage503Http() (*asset, error) {
	bytes, err := testExtendedTestdataRouterErrorPage503HttpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/error-page-503.http", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterErrorPage2404Http = []byte(`HTTP/1.0 404 Not Found
Connection: close
Content-Type: text/html

<html>
<head><title>Custom:Not Found</title></head>
<body>
<p>Custom error page:THE REQUESTED DOCUMENT WAS NOT FOUND YET!</p>
</body>
</html>
`)

func testExtendedTestdataRouterErrorPage2404HttpBytes() ([]byte, error) {
	return _testExtendedTestdataRouterErrorPage2404Http, nil
}

func testExtendedTestdataRouterErrorPage2404Http() (*asset, error) {
	bytes, err := testExtendedTestdataRouterErrorPage2404HttpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/error-page2-404.http", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterErrorPage2503Http = []byte(`HTTP/1.0 503 Service Unavailable
Connection: close
Content-Type: text/html

<html>
<head><title>Custom:Application Unavailable</title></head>
<body>
<p>Custom error page:THE REQUESTED APPLICATION IS NOT AVAILABLE YET!</p>
</body>
</html>
`)

func testExtendedTestdataRouterErrorPage2503HttpBytes() ([]byte, error) {
	return _testExtendedTestdataRouterErrorPage2503Http, nil
}

func testExtendedTestdataRouterErrorPage2503Http() (*asset, error) {
	bytes, err := testExtendedTestdataRouterErrorPage2503HttpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/error-page2-503.http", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterExtdnsAwsStsCredsSecretYaml = []byte(`apiVersion: v1
kind: Secret
metadata:
  name: aws-sts-creds
  namespace: external-dns-operator
stringData:
  credentials: |-
    [default]
    sts_regional_endpoints = regional
    role_arn = external-dns-role-arn
    web_identity_token_file = /var/run/secrets/openshift/serviceaccount/token
`)

func testExtendedTestdataRouterExtdnsAwsStsCredsSecretYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterExtdnsAwsStsCredsSecretYaml, nil
}

func testExtendedTestdataRouterExtdnsAwsStsCredsSecretYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterExtdnsAwsStsCredsSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/extdns/aws-sts-creds-secret.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterExtdnsNsExternalDnsOperatorYaml = []byte(`apiVersion: v1
kind: Namespace
metadata:
  name: external-dns-operator
`)

func testExtendedTestdataRouterExtdnsNsExternalDnsOperatorYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterExtdnsNsExternalDnsOperatorYaml, nil
}

func testExtendedTestdataRouterExtdnsNsExternalDnsOperatorYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterExtdnsNsExternalDnsOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/extdns/ns-external-dns-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterExtdnsOperatorgroupYaml = []byte(`apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: external-dns-group
  namespace: external-dns-operator
spec:
  targetNamespaces:
  - external-dns-operator
`)

func testExtendedTestdataRouterExtdnsOperatorgroupYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterExtdnsOperatorgroupYaml, nil
}

func testExtendedTestdataRouterExtdnsOperatorgroupYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterExtdnsOperatorgroupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/extdns/operatorgroup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterExtdnsSampleAwsRtYaml = []byte(`apiVersion: externaldns.olm.openshift.io/v1beta1
kind: ExternalDNS
metadata:
  name: sample-aws-rt
spec:
  domains:
  - filterType: Include
    matchType: Exact
    name: basedomain
  provider:
    type: AWS
  source:
    openshiftRouteOptions:
      routerName: default
    type: OpenShiftRoute
    labelFilter:
      matchLabels:
        external-dns.mydomain.org/publish: "yes"
`)

func testExtendedTestdataRouterExtdnsSampleAwsRtYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterExtdnsSampleAwsRtYaml, nil
}

func testExtendedTestdataRouterExtdnsSampleAwsRtYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterExtdnsSampleAwsRtYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/extdns/sample-aws-rt.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterExtdnsSampleAwsSharedvpcRtYaml = []byte(`apiVersion: externaldns.olm.openshift.io/v1beta1
kind: ExternalDNS
metadata:
  name: sample-aws-sharedvpc-rt
spec:
  domains:
  - filterType: Include
    matchType: Exact
    name: basedomain
  provider:
    type: AWS
    aws:
      assumeRole:
        arn: privatezoneiamrole
  source:
    openshiftRouteOptions:
      routerName: default
    type: OpenShiftRoute
    labelFilter:
      matchLabels:
        external-dns.mydomain.org/publish: "yes"
`)

func testExtendedTestdataRouterExtdnsSampleAwsSharedvpcRtYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterExtdnsSampleAwsSharedvpcRtYaml, nil
}

func testExtendedTestdataRouterExtdnsSampleAwsSharedvpcRtYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterExtdnsSampleAwsSharedvpcRtYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/extdns/sample-aws-sharedvpc-rt.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterExtdnsSampleAwsStsRtYaml = []byte(`apiVersion: externaldns.olm.openshift.io/v1beta1
kind: ExternalDNS
metadata:
  name: sample-aws-sts-rt
spec:
  domains:
  - filterType: Include
    matchType: Exact
    name: basedomain
  provider:
    type: AWS
    aws:
      credentials:
        name: aws-sts-creds
  zones:
    - privatezone
  source:
    labelFilter:
      matchLabels:
        external-dns.mydomain.org/publish: "yes"
    openshiftRouteOptions:
      routerName: default
    type: OpenShiftRoute
`)

func testExtendedTestdataRouterExtdnsSampleAwsStsRtYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterExtdnsSampleAwsStsRtYaml, nil
}

func testExtendedTestdataRouterExtdnsSampleAwsStsRtYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterExtdnsSampleAwsStsRtYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/extdns/sample-aws-sts-rt.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterExtdnsSampleAzureRtYaml = []byte(`apiVersion: externaldns.olm.openshift.io/v1beta1
kind: ExternalDNS
metadata:
  name: sample-azure-rt
spec:
  provider:
    type: Azure
  source:
    labelFilter:
      matchLabels:
        external-dns.mydomain.org/publish: "yes"
    openshiftRouteOptions:
      routerName: default
    type: OpenShiftRoute
  zones:
  - "mydomain.org"
`)

func testExtendedTestdataRouterExtdnsSampleAzureRtYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterExtdnsSampleAzureRtYaml, nil
}

func testExtendedTestdataRouterExtdnsSampleAzureRtYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterExtdnsSampleAzureRtYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/extdns/sample-azure-rt.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterExtdnsSampleGcpSvcYaml = []byte(`apiVersion: externaldns.olm.openshift.io/v1beta1
kind: ExternalDNS
metadata:
  name: sample-gcp-svc
spec:
  provider:
    type: GCP
  source:
    labelFilter:
      matchLabels:
        external-dns.mydomain.org/publish: "yes"
    service:
      serviceType:
        - LoadBalancer
        - ClusterIP
    type: Service
    fqdnTemplate:
    - "{{.Name}}.mydomain.org"
  zones:
  - "mydomain.org"
`)

func testExtendedTestdataRouterExtdnsSampleGcpSvcYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterExtdnsSampleGcpSvcYaml, nil
}

func testExtendedTestdataRouterExtdnsSampleGcpSvcYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterExtdnsSampleGcpSvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/extdns/sample-gcp-svc.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterExtdnsStsExdnsPermsPolicyJson = []byte(`{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "route53:ChangeResourceRecordSets"
      ],
      "Resource": [
        "arn:aws:route53:::hostedzone/*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "route53:ListHostedZones",
        "route53:ListResourceRecordSets",
        "route53:ListTagsForResource"
      ],
      "Resource": [
        "*"
      ]
    }
  ]
}
`)

func testExtendedTestdataRouterExtdnsStsExdnsPermsPolicyJsonBytes() ([]byte, error) {
	return _testExtendedTestdataRouterExtdnsStsExdnsPermsPolicyJson, nil
}

func testExtendedTestdataRouterExtdnsStsExdnsPermsPolicyJson() (*asset, error) {
	bytes, err := testExtendedTestdataRouterExtdnsStsExdnsPermsPolicyJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/extdns/sts-exdns-perms-policy.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterExtdnsSubscriptionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: external-dns-operator
  namespace: external-dns-operator
spec:
  channel: stable-v1
  installPlanApproval: Automatic
  name: external-dns-operator
  source: qe-app-registry
  sourceNamespace: openshift-marketplace
`)

func testExtendedTestdataRouterExtdnsSubscriptionYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterExtdnsSubscriptionYaml, nil
}

func testExtendedTestdataRouterExtdnsSubscriptionYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterExtdnsSubscriptionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/extdns/subscription.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterGatewayYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: gateway.networking.k8s.io/v1
  kind: Gateway
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    gatewayClassName: openshift-default
    listeners:
    - name: demo
      hostname: ${HOSTNAME}
      port: 80
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: Selector
          selector:
            matchLabels:
              app: gwapi
parameters:
- name: NAME
  value: gateway-default
- name: NAMESPACE
  value: openshift-ingress
- name: HOSTNAME
  value: gwapi.example.com`)

func testExtendedTestdataRouterGatewayYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterGatewayYaml, nil
}

func testExtendedTestdataRouterGatewayYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterGatewayYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/gateway.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterGatewayclassYaml = []byte(`apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: openshift-default
spec:
  controllerName: openshift.io/gateway-controller/v1
`)

func testExtendedTestdataRouterGatewayclassYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterGatewayclassYaml, nil
}

func testExtendedTestdataRouterGatewayclassYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterGatewayclassYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/gatewayclass.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterHttpbinDeployYaml = []byte(`apiVersion: v1
kind: List
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: httpbin-pod
    labels:
      name: httpbin-pod
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: httpbin-pod
    template:
      metadata:
        labels:
          name: httpbin-pod
      spec:
        containers:
        - name: httpbin-http
          image: quay.io/openshifttest/httpbin@sha256:cc44fbd857f4148d8aad8359acc03efa719517e01d390b152e4f3830ad871c9f 
          ports:
          - containerPort: 8080
        - name: httpbin-https
          image: quay.io/openshifttest/httpbin@sha256:f57f4e682e05bcdadb103c93ae5ab9be166f79bcbbccaf45d92a2cad18da8d64
          ports:
          - containerPort: 8443
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: httpbin-svc-insecure
    name: httpbin-svc-insecure
  spec:
    ports:
    - name: http
      port: 27017
      protocol: TCP
      targetPort: 8080
    selector:
      name: httpbin-pod
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: httpbin-svc-secure
    name: httpbin-svc-secure
  spec:
    ports:
    - name: https
      port: 27443
      protocol: TCP
      targetPort: 8443
    selector:
      name: httpbin-pod
`)

func testExtendedTestdataRouterHttpbinDeployYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterHttpbinDeployYaml, nil
}

func testExtendedTestdataRouterHttpbinDeployYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterHttpbinDeployYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/httpbin-deploy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterHttpbinPodWithprivilegeJson = []byte(`{
  "kind": "Pod",
  "apiVersion":"v1",
  "metadata": {
        "name": "httpbin-pod",
        "labels": {
                "name": "httpbin-pod"
        }
  },
  "spec": {
      "containers": [{
        "name": "httpbin-http",
        "image": "quay.io/openshifttest/httpbin@sha256:ffed23268de41390b8b9417c8835fd125f80d07b19dd9ba5b2273c0145e8f479",
        "ports": [
          {
            "containerPort": 8080,
            "securityContext": {
              "privileged": "true"
            }
          }
        ]
      },
      {
        "name": "httpbin-https",
        "image": "quay.io/openshifttest/httpbin@sha256:b6239cf4c31274db9cb87a9f6216a36d9d6ded5694c71eac3c9b13c17c4f98c5",
        "ports": [
          {
            "containerPort": 8443,
            "securityContext": {
              "privileged": "true"
            }
          }
        ]
      }]
  }
}
`)

func testExtendedTestdataRouterHttpbinPodWithprivilegeJsonBytes() ([]byte, error) {
	return _testExtendedTestdataRouterHttpbinPodWithprivilegeJson, nil
}

func testExtendedTestdataRouterHttpbinPodWithprivilegeJson() (*asset, error) {
	bytes, err := testExtendedTestdataRouterHttpbinPodWithprivilegeJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/httpbin-pod-withprivilege.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterHttpbinService_secureJson = []byte(`{
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
        "name": "httpbin-svc-secure"
    },
    "spec": {
        "ports": [
            {
                "name": "https",
                "protocol": "TCP",
                "port": 27443,
                "targetPort": 8443
            }
        ],
        "selector": {
            "name": "httpbin-pod"
        }
    }
}
`)

func testExtendedTestdataRouterHttpbinService_secureJsonBytes() ([]byte, error) {
	return _testExtendedTestdataRouterHttpbinService_secureJson, nil
}

func testExtendedTestdataRouterHttpbinService_secureJson() (*asset, error) {
	bytes, err := testExtendedTestdataRouterHttpbinService_secureJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/httpbin-service_secure.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterHttprouteYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    parentRefs:
    - name: ${GWNAME}
      namespace: openshift-ingress
    hostnames: ["${HOSTNAME}"]
    rules:
    - backendRefs:
      - name: service-unsecure
        port: 27017
parameters:
- name: NAME
- name: NAMESPACE
- name: GWNAME
- name: HOSTNAME
`)

func testExtendedTestdataRouterHttprouteYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterHttprouteYaml, nil
}

func testExtendedTestdataRouterHttprouteYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterHttprouteYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/httproute.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngressDestcaYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: ${NAME}
    annotations:
      route.openshift.io/destination-ca-certificate-secret: service-secret
      route.openshift.io/termination: reencrypt
  namespace: ${NAMESPACE}
  spec:
    rules:
    - host: ${SERVICE_NAME}-${NAMESPACE}.${DOMAIN}
      http:
        paths:
        - backend:
            service:
              name: ${SERVICE_NAME}
              port:
                number: 27443
          path: "/"
          pathType: Prefix
parameters:
- name: NAME
- name: NAMESPACE
- name: DOMAIN
- name: SERVICE_NAME
`)

func testExtendedTestdataRouterIngressDestcaYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngressDestcaYaml, nil
}

func testExtendedTestdataRouterIngressDestcaYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngressDestcaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingress-destCA.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngressResourceYaml = []byte(`kind: List
items:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: ingress-edge
    annotations:
      route.openshift.io/termination: "edge"
  spec:
    rules:
    - host: edgehostname
      http:
        paths:
        - path: "/"
          backend:
            service:
              name: service-unsecure
              port: 
                number: 27017
          pathType: "Prefix"
    tls:
    - hosts:
      - hostname1
      secretName: ingress-secret
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: ingress-passth
    annotations:
      route.openshift.io/termination: passthrough
  spec:
    rules:
    - host: passhostname
      http:
        paths:
        - path: ''
          pathType: ImplementationSpecific
          backend:
            service:
              name: service-secure
              port: 
                number: 27443
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: ingress-reencrypt
    annotations:
      route.openshift.io/termination: "reencrypt"
  spec:
    rules:
    - host: reenhostname
      http:
        paths:
        - path: "/"
          backend:
            service:
              name: service-secure
              port: 
                number: 27443
          pathType: "Prefix"
    tls:
    - hosts:
      - hostname3
      secretName: ingress-secret
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: ingress-random
    annotations:
      route.openshift.io/termination: "abcd"
  spec:
    rules:
    - host: randomhostname
      http:
        paths:
        - path: "/"
          backend:
            service:
              name: service-unsecure
              port: 
                number: 27017
          pathType: "Prefix"
    tls:
    - hosts:
      - randomhostname
      secretName: ingress-secret`)

func testExtendedTestdataRouterIngressResourceYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngressResourceYaml, nil
}

func testExtendedTestdataRouterIngressResourceYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngressResourceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingress-resource.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngressWithClassYaml = []byte(`apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-with-class
spec:
  ingressClassName: mytest
  rules:
  - host: foo.bar.com
    http:
      paths:
      - backend:
          service:
            name: service-unsecure
            port:
              number: 27017
        path: /test
        pathType: ImplementationSpecific
`)

func testExtendedTestdataRouterIngressWithClassYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngressWithClassYaml, nil
}

func testExtendedTestdataRouterIngressWithClassYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngressWithClassYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingress-with-class.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerIbmproxyYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    replicas: 1
    endpointPublishingStrategy:
      loadBalancer:
        dnsManagementPolicy: Managed
        providerParameters:
          ibm:
            protocol: PROXY
          type: IBM
        scope: External
      type: LoadBalancerService
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerIbmproxyYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerIbmproxyYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerIbmproxyYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerIbmproxyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-IBMproxy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerAzureCidrYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    replicas: 1
    endpointPublishingStrategy:
      type: LoadBalancerService
      loadBalancer:
        DNSManagementPolicy: Managed
        scope: External
        allowedSourceRanges:
        - 1.1.1.2/32
        - 1.1.1.4/32
        - 1.1.1.6/32
        - 1.1.1.8/32
        - 1.1.1.10/32
        - 1.1.1.12/32
        - 1.1.1.14/32
        - 1.1.1.16/32
        - 1.1.1.18/32
        - 1.1.1.20/32
        - 1.1.1.22/32
        - 1.1.1.24/32
        - 1.1.1.26/32
        - 1.1.1.28/32
        - 1.1.1.30/32
        - 1.1.1.32/32
        - 1.1.1.34/32
        - 1.1.1.36/32
        - 1.1.1.38/32
        - 1.1.1.40/32
        - 1.1.1.42/32
        - 1.1.1.44/32
        - 1.1.1.46/32
        - 1.1.1.48/32
        - 1.1.1.50/32
        - 1.1.1.52/32
        - 1.1.1.54/32
        - 1.1.1.56/32
        - 1.1.1.58/32
        - 1.1.1.60/32
        - 1.1.1.62/32
        - 1.1.1.64/32
        - 1.1.1.66/32
        - 1.1.1.68/32
        - 1.1.1.70/32
        - 1.1.1.72/32
        - 1.1.1.74/32
        - 1.1.1.76/32
        - 1.1.1.78/32
        - 1.1.1.80/32
        - 1.1.1.82/32
        - 1.1.1.84/32
        - 1.1.1.86/32
        - 1.1.1.88/32
        - 1.1.1.90/32
        - 1.1.1.92/32
        - 1.1.1.94/32
        - 1.1.1.96/32
        - 1.1.1.98/32
        - 1.1.1.100/32
        - 1.1.1.102/32
        - 1.1.1.104/32
        - 1.1.1.106/32
        - 1.1.1.108/32
        - 1.1.1.110/32
        - 1.1.1.112/32
        - 1.1.1.114/32
        - 1.1.1.116/32
        - 1.1.1.118/32
        - 1.1.1.120/32
        - 1.1.1.122/32
        - 1.1.1.124/32
        - 1.1.1.126/32
        - 1.1.1.128/32
        - 1.1.1.130/32
        - 1.1.1.132/32
        - 1.1.1.134/32
        - 1.1.1.136/32
        - 1.1.1.138/32
        - 1.1.1.140/32
        - 1.1.1.142/32
        - 1.1.1.144/32
        - 1.1.1.146/32
        - 1.1.1.148/32
        - 1.1.1.150/32
        - 1.1.1.152/32
        - 1.1.1.154/32
        - 1.1.1.156/32
        - 1.1.1.158/32
        - 1.1.1.160/32
        - 1.1.1.162/32
        - 1.1.1.164/32
        - 1.1.1.166/32
        - 1.1.1.168/32
        - 1.1.1.170/32
        - 1.1.1.172/32
        - 1.1.1.174/32
        - 1.1.1.176/32
        - 1.1.1.178/32
        - 1.1.1.180/32
        - 1.1.1.182/32
        - 1.1.1.184/32
        - 1.1.1.186/32
        - 1.1.1.188/32
        - 1.1.1.190/32
        - 1.1.1.192/32
        - 1.1.1.194/32
        - 1.1.1.196/32
        - 1.1.1.198/32
        - 1.1.1.200/32
        - 1.1.1.202/32
        - 1.1.1.204/32
        - 1.1.1.206/32
        - 1.1.1.208/32
        - 1.1.1.210/32
        - 1.1.1.212/32
        - 1.1.1.214/32
        - 1.1.1.216/32
        - 1.1.1.218/32
        - 1.1.1.220/32
        - 1.1.1.222/32
        - 1.1.1.224/32
        - 1.1.1.226/32
        - 1.1.1.228/32
        - 1.1.1.230/32
        - 1.1.1.232/32
        - 1.1.1.234/32
        - 1.1.1.236/32
        - 1.1.1.238/32
        - 1.1.1.240/32
        - 1.1.1.242/32
        - 1.1.1.244/32
        - 1.1.1.246/32
        - 1.1.1.248/32
        - 1.1.1.250/32
        - 1.1.1.252/32
        - 1.1.1.254/32
        - 1.1.2.2/32
        - 1.1.2.4/32
        - 1.1.2.6/32
        - 1.1.2.8/32
        - 1.1.2.10/32
        - 1.1.2.12/32
        - 1.1.2.14/32
        - 1.1.2.16/32
        - 1.1.2.18/32
        - 1.1.2.20/32
        - 1.1.2.22/32
        - 1.1.2.24/32
        - 1.1.2.26/32
        - 1.1.2.28/32
        - 1.1.2.30/32
        - 1.1.2.32/32
        - 1.1.2.34/32
        - 1.1.2.36/32
        - 1.1.2.38/32
        - 1.1.2.40/32
        - 1.1.2.42/32
        - 1.1.2.44/32
        - 1.1.2.46/32
        - 1.1.2.48/32
        - 1.1.2.50/32
        - 1.1.2.52/32
        - 1.1.2.54/32
        - 1.1.2.56/32
        - 1.1.2.58/32
        - 1.1.2.60/32
        - 1.1.2.62/32
        - 1.1.2.64/32
        - 1.1.2.66/32
        - 1.1.2.68/32
        - 1.1.2.70/32
        - 1.1.2.72/32
        - 1.1.2.74/32
        - 1.1.2.76/32
        - 1.1.2.78/32
        - 1.1.2.80/32
        - 1.1.2.82/32
        - 1.1.2.84/32
        - 1.1.2.86/32
        - 1.1.2.88/32
        - 1.1.2.90/32
        - 1.1.2.92/32
        - 1.1.2.94/32
        - 1.1.2.96/32
        - 1.1.2.98/32
        - 1.1.2.100/32
        - 1.1.2.102/32
        - 1.1.2.104/32
        - 1.1.2.106/32
        - 1.1.2.108/32
        - 1.1.2.110/32
        - 1.1.2.112/32
        - 1.1.2.114/32
        - 1.1.2.116/32
        - 1.1.2.118/32
        - 1.1.2.120/32
        - 1.1.2.122/32
        - 1.1.2.124/32
        - 1.1.2.126/32
        - 1.1.2.128/32
        - 1.1.2.130/32
        - 1.1.2.132/32
        - 1.1.2.134/32
        - 1.1.2.136/32
        - 1.1.2.138/32
        - 1.1.2.140/32
        - 1.1.2.142/32
        - 1.1.2.144/32
        - 1.1.2.146/32
        - 1.1.2.148/32
        - 1.1.2.150/32
        - 1.1.2.152/32
        - 1.1.2.154/32
        - 1.1.2.156/32
        - 1.1.2.158/32
        - 1.1.2.160/32
        - 1.1.2.162/32
        - 1.1.2.164/32
        - 1.1.2.166/32
        - 1.1.2.168/32
        - 1.1.2.170/32
        - 1.1.2.172/32
        - 1.1.2.174/32
        - 1.1.2.176/32
        - 1.1.2.178/32
        - 1.1.2.180/32
        - 1.1.2.182/32
        - 1.1.2.184/32
        - 1.1.2.186/32
        - 1.1.2.188/32
        - 1.1.2.190/32
        - 1.1.2.192/32
        - 1.1.2.194/32
        - 1.1.2.196/32
        - 1.1.2.198/32
        - 1.1.2.200/32
        - 1.1.2.202/32
        - 1.1.2.204/32
        - 1.1.2.206/32
        - 1.1.2.208/32
        - 1.1.2.210/32
        - 1.1.2.212/32
        - 1.1.2.214/32
        - 1.1.2.216/32
        - 1.1.2.218/32
        - 1.1.2.220/32
        - 1.1.2.222/32
        - 1.1.2.224/32
        - 1.1.2.226/32
        - 1.1.2.228/32
        - 1.1.2.230/32
        - 1.1.2.232/32
        - 1.1.2.234/32
        - 1.1.2.236/32
        - 1.1.2.238/32
        - 1.1.2.240/32
        - 1.1.2.242/32
        - 1.1.2.244/32
        - 1.1.2.246/32
        - 1.1.2.248/32
        - 1.1.2.250/32
        - 1.1.2.252/32
        - 1.1.2.254/32
        - 1.1.3.2/32
        - 1.1.3.4/32
        - 1.1.3.6/32
        - 1.1.3.8/32
        - 1.1.3.10/32
        - 1.1.3.12/32
        - 1.1.3.14/32
        - 1.1.3.16/32
        - 1.1.3.18/32
        - 1.1.3.20/32
        - 1.1.3.22/32
        - 1.1.3.24/32
        - 1.1.3.26/32
        - 1.1.3.28/32
        - 1.1.3.30/32
        - 1.1.3.32/32
        - 1.1.3.34/32
        - 1.1.3.36/32
        - 1.1.3.38/32
        - 1.1.3.40/32
        - 1.1.3.42/32
        - 1.1.3.44/32
        - 1.1.3.46/32
        - 1.1.3.48/32
        - 1.1.3.50/32
        - 1.1.3.52/32
        - 1.1.3.54/32
        - 1.1.3.56/32
        - 1.1.3.58/32
        - 1.1.3.60/32
        - 1.1.3.62/32
        - 1.1.3.64/32
        - 1.1.3.66/32
        - 1.1.3.68/32
        - 1.1.3.70/32
        - 1.1.3.72/32
        - 1.1.3.74/32
        - 1.1.3.76/32
        - 1.1.3.78/32
        - 1.1.3.80/32
        - 1.1.3.82/32
        - 1.1.3.84/32
        - 1.1.3.86/32
        - 1.1.3.88/32
        - 1.1.3.90/32
        - 1.1.3.92/32
        - 1.1.3.94/32
        - 1.1.3.96/32
        - 1.1.3.98/32
        - 1.1.3.100/32
        - 1.1.3.102/32
        - 1.1.3.104/32
        - 1.1.3.106/32
        - 1.1.3.108/32
        - 1.1.3.110/32
        - 1.1.3.112/32
        - 1.1.3.114/32
        - 1.1.3.116/32
        - 1.1.3.118/32
        - 1.1.3.120/32
        - 1.1.3.122/32
        - 1.1.3.124/32
        - 1.1.3.126/32
        - 1.1.3.128/32
        - 1.1.3.130/32
        - 1.1.3.132/32
        - 1.1.3.134/32
        - 1.1.3.136/32
        - 1.1.3.138/32
        - 1.1.3.140/32
        - 1.1.3.142/32
        - 1.1.3.144/32
        - 1.1.3.146/32
        - 1.1.3.148/32
        - 1.1.3.150/32
        - 1.1.3.152/32
        - 1.1.3.154/32
        - 1.1.3.156/32
        - 1.1.3.158/32
        - 1.1.3.160/32
        - 1.1.3.162/32
        - 1.1.3.164/32
        - 1.1.3.166/32
        - 1.1.3.168/32
        - 1.1.3.170/32
        - 1.1.3.172/32
        - 1.1.3.174/32
        - 1.1.3.176/32
        - 1.1.3.178/32
        - 1.1.3.180/32
        - 1.1.3.182/32
        - 1.1.3.184/32
        - 1.1.3.186/32
        - 1.1.3.188/32
        - 1.1.3.190/32
        - 1.1.3.192/32
        - 1.1.3.194/32
        - 1.1.3.196/32
        - 1.1.3.198/32
        - 1.1.3.200/32
        - 1.1.3.202/32
        - 1.1.3.204/32
        - 1.1.3.206/32
        - 1.1.3.208/32
        - 1.1.3.210/32
        - 1.1.3.212/32
        - 1.1.3.214/32
        - 1.1.3.216/32
        - 1.1.3.218/32
        - 1.1.3.220/32
        - 1.1.3.222/32
        - 1.1.3.224/32
        - 1.1.3.226/32
        - 1.1.3.228/32
        - 1.1.3.230/32
        - 1.1.3.232/32
        - 1.1.3.234/32
        - 1.1.3.236/32
        - 1.1.3.238/32
        - 1.1.3.240/32
        - 1.1.3.242/32
        - 1.1.3.244/32
        - 1.1.3.246/32
        - 1.1.3.248/32
        - 1.1.3.250/32
        - 1.1.3.252/32
        - 1.1.3.254/32
        - 1.1.4.2/32
        - 1.1.4.4/32
        - 1.1.4.6/32
        - 1.1.4.8/32
        - 1.1.4.10/32
        - 1.1.4.12/32
        - 1.1.4.14/32
        - 1.1.4.16/32
        - 1.1.4.18/32
        - 1.1.4.20/32
        - 1.1.4.22/32
        - 1.1.4.24/32
        - 1.1.4.26/32
        - 1.1.4.28/32
        - 1.1.4.30/32
        - 1.1.4.32/32
        - 1.1.4.34/32
        - 1.1.4.36/32
        - 1.1.4.38/32
        - 1.1.4.40/32
        - 1.1.4.42/32
        - 1.1.4.44/32
        - 1.1.4.46/32
        - 1.1.4.48/32
        - 1.1.4.50/32
        - 1.1.4.52/32
        - 1.1.4.54/32
        - 1.1.4.56/32
        - 1.1.4.58/32
        - 1.1.4.60/32
        - 1.1.4.62/32
        - 1.1.4.64/32
        - 1.1.4.66/32
        - 1.1.4.68/32
        - 1.1.4.70/32
        - 1.1.4.72/32
        - 1.1.4.74/32
        - 1.1.4.76/32
        - 1.1.4.78/32
        - 1.1.4.80/32
        - 1.1.4.82/32
        - 1.1.4.84/32
        - 1.1.4.86/32
        - 1.1.4.88/32
        - 1.1.4.90/32
        - 1.1.4.92/32
        - 1.1.4.94/32
        - 1.1.4.96/32
        - 1.1.4.98/32
        - 1.1.4.100/32
        - 1.1.4.102/32
        - 1.1.4.104/32
        - 1.1.4.106/32
        - 1.1.4.108/32
        - 1.1.4.110/32
        - 1.1.4.112/32
        - 1.1.4.114/32
        - 1.1.4.116/32
        - 1.1.4.118/32
        - 1.1.4.120/32
        - 1.1.4.122/32
        - 1.1.4.124/32
        - 1.1.4.126/32
        - 1.1.4.128/32
        - 1.1.4.130/32
        - 1.1.4.132/32
        - 1.1.4.134/32
        - 1.1.4.136/32
        - 1.1.4.138/32
        - 1.1.4.140/32
        - 1.1.4.142/32
        - 1.1.4.144/32
        - 1.1.4.146/32
        - 1.1.4.148/32
        - 1.1.4.150/32
        - 1.1.4.152/32
        - 1.1.4.154/32
        - 1.1.4.156/32
        - 1.1.4.158/32
        - 1.1.4.160/32
        - 1.1.4.162/32
        - 1.1.4.164/32
        - 1.1.4.166/32
        - 1.1.4.168/32
        - 1.1.4.170/32
        - 1.1.4.172/32
        - 1.1.4.174/32
        - 1.1.4.176/32
        - 1.1.4.178/32
        - 1.1.4.180/32
        - 1.1.4.182/32
        - 1.1.4.184/32
        - 1.1.4.186/32
        - 1.1.4.188/32
        - 1.1.4.190/32
        - 1.1.4.192/32
        - 1.1.4.194/32
        - 1.1.4.196/32
        - 1.1.4.198/32
        - 1.1.4.200/32
        - 1.1.4.202/32
        - 1.1.4.204/32
        - 1.1.4.206/32
        - 1.1.4.208/32
        - 1.1.4.210/32
        - 1.1.4.212/32
        - 1.1.4.214/32
        - 1.1.4.216/32
        - 1.1.4.218/32
        - 1.1.4.220/32
        - 1.1.4.222/32
        - 1.1.4.224/32
        - 1.1.4.226/32
        - 1.1.4.228/32
        - 1.1.4.230/32
        - 1.1.4.232/32
        - 1.1.4.234/32
        - 1.1.4.236/32
        - 1.1.4.238/32
        - 1.1.4.240/32
        - 1.1.4.242/32
        - 1.1.4.244/32
        - 1.1.4.246/32
        - 1.1.4.248/32
        - 1.1.4.250/32
        - 1.1.4.252/32
        - 1.1.4.254/32
        - 1.1.5.2/32
        - 1.1.5.4/32
        - 1.1.5.6/32
        - 1.1.5.8/32
        - 1.1.5.10/32
        - 1.1.5.12/32
        - 1.1.5.14/32
        - 1.1.5.16/32
        - 1.1.5.18/32
        - 1.1.5.20/32
        - 1.1.5.22/32
        - 1.1.5.24/32
        - 1.1.5.26/32
        - 1.1.5.28/32
        - 1.1.5.30/32
        - 1.1.5.32/32
        - 1.1.5.34/32
        - 1.1.5.36/32
        - 1.1.5.38/32
        - 1.1.5.40/32
        - 1.1.5.42/32
        - 1.1.5.44/32
        - 1.1.5.46/32
        - 1.1.5.48/32
        - 1.1.5.50/32
        - 1.1.5.52/32
        - 1.1.5.54/32
        - 1.1.5.56/32
        - 1.1.5.58/32
        - 1.1.5.60/32
        - 1.1.5.62/32
        - 1.1.5.64/32
        - 1.1.5.66/32
        - 1.1.5.68/32
        - 1.1.5.70/32
        - 1.1.5.72/32
        - 1.1.5.74/32
        - 1.1.5.76/32
        - 1.1.5.78/32
        - 1.1.5.80/32
        - 1.1.5.82/32
        - 1.1.5.84/32
        - 1.1.5.86/32
        - 1.1.5.88/32
        - 1.1.5.90/32
        - 1.1.5.92/32
        - 1.1.5.94/32
        - 1.1.5.96/32
        - 1.1.5.98/32
        - 1.1.5.100/32
        - 1.1.5.102/32
        - 1.1.5.104/32
        - 1.1.5.106/32
        - 1.1.5.108/32
        - 1.1.5.110/32
        - 1.1.5.112/32
        - 1.1.5.114/32
        - 1.1.5.116/32
        - 1.1.5.118/32
        - 1.1.5.120/32
        - 1.1.5.122/32
        - 1.1.5.124/32
        - 1.1.5.126/32
        - 1.1.5.128/32
        - 1.1.5.130/32
        - 1.1.5.132/32
        - 1.1.5.134/32
        - 1.1.5.136/32
        - 1.1.5.138/32
        - 1.1.5.140/32
        - 1.1.5.142/32
        - 1.1.5.144/32
        - 1.1.5.146/32
        - 1.1.5.148/32
        - 1.1.5.150/32
        - 1.1.5.152/32
        - 1.1.5.154/32
        - 1.1.5.156/32
        - 1.1.5.158/32
        - 1.1.5.160/32
        - 1.1.5.162/32
        - 1.1.5.164/32
        - 1.1.5.166/32
        - 1.1.5.168/32
        - 1.1.5.170/32
        - 1.1.5.172/32
        - 1.1.5.174/32
        - 1.1.5.176/32
        - 1.1.5.178/32
        - 1.1.5.180/32
        - 1.1.5.182/32
        - 1.1.5.184/32
        - 1.1.5.186/32
        - 1.1.5.188/32
        - 1.1.5.190/32
        - 1.1.5.192/32
        - 1.1.5.194/32
        - 1.1.5.196/32
        - 1.1.5.198/32
        - 1.1.5.200/32
        - 1.1.5.202/32
        - 1.1.5.204/32
        - 1.1.5.206/32
        - 1.1.5.208/32
        - 1.1.5.210/32
        - 1.1.5.212/32
        - 1.1.5.214/32
        - 1.1.5.216/32
        - 1.1.5.218/32
        - 1.1.5.220/32
        - 1.1.5.222/32
        - 1.1.5.224/32
        - 1.1.5.226/32
        - 1.1.5.228/32
        - 1.1.5.230/32
        - 1.1.5.232/32
        - 1.1.5.234/32
        - 1.1.5.236/32
        - 1.1.5.238/32
        - 1.1.5.240/32
        - 1.1.5.242/32
        - 1.1.5.244/32
        - 1.1.5.246/32
        - 1.1.5.248/32
        - 1.1.5.250/32
        - 1.1.5.252/32
        - 1.1.5.254/32
        - 1.1.6.2/32
        - 1.1.6.4/32
        - 1.1.6.6/32
        - 1.1.6.8/32
        - 1.1.6.10/32
        - 1.1.6.12/32
        - 1.1.6.14/32
        - 1.1.6.16/32
        - 1.1.6.18/32
        - 1.1.6.20/32
        - 1.1.6.22/32
        - 1.1.6.24/32
        - 1.1.6.26/32
        - 1.1.6.28/32
        - 1.1.6.30/32
        - 1.1.6.32/32
        - 1.1.6.34/32
        - 1.1.6.36/32
        - 1.1.6.38/32
        - 1.1.6.40/32
        - 1.1.6.42/32
        - 1.1.6.44/32
        - 1.1.6.46/32
        - 1.1.6.48/32
        - 1.1.6.50/32
        - 1.1.6.52/32
        - 1.1.6.54/32
        - 1.1.6.56/32
        - 1.1.6.58/32
        - 1.1.6.60/32
        - 1.1.6.62/32
        - 1.1.6.64/32
        - 1.1.6.66/32
        - 1.1.6.68/32
        - 1.1.6.70/32
        - 1.1.6.72/32
        - 1.1.6.74/32
        - 1.1.6.76/32
        - 1.1.6.78/32
        - 1.1.6.80/32
        - 1.1.6.82/32
        - 1.1.6.84/32
        - 1.1.6.86/32
        - 1.1.6.88/32
        - 1.1.6.90/32
        - 1.1.6.92/32
        - 1.1.6.94/32
        - 1.1.6.96/32
        - 1.1.6.98/32
        - 1.1.6.100/32
        - 1.1.6.102/32
        - 1.1.6.104/32
        - 1.1.6.106/32
        - 1.1.6.108/32
        - 1.1.6.110/32
        - 1.1.6.112/32
        - 1.1.6.114/32
        - 1.1.6.116/32
        - 1.1.6.118/32
        - 1.1.6.120/32
        - 1.1.6.122/32
        - 1.1.6.124/32
        - 1.1.6.126/32
        - 1.1.6.128/32
        - 1.1.6.130/32
        - 1.1.6.132/32
        - 1.1.6.134/32
        - 1.1.6.136/32
        - 1.1.6.138/32
        - 1.1.6.140/32
        - 1.1.6.142/32
        - 1.1.6.144/32
        - 1.1.6.146/32
        - 1.1.6.148/32
        - 1.1.6.150/32
        - 1.1.6.152/32
        - 1.1.6.154/32
        - 1.1.6.156/32
        - 1.1.6.158/32
        - 1.1.6.160/32
        - 1.1.6.162/32
        - 1.1.6.164/32
        - 1.1.6.166/32
        - 1.1.6.168/32
        - 1.1.6.170/32
        - 1.1.6.172/32
        - 1.1.6.174/32
        - 1.1.6.176/32
        - 1.1.6.178/32
        - 1.1.6.180/32
        - 1.1.6.182/32
        - 1.1.6.184/32
        - 1.1.6.186/32
        - 1.1.6.188/32
        - 1.1.6.190/32
        - 1.1.6.192/32
        - 1.1.6.194/32
        - 1.1.6.196/32
        - 1.1.6.198/32
        - 1.1.6.200/32
        - 1.1.6.202/32
        - 1.1.6.204/32
        - 1.1.6.206/32
        - 1.1.6.208/32
        - 1.1.6.210/32
        - 1.1.6.212/32
        - 1.1.6.214/32
        - 1.1.6.216/32
        - 1.1.6.218/32
        - 1.1.6.220/32
        - 1.1.6.222/32
        - 1.1.6.224/32
        - 1.1.6.226/32
        - 1.1.6.228/32
        - 1.1.6.230/32
        - 1.1.6.232/32
        - 1.1.6.234/32
        - 1.1.6.236/32
        - 1.1.6.238/32
        - 1.1.6.240/32
        - 1.1.6.242/32
        - 1.1.6.244/32
        - 1.1.6.246/32
        - 1.1.6.248/32
        - 1.1.6.250/32
        - 1.1.6.252/32
        - 1.1.6.254/32
        - 1.1.7.2/32
        - 1.1.7.4/32
        - 1.1.7.6/32
        - 1.1.7.8/32
        - 1.1.7.10/32
        - 1.1.7.12/32
        - 1.1.7.14/32
        - 1.1.7.16/32
        - 1.1.7.18/32
        - 1.1.7.20/32
        - 1.1.7.22/32
        - 1.1.7.24/32
        - 1.1.7.26/32
        - 1.1.7.28/32
        - 1.1.7.30/32
        - 1.1.7.32/32
        - 1.1.7.34/32
        - 1.1.7.36/32
        - 1.1.7.38/32
        - 1.1.7.40/32
        - 1.1.7.42/32
        - 1.1.7.44/32
        - 1.1.7.46/32
        - 1.1.7.48/32
        - 1.1.7.50/32
        - 1.1.7.52/32
        - 1.1.7.54/32
        - 1.1.7.56/32
        - 1.1.7.58/32
        - 1.1.7.60/32
        - 1.1.7.62/32
        - 1.1.7.64/32
        - 1.1.7.66/32
        - 1.1.7.68/32
        - 1.1.7.70/32
        - 1.1.7.72/32
        - 1.1.7.74/32
        - 1.1.7.76/32
        - 1.1.7.78/32
        - 1.1.7.80/32
        - 1.1.7.82/32
        - 1.1.7.84/32
        - 1.1.7.86/32
        - 1.1.7.88/32
        - 1.1.7.90/32
        - 1.1.7.92/32
        - 1.1.7.94/32
        - 1.1.7.96/32
        - 1.1.7.98/32
        - 1.1.7.100/32
        - 1.1.7.102/32
        - 1.1.7.104/32
        - 1.1.7.106/32
        - 1.1.7.108/32
        - 1.1.7.110/32
        - 1.1.7.112/32
        - 1.1.7.114/32
        - 1.1.7.116/32
        - 1.1.7.118/32
        - 1.1.7.120/32
        - 1.1.7.122/32
        - 1.1.7.124/32
        - 1.1.7.126/32
        - 1.1.7.128/32
        - 1.1.7.130/32
        - 1.1.7.132/32
        - 1.1.7.134/32
        - 1.1.7.136/32
        - 1.1.7.138/32
        - 1.1.7.140/32
        - 1.1.7.142/32
        - 1.1.7.144/32
        - 1.1.7.146/32
        - 1.1.7.148/32
        - 1.1.7.150/32
        - 1.1.7.152/32
        - 1.1.7.154/32
        - 1.1.7.156/32
        - 1.1.7.158/32
        - 1.1.7.160/32
        - 1.1.7.162/32
        - 1.1.7.164/32
        - 1.1.7.166/32
        - 1.1.7.168/32
        - 1.1.7.170/32
        - 1.1.7.172/32
        - 1.1.7.174/32
        - 1.1.7.176/32
        - 1.1.7.178/32
        - 1.1.7.180/32
        - 1.1.7.182/32
        - 1.1.7.184/32
        - 1.1.7.186/32
        - 1.1.7.188/32
        - 1.1.7.190/32
        - 1.1.7.192/32
        - 1.1.7.194/32
        - 1.1.7.196/32
        - 1.1.7.198/32
        - 1.1.7.200/32
        - 1.1.7.202/32
        - 1.1.7.204/32
        - 1.1.7.206/32
        - 1.1.7.208/32
        - 1.1.7.210/32
        - 1.1.7.212/32
        - 1.1.7.214/32
        - 1.1.7.216/32
        - 1.1.7.218/32
        - 1.1.7.220/32
        - 1.1.7.222/32
        - 1.1.7.224/32
        - 1.1.7.226/32
        - 1.1.7.228/32
        - 1.1.7.230/32
        - 1.1.7.232/32
        - 1.1.7.234/32
        - 1.1.7.236/32
        - 1.1.7.238/32
        - 1.1.7.240/32
        - 1.1.7.242/32
        - 1.1.7.244/32
        - 1.1.7.246/32
        - 1.1.7.248/32
        - 1.1.7.250/32
        - 1.1.7.252/32
        - 1.1.7.254/32
        - 1.1.8.2/32
        - 1.1.8.4/32
        - 1.1.8.6/32
        - 1.1.8.8/32
        - 1.1.8.10/32
        - 1.1.8.12/32
        - 1.1.8.14/32
        - 1.1.8.16/32
        - 1.1.8.18/32
        - 1.1.8.20/32
        - 1.1.8.22/32
        - 1.1.8.24/32
        - 1.1.8.26/32
        - 1.1.8.28/32
        - 1.1.8.30/32
        - 1.1.8.32/32
        - 1.1.8.34/32
        - 1.1.8.36/32
        - 1.1.8.38/32
        - 1.1.8.40/32
        - 1.1.8.42/32
        - 1.1.8.44/32
        - 1.1.8.46/32
        - 1.1.8.48/32
        - 1.1.8.50/32
        - 1.1.8.52/32
        - 1.1.8.54/32
        - 1.1.8.56/32
        - 1.1.8.58/32
        - 1.1.8.60/32
        - 1.1.8.62/32
        - 1.1.8.64/32
        - 1.1.8.66/32
        - 1.1.8.68/32
        - 1.1.8.70/32
        - 1.1.8.72/32
        - 1.1.8.74/32
        - 1.1.8.76/32
        - 1.1.8.78/32
        - 1.1.8.80/32
        - 1.1.8.82/32
        - 1.1.8.84/32
        - 1.1.8.86/32
        - 1.1.8.88/32
        - 1.1.8.90/32
        - 1.1.8.92/32
        - 1.1.8.94/32
        - 1.1.8.96/32
        - 1.1.8.98/32
        - 1.1.8.100/32
        - 1.1.8.102/32
        - 1.1.8.104/32
        - 1.1.8.106/32
        - 1.1.8.108/32
        - 1.1.8.110/32
        - 1.1.8.112/32
        - 1.1.8.114/32
        - 1.1.8.116/32
        - 1.1.8.118/32
        - 1.1.8.120/32
        - 1.1.8.122/32
        - 1.1.8.124/32
        - 1.1.8.126/32
        - 1.1.8.128/32
        - 1.1.8.130/32
        - 1.1.8.132/32
        - 1.1.8.134/32
        - 1.1.8.136/32
        - 1.1.8.138/32
        - 1.1.8.140/32
        - 1.1.8.142/32
        - 1.1.8.144/32
        - 1.1.8.146/32
        - 1.1.8.148/32
        - 1.1.8.150/32
        - 1.1.8.152/32
        - 1.1.8.154/32
        - 1.1.8.156/32
        - 1.1.8.158/32
        - 1.1.8.160/32
        - 1.1.8.162/32
        - 1.1.8.164/32
        - 1.1.8.166/32
        - 1.1.8.168/32
        - 1.1.8.170/32
        - 1.1.8.172/32
        - 1.1.8.174/32
        - 1.1.8.176/32
        - 1.1.8.178/32
        - 1.1.8.180/32
        - 1.1.8.182/32
        - 1.1.8.184/32
        - 1.1.8.186/32
        - 1.1.8.188/32
        - 1.1.8.190/32
        - 1.1.8.192/32
        - 1.1.8.194/32
        - 1.1.8.196/32
        - 1.1.8.198/32
        - 1.1.8.200/32
        - 1.1.8.202/32
        - 1.1.8.204/32
        - 1.1.8.206/32
        - 1.1.8.208/32
        - 1.1.8.210/32
        - 1.1.8.212/32
        - 1.1.8.214/32
        - 1.1.8.216/32
        - 1.1.8.218/32
        - 1.1.8.220/32
        - 1.1.8.222/32
        - 1.1.8.224/32
        - 1.1.8.226/32
        - 1.1.8.228/32
        - 1.1.8.230/32
        - 1.1.8.232/32
        - 1.1.8.234/32
        - 1.1.8.236/32
        - 1.1.8.238/32
        - 1.1.8.240/32
        - 1.1.8.242/32
        - 1.1.8.244/32
        - 1.1.8.246/32
        - 1.1.8.248/32
        - 1.1.8.250/32
        - 1.1.8.252/32
        - 1.1.8.254/32
        - 1.1.9.2/32
        - 1.1.9.4/32
        - 1.1.9.6/32
        - 1.1.9.8/32
        - 1.1.9.10/32
        - 1.1.9.12/32
        - 1.1.9.14/32
        - 1.1.9.16/32
        - 1.1.9.18/32
        - 1.1.9.20/32
        - 1.1.9.22/32
        - 1.1.9.24/32
        - 1.1.9.26/32
        - 1.1.9.28/32
        - 1.1.9.30/32
        - 1.1.9.32/32
        - 1.1.9.34/32
        - 1.1.9.36/32
        - 1.1.9.38/32
        - 1.1.9.40/32
        - 1.1.9.42/32
        - 1.1.9.44/32
        - 1.1.9.46/32
        - 1.1.9.48/32
        - 1.1.9.50/32
        - 1.1.9.52/32
        - 1.1.9.54/32
        - 1.1.9.56/32
        - 1.1.9.58/32
        - 1.1.9.60/32
        - 1.1.9.62/32
        - 1.1.9.64/32
        - 1.1.9.66/32
        - 1.1.9.68/32
        - 1.1.9.70/32
        - 1.1.9.72/32
        - 1.1.9.74/32
        - 1.1.9.76/32
        - 1.1.9.78/32
        - 1.1.9.80/32
        - 1.1.9.82/32
        - 1.1.9.84/32
        - 1.1.9.86/32
        - 1.1.9.88/32
        - 1.1.9.90/32
        - 1.1.9.92/32
        - 1.1.9.94/32
        - 1.1.9.96/32
        - 1.1.9.98/32
        - 1.1.9.100/32
        - 1.1.9.102/32
        - 1.1.9.104/32
        - 1.1.9.106/32
        - 1.1.9.108/32
        - 1.1.9.110/32
        - 1.1.9.112/32
        - 1.1.9.114/32
        - 1.1.9.116/32
        - 1.1.9.118/32
        - 1.1.9.120/32
        - 1.1.9.122/32
        - 1.1.9.124/32
        - 1.1.9.126/32
        - 1.1.9.128/32
        - 1.1.9.130/32
        - 1.1.9.132/32
        - 1.1.9.134/32
        - 1.1.9.136/32
        - 1.1.9.138/32
        - 1.1.9.140/32
        - 1.1.9.142/32
        - 1.1.9.144/32
        - 1.1.9.146/32
        - 1.1.9.148/32
        - 1.1.9.150/32
        - 1.1.9.152/32
        - 1.1.9.154/32
        - 1.1.9.156/32
        - 1.1.9.158/32
        - 1.1.9.160/32
        - 1.1.9.162/32
        - 1.1.9.164/32
        - 1.1.9.166/32
        - 1.1.9.168/32
        - 1.1.9.170/32
        - 1.1.9.172/32
        - 1.1.9.174/32
        - 1.1.9.176/32
        - 1.1.9.178/32
        - 1.1.9.180/32
        - 1.1.9.182/32
        - 1.1.9.184/32
        - 1.1.9.186/32
        - 1.1.9.188/32
        - 1.1.9.190/32
        - 1.1.9.192/32
        - 1.1.9.194/32
        - 1.1.9.196/32
        - 1.1.9.198/32
        - 1.1.9.200/32
        - 1.1.9.202/32
        - 1.1.9.204/32
        - 1.1.9.206/32
        - 1.1.9.208/32
        - 1.1.9.210/32
        - 1.1.9.212/32
        - 1.1.9.214/32
        - 1.1.9.216/32
        - 1.1.9.218/32
        - 1.1.9.220/32
        - 1.1.9.222/32
        - 1.1.9.224/32
        - 1.1.9.226/32
        - 1.1.9.228/32
        - 1.1.9.230/32
        - 1.1.9.232/32
        - 1.1.9.234/32
        - 1.1.9.236/32
        - 1.1.9.238/32
        - 1.1.9.240/32
        - 1.1.9.242/32
        - 1.1.9.244/32
        - 1.1.9.246/32
        - 1.1.9.248/32
        - 1.1.9.250/32
        - 1.1.9.252/32
        - 1.1.9.254/32
        - 1.1.10.2/32
        - 1.1.10.4/32
        - 1.1.10.6/32
        - 1.1.10.8/32
        - 1.1.10.10/32
        - 1.1.10.12/32
        - 1.1.10.14/32
        - 1.1.10.16/32
        - 1.1.10.18/32
        - 1.1.10.20/32
        - 1.1.10.22/32
        - 1.1.10.24/32
        - 1.1.10.26/32
        - 1.1.10.28/32
        - 1.1.10.30/32
        - 1.1.10.32/32
        - 1.1.10.34/32
        - 1.1.10.36/32
        - 1.1.10.38/32
        - 1.1.10.40/32
        - 1.1.10.42/32
        - 1.1.10.44/32
        - 1.1.10.46/32
        - 1.1.10.48/32
        - 1.1.10.50/32
        - 1.1.10.52/32
        - 1.1.10.54/32
        - 1.1.10.56/32
        - 1.1.10.58/32
        - 1.1.10.60/32
        - 1.1.10.62/32
        - 1.1.10.64/32
        - 1.1.10.66/32
        - 1.1.10.68/32
        - 1.1.10.70/32
        - 1.1.10.72/32
        - 1.1.10.74/32
        - 1.1.10.76/32
        - 1.1.10.78/32
        - 1.1.10.80/32
        - 1.1.10.82/32
        - 1.1.10.84/32
        - 1.1.10.86/32
        - 1.1.10.88/32
        - 1.1.10.90/32
        - 1.1.10.92/32
        - 1.1.10.94/32
        - 1.1.10.96/32
        - 1.1.10.98/32
        - 1.1.10.100/32
        - 1.1.10.102/32
        - 1.1.10.104/32
        - 1.1.10.106/32
        - 1.1.10.108/32
        - 1.1.10.110/32
        - 1.1.10.112/32
        - 1.1.10.114/32
        - 1.1.10.116/32
        - 1.1.10.118/32
        - 1.1.10.120/32
        - 1.1.10.122/32
        - 1.1.10.124/32
        - 1.1.10.126/32
        - 1.1.10.128/32
        - 1.1.10.130/32
        - 1.1.10.132/32
        - 1.1.10.134/32
        - 1.1.10.136/32
        - 1.1.10.138/32
        - 1.1.10.140/32
        - 1.1.10.142/32
        - 1.1.10.144/32
        - 1.1.10.146/32
        - 1.1.10.148/32
        - 1.1.10.150/32
        - 1.1.10.152/32
        - 1.1.10.154/32
        - 1.1.10.156/32
        - 1.1.10.158/32
        - 1.1.10.160/32
        - 1.1.10.162/32
        - 1.1.10.164/32
        - 1.1.10.166/32
        - 1.1.10.168/32
        - 1.1.10.170/32
        - 1.1.10.172/32
        - 1.1.10.174/32
        - 1.1.10.176/32
        - 1.1.10.178/32
        - 1.1.10.180/32
        - 1.1.10.182/32
        - 1.1.10.184/32
        - 1.1.10.186/32
        - 1.1.10.188/32
        - 1.1.10.190/32
        - 1.1.10.192/32
        - 1.1.10.194/32
        - 1.1.10.196/32
        - 1.1.10.198/32
        - 1.1.10.200/32
        - 1.1.10.202/32
        - 1.1.10.204/32
        - 1.1.10.206/32
        - 1.1.10.208/32
        - 1.1.10.210/32
        - 1.1.10.212/32
        - 1.1.10.214/32
        - 1.1.10.216/32
        - 1.1.10.218/32
        - 1.1.10.220/32
        - 1.1.10.222/32
        - 1.1.10.224/32
        - 1.1.10.226/32
        - 1.1.10.228/32
        - 1.1.10.230/32
        - 1.1.10.232/32
        - 1.1.10.234/32
        - 1.1.10.236/32
        - 1.1.10.238/32
        - 1.1.10.240/32
        - 1.1.10.242/32
        - 1.1.10.244/32
        - 1.1.10.246/32
        - 1.1.10.248/32
        - 1.1.10.250/32
        - 1.1.10.252/32
        - 1.1.10.254/32
        - 1.1.11.2/32
        - 1.1.11.4/32
        - 1.1.11.6/32
        - 1.1.11.8/32
        - 1.1.11.10/32
        - 1.1.11.12/32
        - 1.1.11.14/32
        - 1.1.11.16/32
        - 1.1.11.18/32
        - 1.1.11.20/32
        - 1.1.11.22/32
        - 1.1.11.24/32
        - 1.1.11.26/32
        - 1.1.11.28/32
        - 1.1.11.30/32
        - 1.1.11.32/32
        - 1.1.11.34/32
        - 1.1.11.36/32
        - 1.1.11.38/32
        - 1.1.11.40/32
        - 1.1.11.42/32
        - 1.1.11.44/32
        - 1.1.11.46/32
        - 1.1.11.48/32
        - 1.1.11.50/32
        - 1.1.11.52/32
        - 1.1.11.54/32
        - 1.1.11.56/32
        - 1.1.11.58/32
        - 1.1.11.60/32
        - 1.1.11.62/32
        - 1.1.11.64/32
        - 1.1.11.66/32
        - 1.1.11.68/32
        - 1.1.11.70/32
        - 1.1.11.72/32
        - 1.1.11.74/32
        - 1.1.11.76/32
        - 1.1.11.78/32
        - 1.1.11.80/32
        - 1.1.11.82/32
        - 1.1.11.84/32
        - 1.1.11.86/32
        - 1.1.11.88/32
        - 1.1.11.90/32
        - 1.1.11.92/32
        - 1.1.11.94/32
        - 1.1.11.96/32
        - 1.1.11.98/32
        - 1.1.11.100/32
        - 1.1.11.102/32
        - 1.1.11.104/32
        - 1.1.11.106/32
        - 1.1.11.108/32
        - 1.1.11.110/32
        - 1.1.11.112/32
        - 1.1.11.114/32
        - 1.1.11.116/32
        - 1.1.11.118/32
        - 1.1.11.120/32
        - 1.1.11.122/32
        - 1.1.11.124/32
        - 1.1.11.126/32
        - 1.1.11.128/32
        - 1.1.11.130/32
        - 1.1.11.132/32
        - 1.1.11.134/32
        - 1.1.11.136/32
        - 1.1.11.138/32
        - 1.1.11.140/32
        - 1.1.11.142/32
        - 1.1.11.144/32
        - 1.1.11.146/32
        - 1.1.11.148/32
        - 1.1.11.150/32
        - 1.1.11.152/32
        - 1.1.11.154/32
        - 1.1.11.156/32
        - 1.1.11.158/32
        - 1.1.11.160/32
        - 1.1.11.162/32
        - 1.1.11.164/32
        - 1.1.11.166/32
        - 1.1.11.168/32
        - 1.1.11.170/32
        - 1.1.11.172/32
        - 1.1.11.174/32
        - 1.1.11.176/32
        - 1.1.11.178/32
        - 1.1.11.180/32
        - 1.1.11.182/32
        - 1.1.11.184/32
        - 1.1.11.186/32
        - 1.1.11.188/32
        - 1.1.11.190/32
        - 1.1.11.192/32
        - 1.1.11.194/32
        - 1.1.11.196/32
        - 1.1.11.198/32
        - 1.1.11.200/32
        - 1.1.11.202/32
        - 1.1.11.204/32
        - 1.1.11.206/32
        - 1.1.11.208/32
        - 1.1.11.210/32
        - 1.1.11.212/32
        - 1.1.11.214/32
        - 1.1.11.216/32
        - 1.1.11.218/32
        - 1.1.11.220/32
        - 1.1.11.222/32
        - 1.1.11.224/32
        - 1.1.11.226/32
        - 1.1.11.228/32
        - 1.1.11.230/32
        - 1.1.11.232/32
        - 1.1.11.234/32
        - 1.1.11.236/32
        - 1.1.11.238/32
        - 1.1.11.240/32
        - 1.1.11.242/32
        - 1.1.11.244/32
        - 1.1.11.246/32
        - 1.1.11.248/32
        - 1.1.11.250/32
        - 1.1.11.252/32
        - 1.1.11.254/32
        - 1.1.12.2/32
        - 1.1.12.4/32
        - 1.1.12.6/32
        - 1.1.12.8/32
        - 1.1.12.10/32
        - 1.1.12.12/32
        - 1.1.12.14/32
        - 1.1.12.16/32
        - 1.1.12.18/32
        - 1.1.12.20/32
        - 1.1.12.22/32
        - 1.1.12.24/32
        - 1.1.12.26/32
        - 1.1.12.28/32
        - 1.1.12.30/32
        - 1.1.12.32/32
        - 1.1.12.34/32
        - 1.1.12.36/32
        - 1.1.12.38/32
        - 1.1.12.40/32
        - 1.1.12.42/32
        - 1.1.12.44/32
        - 1.1.12.46/32
        - 1.1.12.48/32
        - 1.1.12.50/32
        - 1.1.12.52/32
        - 1.1.12.54/32
        - 1.1.12.56/32
        - 1.1.12.58/32
        - 1.1.12.60/32
        - 1.1.12.62/32
        - 1.1.12.64/32
        - 1.1.12.66/32
        - 1.1.12.68/32
        - 1.1.12.70/32
        - 1.1.12.72/32
        - 1.1.12.74/32
        - 1.1.12.76/32
        - 1.1.12.78/32
        - 1.1.12.80/32
        - 1.1.12.82/32
        - 1.1.12.84/32
        - 1.1.12.86/32
        - 1.1.12.88/32
        - 1.1.12.90/32
        - 1.1.12.92/32
        - 1.1.12.94/32
        - 1.1.12.96/32
        - 1.1.12.98/32
        - 1.1.12.100/32
        - 1.1.12.102/32
        - 1.1.12.104/32
        - 1.1.12.106/32
        - 1.1.12.108/32
        - 1.1.12.110/32
        - 1.1.12.112/32
        - 1.1.12.114/32
        - 1.1.12.116/32
        - 1.1.12.118/32
        - 1.1.12.120/32
        - 1.1.12.122/32
        - 1.1.12.124/32
        - 1.1.12.126/32
        - 1.1.12.128/32
        - 1.1.12.130/32
        - 1.1.12.132/32
        - 1.1.12.134/32
        - 1.1.12.136/32
        - 1.1.12.138/32
        - 1.1.12.140/32
        - 1.1.12.142/32
        - 1.1.12.144/32
        - 1.1.12.146/32
        - 1.1.12.148/32
        - 1.1.12.150/32
        - 1.1.12.152/32
        - 1.1.12.154/32
        - 1.1.12.156/32
        - 1.1.12.158/32
        - 1.1.12.160/32
        - 1.1.12.162/32
        - 1.1.12.164/32
        - 1.1.12.166/32
        - 1.1.12.168/32
        - 1.1.12.170/32
        - 1.1.12.172/32
        - 1.1.12.174/32
        - 1.1.12.176/32
        - 1.1.12.178/32
        - 1.1.12.180/32
        - 1.1.12.182/32
        - 1.1.12.184/32
        - 1.1.12.186/32
        - 1.1.12.188/32
        - 1.1.12.190/32
        - 1.1.12.192/32
        - 1.1.12.194/32
        - 1.1.12.196/32
        - 1.1.12.198/32
        - 1.1.12.200/32
        - 1.1.12.202/32
        - 1.1.12.204/32
        - 1.1.12.206/32
        - 1.1.12.208/32
        - 1.1.12.210/32
        - 1.1.12.212/32
        - 1.1.12.214/32
        - 1.1.12.216/32
        - 1.1.12.218/32
        - 1.1.12.220/32
        - 1.1.12.222/32
        - 1.1.12.224/32
        - 1.1.12.226/32
        - 1.1.12.228/32
        - 1.1.12.230/32
        - 1.1.12.232/32
        - 1.1.12.234/32
        - 1.1.12.236/32
        - 1.1.12.238/32
        - 1.1.12.240/32
        - 1.1.12.242/32
        - 1.1.12.244/32
        - 1.1.12.246/32
        - 1.1.12.248/32
        - 1.1.12.250/32
        - 1.1.12.252/32
        - 1.1.12.254/32
        - 1.1.13.2/32
        - 1.1.13.4/32
        - 1.1.13.6/32
        - 1.1.13.8/32
        - 1.1.13.10/32
        - 1.1.13.12/32
        - 1.1.13.14/32
        - 1.1.13.16/32
        - 1.1.13.18/32
        - 1.1.13.20/32
        - 1.1.13.22/32
        - 1.1.13.24/32
        - 1.1.13.26/32
        - 1.1.13.28/32
        - 1.1.13.30/32
        - 1.1.13.32/32
        - 1.1.13.34/32
        - 1.1.13.36/32
        - 1.1.13.38/32
        - 1.1.13.40/32
        - 1.1.13.42/32
        - 1.1.13.44/32
        - 1.1.13.46/32
        - 1.1.13.48/32
        - 1.1.13.50/32
        - 1.1.13.52/32
        - 1.1.13.54/32
        - 1.1.13.56/32
        - 1.1.13.58/32
        - 1.1.13.60/32
        - 1.1.13.62/32
        - 1.1.13.64/32
        - 1.1.13.66/32
        - 1.1.13.68/32
        - 1.1.13.70/32
        - 1.1.13.72/32
        - 1.1.13.74/32
        - 1.1.13.76/32
        - 1.1.13.78/32
        - 1.1.13.80/32
        - 1.1.13.82/32
        - 1.1.13.84/32
        - 1.1.13.86/32
        - 1.1.13.88/32
        - 1.1.13.90/32
        - 1.1.13.92/32
        - 1.1.13.94/32
        - 1.1.13.96/32
        - 1.1.13.98/32
        - 1.1.13.100/32
        - 1.1.13.102/32
        - 1.1.13.104/32
        - 1.1.13.106/32
        - 1.1.13.108/32
        - 1.1.13.110/32
        - 1.1.13.112/32
        - 1.1.13.114/32
        - 1.1.13.116/32
        - 1.1.13.118/32
        - 1.1.13.120/32
        - 1.1.13.122/32
        - 1.1.13.124/32
        - 1.1.13.126/32
        - 1.1.13.128/32
        - 1.1.13.130/32
        - 1.1.13.132/32
        - 1.1.13.134/32
        - 1.1.13.136/32
        - 1.1.13.138/32
        - 1.1.13.140/32
        - 1.1.13.142/32
        - 1.1.13.144/32
        - 1.1.13.146/32
        - 1.1.13.148/32
        - 1.1.13.150/32
        - 1.1.13.152/32
        - 1.1.13.154/32
        - 1.1.13.156/32
        - 1.1.13.158/32
        - 1.1.13.160/32
        - 1.1.13.162/32
        - 1.1.13.164/32
        - 1.1.13.166/32
        - 1.1.13.168/32
        - 1.1.13.170/32
        - 1.1.13.172/32
        - 1.1.13.174/32
        - 1.1.13.176/32
        - 1.1.13.178/32
        - 1.1.13.180/32
        - 1.1.13.182/32
        - 1.1.13.184/32
        - 1.1.13.186/32
        - 1.1.13.188/32
        - 1.1.13.190/32
        - 1.1.13.192/32
        - 1.1.13.194/32
        - 1.1.13.196/32
        - 1.1.13.198/32
        - 1.1.13.200/32
        - 1.1.13.202/32
        - 1.1.13.204/32
        - 1.1.13.206/32
        - 1.1.13.208/32
        - 1.1.13.210/32
        - 1.1.13.212/32
        - 1.1.13.214/32
        - 1.1.13.216/32
        - 1.1.13.218/32
        - 1.1.13.220/32
        - 1.1.13.222/32
        - 1.1.13.224/32
        - 1.1.13.226/32
        - 1.1.13.228/32
        - 1.1.13.230/32
        - 1.1.13.232/32
        - 1.1.13.234/32
        - 1.1.13.236/32
        - 1.1.13.238/32
        - 1.1.13.240/32
        - 1.1.13.242/32
        - 1.1.13.244/32
        - 1.1.13.246/32
        - 1.1.13.248/32
        - 1.1.13.250/32
        - 1.1.13.252/32
        - 1.1.13.254/32
        - 1.1.14.2/32
        - 1.1.14.4/32
        - 1.1.14.6/32
        - 1.1.14.8/32
        - 1.1.14.10/32
        - 1.1.14.12/32
        - 1.1.14.14/32
        - 1.1.14.16/32
        - 1.1.14.18/32
        - 1.1.14.20/32
        - 1.1.14.22/32
        - 1.1.14.24/32
        - 1.1.14.26/32
        - 1.1.14.28/32
        - 1.1.14.30/32
        - 1.1.14.32/32
        - 1.1.14.34/32
        - 1.1.14.36/32
        - 1.1.14.38/32
        - 1.1.14.40/32
        - 1.1.14.42/32
        - 1.1.14.44/32
        - 1.1.14.46/32
        - 1.1.14.48/32
        - 1.1.14.50/32
        - 1.1.14.52/32
        - 1.1.14.54/32
        - 1.1.14.56/32
        - 1.1.14.58/32
        - 1.1.14.60/32
        - 1.1.14.62/32
        - 1.1.14.64/32
        - 1.1.14.66/32
        - 1.1.14.68/32
        - 1.1.14.70/32
        - 1.1.14.72/32
        - 1.1.14.74/32
        - 1.1.14.76/32
        - 1.1.14.78/32
        - 1.1.14.80/32
        - 1.1.14.82/32
        - 1.1.14.84/32
        - 1.1.14.86/32
        - 1.1.14.88/32
        - 1.1.14.90/32
        - 1.1.14.92/32
        - 1.1.14.94/32
        - 1.1.14.96/32
        - 1.1.14.98/32
        - 1.1.14.100/32
        - 1.1.14.102/32
        - 1.1.14.104/32
        - 1.1.14.106/32
        - 1.1.14.108/32
        - 1.1.14.110/32
        - 1.1.14.112/32
        - 1.1.14.114/32
        - 1.1.14.116/32
        - 1.1.14.118/32
        - 1.1.14.120/32
        - 1.1.14.122/32
        - 1.1.14.124/32
        - 1.1.14.126/32
        - 1.1.14.128/32
        - 1.1.14.130/32
        - 1.1.14.132/32
        - 1.1.14.134/32
        - 1.1.14.136/32
        - 1.1.14.138/32
        - 1.1.14.140/32
        - 1.1.14.142/32
        - 1.1.14.144/32
        - 1.1.14.146/32
        - 1.1.14.148/32
        - 1.1.14.150/32
        - 1.1.14.152/32
        - 1.1.14.154/32
        - 1.1.14.156/32
        - 1.1.14.158/32
        - 1.1.14.160/32
        - 1.1.14.162/32
        - 1.1.14.164/32
        - 1.1.14.166/32
        - 1.1.14.168/32
        - 1.1.14.170/32
        - 1.1.14.172/32
        - 1.1.14.174/32
        - 1.1.14.176/32
        - 1.1.14.178/32
        - 1.1.14.180/32
        - 1.1.14.182/32
        - 1.1.14.184/32
        - 1.1.14.186/32
        - 1.1.14.188/32
        - 1.1.14.190/32
        - 1.1.14.192/32
        - 1.1.14.194/32
        - 1.1.14.196/32
        - 1.1.14.198/32
        - 1.1.14.200/32
        - 1.1.14.202/32
        - 1.1.14.204/32
        - 1.1.14.206/32
        - 1.1.14.208/32
        - 1.1.14.210/32
        - 1.1.14.212/32
        - 1.1.14.214/32
        - 1.1.14.216/32
        - 1.1.14.218/32
        - 1.1.14.220/32
        - 1.1.14.222/32
        - 1.1.14.224/32
        - 1.1.14.226/32
        - 1.1.14.228/32
        - 1.1.14.230/32
        - 1.1.14.232/32
        - 1.1.14.234/32
        - 1.1.14.236/32
        - 1.1.14.238/32
        - 1.1.14.240/32
        - 1.1.14.242/32
        - 1.1.14.244/32
        - 1.1.14.246/32
        - 1.1.14.248/32
        - 1.1.14.250/32
        - 1.1.14.252/32
        - 1.1.14.254/32
        - 1.1.15.2/32
        - 1.1.15.4/32
        - 1.1.15.6/32
        - 1.1.15.8/32
        - 1.1.15.10/32
        - 1.1.15.12/32
        - 1.1.15.14/32
        - 1.1.15.16/32
        - 1.1.15.18/32
        - 1.1.15.20/32
        - 1.1.15.22/32
        - 1.1.15.24/32
        - 1.1.15.26/32
        - 1.1.15.28/32
        - 1.1.15.30/32
        - 1.1.15.32/32
        - 1.1.15.34/32
        - 1.1.15.36/32
        - 1.1.15.38/32
        - 1.1.15.40/32
        - 1.1.15.42/32
        - 1.1.15.44/32
        - 1.1.15.46/32
        - 1.1.15.48/32
        - 1.1.15.50/32
        - 1.1.15.52/32
        - 1.1.15.54/32
        - 1.1.15.56/32
        - 1.1.15.58/32
        - 1.1.15.60/32
        - 1.1.15.62/32
        - 1.1.15.64/32
        - 1.1.15.66/32
        - 1.1.15.68/32
        - 1.1.15.70/32
        - 1.1.15.72/32
        - 1.1.15.74/32
        - 1.1.15.76/32
        - 1.1.15.78/32
        - 1.1.15.80/32
        - 1.1.15.82/32
        - 1.1.15.84/32
        - 1.1.15.86/32
        - 1.1.15.88/32
        - 1.1.15.90/32
        - 1.1.15.92/32
        - 1.1.15.94/32
        - 1.1.15.96/32
        - 1.1.15.98/32
        - 1.1.15.100/32
        - 1.1.15.102/32
        - 1.1.15.104/32
        - 1.1.15.106/32
        - 1.1.15.108/32
        - 1.1.15.110/32
        - 1.1.15.112/32
        - 1.1.15.114/32
        - 1.1.15.116/32
        - 1.1.15.118/32
        - 1.1.15.120/32
        - 1.1.15.122/32
        - 1.1.15.124/32
        - 1.1.15.126/32
        - 1.1.15.128/32
        - 1.1.15.130/32
        - 1.1.15.132/32
        - 1.1.15.134/32
        - 1.1.15.136/32
        - 1.1.15.138/32
        - 1.1.15.140/32
        - 1.1.15.142/32
        - 1.1.15.144/32
        - 1.1.15.146/32
        - 1.1.15.148/32
        - 1.1.15.150/32
        - 1.1.15.152/32
        - 1.1.15.154/32
        - 1.1.15.156/32
        - 1.1.15.158/32
        - 1.1.15.160/32
        - 1.1.15.162/32
        - 1.1.15.164/32
        - 1.1.15.166/32
        - 1.1.15.168/32
        - 1.1.15.170/32
        - 1.1.15.172/32
        - 1.1.15.174/32
        - 1.1.15.176/32
        - 1.1.15.178/32
        - 1.1.15.180/32
        - 1.1.15.182/32
        - 1.1.15.184/32
        - 1.1.15.186/32
        - 1.1.15.188/32
        - 1.1.15.190/32
        - 1.1.15.192/32
        - 1.1.15.194/32
        - 1.1.15.196/32
        - 1.1.15.198/32
        - 1.1.15.200/32
        - 1.1.15.202/32
        - 1.1.15.204/32
        - 1.1.15.206/32
        - 1.1.15.208/32
        - 1.1.15.210/32
        - 1.1.15.212/32
        - 1.1.15.214/32
        - 1.1.15.216/32
        - 1.1.15.218/32
        - 1.1.15.220/32
        - 1.1.15.222/32
        - 1.1.15.224/32
        - 1.1.15.226/32
        - 1.1.15.228/32
        - 1.1.15.230/32
        - 1.1.15.232/32
        - 1.1.15.234/32
        - 1.1.15.236/32
        - 1.1.15.238/32
        - 1.1.15.240/32
        - 1.1.15.242/32
        - 1.1.15.244/32
        - 1.1.15.246/32
        - 1.1.15.248/32
        - 1.1.15.250/32
        - 1.1.15.252/32
        - 1.1.15.254/32
        - 1.1.16.2/32
        - 1.1.16.4/32
        - 1.1.16.6/32
        - 1.1.16.8/32
        - 1.1.16.10/32
        - 1.1.16.12/32
        - 1.1.16.14/32
        - 1.1.16.16/32
        - 1.1.16.18/32
        - 1.1.16.20/32
        - 1.1.16.22/32
        - 1.1.16.24/32
        - 1.1.16.26/32
        - 1.1.16.28/32
        - 1.1.16.30/32
        - 1.1.16.32/32
        - 1.1.16.34/32
        - 1.1.16.36/32
        - 1.1.16.38/32
        - 1.1.16.40/32
        - 1.1.16.42/32
        - 1.1.16.44/32
        - 1.1.16.46/32
        - 1.1.16.48/32
        - 1.1.16.50/32
        - 1.1.16.52/32
        - 1.1.16.54/32
        - 1.1.16.56/32
        - 1.1.16.58/32
        - 1.1.16.60/32
        - 1.1.16.62/32
        - 1.1.16.64/32
        - 1.1.16.66/32
        - 1.1.16.68/32
        - 1.1.16.70/32
        - 1.1.16.72/32
        - 1.1.16.74/32
        - 1.1.16.76/32
        - 1.1.16.78/32
        - 1.1.16.80/32
        - 1.1.16.82/32
        - 1.1.16.84/32
        - 1.1.16.86/32
        - 1.1.16.88/32
        - 1.1.16.90/32
        - 1.1.16.92/32
        - 1.1.16.94/32
        - 1.1.16.96/32
        - 1.1.16.98/32
        - 1.1.16.100/32
        - 1.1.16.102/32
        - 1.1.16.104/32
        - 1.1.16.106/32
        - 1.1.16.108/32
        - 1.1.16.110/32
        - 1.1.16.112/32
        - 1.1.16.114/32
        - 1.1.16.116/32
        - 1.1.16.118/32
        - 1.1.16.120/32
        - 1.1.16.122/32
        - 1.1.16.124/32
        - 1.1.16.126/32
        - 1.1.16.128/32
        - 1.1.16.130/32
        - 1.1.16.132/32
        - 1.1.16.134/32
        - 1.1.16.136/32
        - 1.1.16.138/32
        - 1.1.16.140/32
        - 1.1.16.142/32
        - 1.1.16.144/32
        - 1.1.16.146/32
        - 1.1.16.148/32
        - 1.1.16.150/32
        - 1.1.16.152/32
        - 1.1.16.154/32
        - 1.1.16.156/32
        - 1.1.16.158/32
        - 1.1.16.160/32
        - 1.1.16.162/32
        - 1.1.16.164/32
        - 1.1.16.166/32
        - 1.1.16.168/32
        - 1.1.16.170/32
        - 1.1.16.172/32
        - 1.1.16.174/32
        - 1.1.16.176/32
        - 1.1.16.178/32
        - 1.1.16.180/32
        - 1.1.16.182/32
        - 1.1.16.184/32
        - 1.1.16.186/32
        - 1.1.16.188/32
        - 1.1.16.190/32
        - 1.1.16.192/32
        - 1.1.16.194/32
        - 1.1.16.196/32
        - 1.1.16.198/32
        - 1.1.16.200/32
        - 1.1.16.202/32
        - 1.1.16.204/32
        - 1.1.16.206/32
        - 1.1.16.208/32
        - 1.1.16.210/32
        - 1.1.16.212/32
        - 1.1.16.214/32
        - 1.1.16.216/32
        - 1.1.16.218/32
        - 1.1.16.220/32
        - 1.1.16.222/32
        - 1.1.16.224/32
        - 1.1.16.226/32
        - 1.1.16.228/32
        - 1.1.16.230/32
        - 1.1.16.232/32
        - 1.1.16.234/32
        - 1.1.16.236/32
        - 1.1.16.238/32
        - 1.1.16.240/32
        - 1.1.16.242/32
        - 1.1.16.244/32
        - 1.1.16.246/32
        - 1.1.16.248/32
        - 1.1.16.250/32
        - 1.1.16.252/32
        - 1.1.16.254/32
        - 1.1.17.2/32
        - 1.1.17.4/32
        - 1.1.17.6/32
        - 1.1.17.8/32
        - 1.1.17.10/32
        - 1.1.17.12/32
        - 1.1.17.14/32
        - 1.1.17.16/32
        - 1.1.17.18/32
        - 1.1.17.20/32
        - 1.1.17.22/32
        - 1.1.17.24/32
        - 1.1.17.26/32
        - 1.1.17.28/32
        - 1.1.17.30/32
        - 1.1.17.32/32
        - 1.1.17.34/32
        - 1.1.17.36/32
        - 1.1.17.38/32
        - 1.1.17.40/32
        - 1.1.17.42/32
        - 1.1.17.44/32
        - 1.1.17.46/32
        - 1.1.17.48/32
        - 1.1.17.50/32
        - 1.1.17.52/32
        - 1.1.17.54/32
        - 1.1.17.56/32
        - 1.1.17.58/32
        - 1.1.17.60/32
        - 1.1.17.62/32
        - 1.1.17.64/32
        - 1.1.17.66/32
        - 1.1.17.68/32
        - 1.1.17.70/32
        - 1.1.17.72/32
        - 1.1.17.74/32
        - 1.1.17.76/32
        - 1.1.17.78/32
        - 1.1.17.80/32
        - 1.1.17.82/32
        - 1.1.17.84/32
        - 1.1.17.86/32
        - 1.1.17.88/32
        - 1.1.17.90/32
        - 1.1.17.92/32
        - 1.1.17.94/32
        - 1.1.17.96/32
        - 1.1.17.98/32
        - 1.1.17.100/32
        - 1.1.17.102/32
        - 1.1.17.104/32
        - 1.1.17.106/32
        - 1.1.17.108/32
        - 1.1.17.110/32
        - 1.1.17.112/32
        - 1.1.17.114/32
        - 1.1.17.116/32
        - 1.1.17.118/32
        - 1.1.17.120/32
        - 1.1.17.122/32
        - 1.1.17.124/32
        - 1.1.17.126/32
        - 1.1.17.128/32
        - 1.1.17.130/32
        - 1.1.17.132/32
        - 1.1.17.134/32
        - 1.1.17.136/32
        - 1.1.17.138/32
        - 1.1.17.140/32
        - 1.1.17.142/32
        - 1.1.17.144/32
        - 1.1.17.146/32
        - 1.1.17.148/32
        - 1.1.17.150/32
        - 1.1.17.152/32
        - 1.1.17.154/32
        - 1.1.17.156/32
        - 1.1.17.158/32
        - 1.1.17.160/32
        - 1.1.17.162/32
        - 1.1.17.164/32
        - 1.1.17.166/32
        - 1.1.17.168/32
        - 1.1.17.170/32
        - 1.1.17.172/32
        - 1.1.17.174/32
        - 1.1.17.176/32
        - 1.1.17.178/32
        - 1.1.17.180/32
        - 1.1.17.182/32
        - 1.1.17.184/32
        - 1.1.17.186/32
        - 1.1.17.188/32
        - 1.1.17.190/32
        - 1.1.17.192/32
        - 1.1.17.194/32
        - 1.1.17.196/32
        - 1.1.17.198/32
        - 1.1.17.200/32
        - 1.1.17.202/32
        - 1.1.17.204/32
        - 1.1.17.206/32
        - 1.1.17.208/32
        - 1.1.17.210/32
        - 1.1.17.212/32
        - 1.1.17.214/32
        - 1.1.17.216/32
        - 1.1.17.218/32
        - 1.1.17.220/32
        - 1.1.17.222/32
        - 1.1.17.224/32
        - 1.1.17.226/32
        - 1.1.17.228/32
        - 1.1.17.230/32
        - 1.1.17.232/32
        - 1.1.17.234/32
        - 1.1.17.236/32
        - 1.1.17.238/32
        - 1.1.17.240/32
        - 1.1.17.242/32
        - 1.1.17.244/32
        - 1.1.17.246/32
        - 1.1.17.248/32
        - 1.1.17.250/32
        - 1.1.17.252/32
        - 1.1.17.254/32
        - 1.1.18.2/32
        - 1.1.18.4/32
        - 1.1.18.6/32
        - 1.1.18.8/32
        - 1.1.18.10/32
        - 1.1.18.12/32
        - 1.1.18.14/32
        - 1.1.18.16/32
        - 1.1.18.18/32
        - 1.1.18.20/32
        - 1.1.18.22/32
        - 1.1.18.24/32
        - 1.1.18.26/32
        - 1.1.18.28/32
        - 1.1.18.30/32
        - 1.1.18.32/32
        - 1.1.18.34/32
        - 1.1.18.36/32
        - 1.1.18.38/32
        - 1.1.18.40/32
        - 1.1.18.42/32
        - 1.1.18.44/32
        - 1.1.18.46/32
        - 1.1.18.48/32
        - 1.1.18.50/32
        - 1.1.18.52/32
        - 1.1.18.54/32
        - 1.1.18.56/32
        - 1.1.18.58/32
        - 1.1.18.60/32
        - 1.1.18.62/32
        - 1.1.18.64/32
        - 1.1.18.66/32
        - 1.1.18.68/32
        - 1.1.18.70/32
        - 1.1.18.72/32
        - 1.1.18.74/32
        - 1.1.18.76/32
        - 1.1.18.78/32
        - 1.1.18.80/32
        - 1.1.18.82/32
        - 1.1.18.84/32
        - 1.1.18.86/32
        - 1.1.18.88/32
        - 1.1.18.90/32
        - 1.1.18.92/32
        - 1.1.18.94/32
        - 1.1.18.96/32
        - 1.1.18.98/32
        - 1.1.18.100/32
        - 1.1.18.102/32
        - 1.1.18.104/32
        - 1.1.18.106/32
        - 1.1.18.108/32
        - 1.1.18.110/32
        - 1.1.18.112/32
        - 1.1.18.114/32
        - 1.1.18.116/32
        - 1.1.18.118/32
        - 1.1.18.120/32
        - 1.1.18.122/32
        - 1.1.18.124/32
        - 1.1.18.126/32
        - 1.1.18.128/32
        - 1.1.18.130/32
        - 1.1.18.132/32
        - 1.1.18.134/32
        - 1.1.18.136/32
        - 1.1.18.138/32
        - 1.1.18.140/32
        - 1.1.18.142/32
        - 1.1.18.144/32
        - 1.1.18.146/32
        - 1.1.18.148/32
        - 1.1.18.150/32
        - 1.1.18.152/32
        - 1.1.18.154/32
        - 1.1.18.156/32
        - 1.1.18.158/32
        - 1.1.18.160/32
        - 1.1.18.162/32
        - 1.1.18.164/32
        - 1.1.18.166/32
        - 1.1.18.168/32
        - 1.1.18.170/32
        - 1.1.18.172/32
        - 1.1.18.174/32
        - 1.1.18.176/32
        - 1.1.18.178/32
        - 1.1.18.180/32
        - 1.1.18.182/32
        - 1.1.18.184/32
        - 1.1.18.186/32
        - 1.1.18.188/32
        - 1.1.18.190/32
        - 1.1.18.192/32
        - 1.1.18.194/32
        - 1.1.18.196/32
        - 1.1.18.198/32
        - 1.1.18.200/32
        - 1.1.18.202/32
        - 1.1.18.204/32
        - 1.1.18.206/32
        - 1.1.18.208/32
        - 1.1.18.210/32
        - 1.1.18.212/32
        - 1.1.18.214/32
        - 1.1.18.216/32
        - 1.1.18.218/32
        - 1.1.18.220/32
        - 1.1.18.222/32
        - 1.1.18.224/32
        - 1.1.18.226/32
        - 1.1.18.228/32
        - 1.1.18.230/32
        - 1.1.18.232/32
        - 1.1.18.234/32
        - 1.1.18.236/32
        - 1.1.18.238/32
        - 1.1.18.240/32
        - 1.1.18.242/32
        - 1.1.18.244/32
        - 1.1.18.246/32
        - 1.1.18.248/32
        - 1.1.18.250/32
        - 1.1.18.252/32
        - 1.1.18.254/32
        - 1.1.19.2/32
        - 1.1.19.4/32
        - 1.1.19.6/32
        - 1.1.19.8/32
        - 1.1.19.10/32
        - 1.1.19.12/32
        - 1.1.19.14/32
        - 1.1.19.16/32
        - 1.1.19.18/32
        - 1.1.19.20/32
        - 1.1.19.22/32
        - 1.1.19.24/32
        - 1.1.19.26/32
        - 1.1.19.28/32
        - 1.1.19.30/32
        - 1.1.19.32/32
        - 1.1.19.34/32
        - 1.1.19.36/32
        - 1.1.19.38/32
        - 1.1.19.40/32
        - 1.1.19.42/32
        - 1.1.19.44/32
        - 1.1.19.46/32
        - 1.1.19.48/32
        - 1.1.19.50/32
        - 1.1.19.52/32
        - 1.1.19.54/32
        - 1.1.19.56/32
        - 1.1.19.58/32
        - 1.1.19.60/32
        - 1.1.19.62/32
        - 1.1.19.64/32
        - 1.1.19.66/32
        - 1.1.19.68/32
        - 1.1.19.70/32
        - 1.1.19.72/32
        - 1.1.19.74/32
        - 1.1.19.76/32
        - 1.1.19.78/32
        - 1.1.19.80/32
        - 1.1.19.82/32
        - 1.1.19.84/32
        - 1.1.19.86/32
        - 1.1.19.88/32
        - 1.1.19.90/32
        - 1.1.19.92/32
        - 1.1.19.94/32
        - 1.1.19.96/32
        - 1.1.19.98/32
        - 1.1.19.100/32
        - 1.1.19.102/32
        - 1.1.19.104/32
        - 1.1.19.106/32
        - 1.1.19.108/32
        - 1.1.19.110/32
        - 1.1.19.112/32
        - 1.1.19.114/32
        - 1.1.19.116/32
        - 1.1.19.118/32
        - 1.1.19.120/32
        - 1.1.19.122/32
        - 1.1.19.124/32
        - 1.1.19.126/32
        - 1.1.19.128/32
        - 1.1.19.130/32
        - 1.1.19.132/32
        - 1.1.19.134/32
        - 1.1.19.136/32
        - 1.1.19.138/32
        - 1.1.19.140/32
        - 1.1.19.142/32
        - 1.1.19.144/32
        - 1.1.19.146/32
        - 1.1.19.148/32
        - 1.1.19.150/32
        - 1.1.19.152/32
        - 1.1.19.154/32
        - 1.1.19.156/32
        - 1.1.19.158/32
        - 1.1.19.160/32
        - 1.1.19.162/32
        - 1.1.19.164/32
        - 1.1.19.166/32
        - 1.1.19.168/32
        - 1.1.19.170/32
        - 1.1.19.172/32
        - 1.1.19.174/32
        - 1.1.19.176/32
        - 1.1.19.178/32
        - 1.1.19.180/32
        - 1.1.19.182/32
        - 1.1.19.184/32
        - 1.1.19.186/32
        - 1.1.19.188/32
        - 1.1.19.190/32
        - 1.1.19.192/32
        - 1.1.19.194/32
        - 1.1.19.196/32
        - 1.1.19.198/32
        - 1.1.19.200/32
        - 1.1.19.202/32
        - 1.1.19.204/32
        - 1.1.19.206/32
        - 1.1.19.208/32
        - 1.1.19.210/32
        - 1.1.19.212/32
        - 1.1.19.214/32
        - 1.1.19.216/32
        - 1.1.19.218/32
        - 1.1.19.220/32
        - 1.1.19.222/32
        - 1.1.19.224/32
        - 1.1.19.226/32
        - 1.1.19.228/32
        - 1.1.19.230/32
        - 1.1.19.232/32
        - 1.1.19.234/32
        - 1.1.19.236/32
        - 1.1.19.238/32
        - 1.1.19.240/32
        - 1.1.19.242/32
        - 1.1.19.244/32
        - 1.1.19.246/32
        - 1.1.19.248/32
        - 1.1.19.250/32
        - 1.1.19.252/32
        - 1.1.19.254/32
        - 1.1.20.2/32
        - 1.1.20.4/32
        - 1.1.20.6/32
        - 1.1.20.8/32
        - 1.1.20.10/32
        - 1.1.20.12/32
        - 1.1.20.14/32
        - 1.1.20.16/32
        - 1.1.20.18/32
        - 1.1.20.20/32
        - 1.1.20.22/32
        - 1.1.20.24/32
        - 1.1.20.26/32
        - 1.1.20.28/32
        - 1.1.20.30/32
        - 1.1.20.32/32
        - 1.1.20.34/32
        - 1.1.20.36/32
        - 1.1.20.38/32
        - 1.1.20.40/32
        - 1.1.20.42/32
        - 1.1.20.44/32
        - 1.1.20.46/32
        - 1.1.20.48/32
        - 1.1.20.50/32
        - 1.1.20.52/32
        - 1.1.20.54/32
        - 1.1.20.56/32
        - 1.1.20.58/32
        - 1.1.20.60/32
        - 1.1.20.62/32
        - 1.1.20.64/32
        - 1.1.20.66/32
        - 1.1.20.68/32
        - 1.1.20.70/32
        - 1.1.20.72/32
        - 1.1.20.74/32
        - 1.1.20.76/32
        - 1.1.20.78/32
        - 1.1.20.80/32
        - 1.1.20.82/32
        - 1.1.20.84/32
        - 1.1.20.86/32
        - 1.1.20.88/32
        - 1.1.20.90/32
        - 1.1.20.92/32
        - 1.1.20.94/32
        - 1.1.20.96/32
        - 1.1.20.98/32
        - 1.1.20.100/32
        - 1.1.20.102/32
        - 1.1.20.104/32
        - 1.1.20.106/32
        - 1.1.20.108/32
        - 1.1.20.110/32
        - 1.1.20.112/32
        - 1.1.20.114/32
        - 1.1.20.116/32
        - 1.1.20.118/32
        - 1.1.20.120/32
        - 1.1.20.122/32
        - 1.1.20.124/32
        - 1.1.20.126/32
        - 1.1.20.128/32
        - 1.1.20.130/32
        - 1.1.20.132/32
        - 1.1.20.134/32
        - 1.1.20.136/32
        - 1.1.20.138/32
        - 1.1.20.140/32
        - 1.1.20.142/32
        - 1.1.20.144/32
        - 1.1.20.146/32
        - 1.1.20.148/32
        - 1.1.20.150/32
        - 1.1.20.152/32
        - 1.1.20.154/32
        - 1.1.20.156/32
        - 1.1.20.158/32
        - 1.1.20.160/32
        - 1.1.20.162/32
        - 1.1.20.164/32
        - 1.1.20.166/32
        - 1.1.20.168/32
        - 1.1.20.170/32
        - 1.1.20.172/32
        - 1.1.20.174/32
        - 1.1.20.176/32
        - 1.1.20.178/32
        - 1.1.20.180/32
        - 1.1.20.182/32
        - 1.1.20.184/32
        - 1.1.20.186/32
        - 1.1.20.188/32
        - 1.1.20.190/32
        - 1.1.20.192/32
        - 1.1.20.194/32
        - 1.1.20.196/32
        - 1.1.20.198/32
        - 1.1.20.200/32
        - 1.1.20.202/32
        - 1.1.20.204/32
        - 1.1.20.206/32
        - 1.1.20.208/32
        - 1.1.20.210/32
        - 1.1.20.212/32
        - 1.1.20.214/32
        - 1.1.20.216/32
        - 1.1.20.218/32
        - 1.1.20.220/32
        - 1.1.20.222/32
        - 1.1.20.224/32
        - 1.1.20.226/32
        - 1.1.20.228/32
        - 1.1.20.230/32
        - 1.1.20.232/32
        - 1.1.20.234/32
        - 1.1.20.236/32
        - 1.1.20.238/32
        - 1.1.20.240/32
        - 1.1.20.242/32
        - 1.1.20.244/32
        - 1.1.20.246/32
        - 1.1.20.248/32
        - 1.1.20.250/32
        - 1.1.20.252/32
        - 1.1.20.254/32
        - 1.1.21.2/32
        - 1.1.21.4/32
        - 1.1.21.6/32
        - 1.1.21.8/32
        - 1.1.21.10/32
        - 1.1.21.12/32
        - 1.1.21.14/32
        - 1.1.21.16/32
        - 1.1.21.18/32
        - 1.1.21.20/32
        - 1.1.21.22/32
        - 1.1.21.24/32
        - 1.1.21.26/32
        - 1.1.21.28/32
        - 1.1.21.30/32
        - 1.1.21.32/32
        - 1.1.21.34/32
        - 1.1.21.36/32
        - 1.1.21.38/32
        - 1.1.21.40/32
        - 1.1.21.42/32
        - 1.1.21.44/32
        - 1.1.21.46/32
        - 1.1.21.48/32
        - 1.1.21.50/32
        - 1.1.21.52/32
        - 1.1.21.54/32
        - 1.1.21.56/32
        - 1.1.21.58/32
        - 1.1.21.60/32
        - 1.1.21.62/32
        - 1.1.21.64/32
        - 1.1.21.66/32
        - 1.1.21.68/32
        - 1.1.21.70/32
        - 1.1.21.72/32
        - 1.1.21.74/32
        - 1.1.21.76/32
        - 1.1.21.78/32
        - 1.1.21.80/32
        - 1.1.21.82/32
        - 1.1.21.84/32
        - 1.1.21.86/32
        - 1.1.21.88/32
        - 1.1.21.90/32
        - 1.1.21.92/32
        - 1.1.21.94/32
        - 1.1.21.96/32
        - 1.1.21.98/32
        - 1.1.21.100/32
        - 1.1.21.102/32
        - 1.1.21.104/32
        - 1.1.21.106/32
        - 1.1.21.108/32
        - 1.1.21.110/32
        - 1.1.21.112/32
        - 1.1.21.114/32
        - 1.1.21.116/32
        - 1.1.21.118/32
        - 1.1.21.120/32
        - 1.1.21.122/32
        - 1.1.21.124/32
        - 1.1.21.126/32
        - 1.1.21.128/32
        - 1.1.21.130/32
        - 1.1.21.132/32
        - 1.1.21.134/32
        - 1.1.21.136/32
        - 1.1.21.138/32
        - 1.1.21.140/32
        - 1.1.21.142/32
        - 1.1.21.144/32
        - 1.1.21.146/32
        - 1.1.21.148/32
        - 1.1.21.150/32
        - 1.1.21.152/32
        - 1.1.21.154/32
        - 1.1.21.156/32
        - 1.1.21.158/32
        - 1.1.21.160/32
        - 1.1.21.162/32
        - 1.1.21.164/32
        - 1.1.21.166/32
        - 1.1.21.168/32
        - 1.1.21.170/32
        - 1.1.21.172/32
        - 1.1.21.174/32
        - 1.1.21.176/32
        - 1.1.21.178/32
        - 1.1.21.180/32
        - 1.1.21.182/32
        - 1.1.21.184/32
        - 1.1.21.186/32
        - 1.1.21.188/32
        - 1.1.21.190/32
        - 1.1.21.192/32
        - 1.1.21.194/32
        - 1.1.21.196/32
        - 1.1.21.198/32
        - 1.1.21.200/32
        - 1.1.21.202/32
        - 1.1.21.204/32
        - 1.1.21.206/32
        - 1.1.21.208/32
        - 1.1.21.210/32
        - 1.1.21.212/32
        - 1.1.21.214/32
        - 1.1.21.216/32
        - 1.1.21.218/32
        - 1.1.21.220/32
        - 1.1.21.222/32
        - 1.1.21.224/32
        - 1.1.21.226/32
        - 1.1.21.228/32
        - 1.1.21.230/32
        - 1.1.21.232/32
        - 1.1.21.234/32
        - 1.1.21.236/32
        - 1.1.21.238/32
        - 1.1.21.240/32
        - 1.1.21.242/32
        - 1.1.21.244/32
        - 1.1.21.246/32
        - 1.1.21.248/32
        - 1.1.21.250/32
        - 1.1.21.252/32
        - 1.1.21.254/32
        - 1.1.22.2/32
        - 1.1.22.4/32
        - 1.1.22.6/32
        - 1.1.22.8/32
        - 1.1.22.10/32
        - 1.1.22.12/32
        - 1.1.22.14/32
        - 1.1.22.16/32
        - 1.1.22.18/32
        - 1.1.22.20/32
        - 1.1.22.22/32
        - 1.1.22.24/32
        - 1.1.22.26/32
        - 1.1.22.28/32
        - 1.1.22.30/32
        - 1.1.22.32/32
        - 1.1.22.34/32
        - 1.1.22.36/32
        - 1.1.22.38/32
        - 1.1.22.40/32
        - 1.1.22.42/32
        - 1.1.22.44/32
        - 1.1.22.46/32
        - 1.1.22.48/32
        - 1.1.22.50/32
        - 1.1.22.52/32
        - 1.1.22.54/32
        - 1.1.22.56/32
        - 1.1.22.58/32
        - 1.1.22.60/32
        - 1.1.22.62/32
        - 1.1.22.64/32
        - 1.1.22.66/32
        - 1.1.22.68/32
        - 1.1.22.70/32
        - 1.1.22.72/32
        - 1.1.22.74/32
        - 1.1.22.76/32
        - 1.1.22.78/32
        - 1.1.22.80/32
        - 1.1.22.82/32
        - 1.1.22.84/32
        - 1.1.22.86/32
        - 1.1.22.88/32
        - 1.1.22.90/32
        - 1.1.22.92/32
        - 1.1.22.94/32
        - 1.1.22.96/32
        - 1.1.22.98/32
        - 1.1.22.100/32
        - 1.1.22.102/32
        - 1.1.22.104/32
        - 1.1.22.106/32
        - 1.1.22.108/32
        - 1.1.22.110/32
        - 1.1.22.112/32
        - 1.1.22.114/32
        - 1.1.22.116/32
        - 1.1.22.118/32
        - 1.1.22.120/32
        - 1.1.22.122/32
        - 1.1.22.124/32
        - 1.1.22.126/32
        - 1.1.22.128/32
        - 1.1.22.130/32
        - 1.1.22.132/32
        - 1.1.22.134/32
        - 1.1.22.136/32
        - 1.1.22.138/32
        - 1.1.22.140/32
        - 1.1.22.142/32
        - 1.1.22.144/32
        - 1.1.22.146/32
        - 1.1.22.148/32
        - 1.1.22.150/32
        - 1.1.22.152/32
        - 1.1.22.154/32
        - 1.1.22.156/32
        - 1.1.22.158/32
        - 1.1.22.160/32
        - 1.1.22.162/32
        - 1.1.22.164/32
        - 1.1.22.166/32
        - 1.1.22.168/32
        - 1.1.22.170/32
        - 1.1.22.172/32
        - 1.1.22.174/32
        - 1.1.22.176/32
        - 1.1.22.178/32
        - 1.1.22.180/32
        - 1.1.22.182/32
        - 1.1.22.184/32
        - 1.1.22.186/32
        - 1.1.22.188/32
        - 1.1.22.190/32
        - 1.1.22.192/32
        - 1.1.22.194/32
        - 1.1.22.196/32
        - 1.1.22.198/32
        - 1.1.22.200/32
        - 1.1.22.202/32
        - 1.1.22.204/32
        - 1.1.22.206/32
        - 1.1.22.208/32
        - 1.1.22.210/32
        - 1.1.22.212/32
        - 1.1.22.214/32
        - 1.1.22.216/32
        - 1.1.22.218/32
        - 1.1.22.220/32
        - 1.1.22.222/32
        - 1.1.22.224/32
        - 1.1.22.226/32
        - 1.1.22.228/32
        - 1.1.22.230/32
        - 1.1.22.232/32
        - 1.1.22.234/32
        - 1.1.22.236/32
        - 1.1.22.238/32
        - 1.1.22.240/32
        - 1.1.22.242/32
        - 1.1.22.244/32
        - 1.1.22.246/32
        - 1.1.22.248/32
        - 1.1.22.250/32
        - 1.1.22.252/32
        - 1.1.22.254/32
        - 1.1.23.2/32
        - 1.1.23.4/32
        - 1.1.23.6/32
        - 1.1.23.8/32
        - 1.1.23.10/32
        - 1.1.23.12/32
        - 1.1.23.14/32
        - 1.1.23.16/32
        - 1.1.23.18/32
        - 1.1.23.20/32
        - 1.1.23.22/32
        - 1.1.23.24/32
        - 1.1.23.26/32
        - 1.1.23.28/32
        - 1.1.23.30/32
        - 1.1.23.32/32
        - 1.1.23.34/32
        - 1.1.23.36/32
        - 1.1.23.38/32
        - 1.1.23.40/32
        - 1.1.23.42/32
        - 1.1.23.44/32
        - 1.1.23.46/32
        - 1.1.23.48/32
        - 1.1.23.50/32
        - 1.1.23.52/32
        - 1.1.23.54/32
        - 1.1.23.56/32
        - 1.1.23.58/32
        - 1.1.23.60/32
        - 1.1.23.62/32
        - 1.1.23.64/32
        - 1.1.23.66/32
        - 1.1.23.68/32
        - 1.1.23.70/32
        - 1.1.23.72/32
        - 1.1.23.74/32
        - 1.1.23.76/32
        - 1.1.23.78/32
        - 1.1.23.80/32
        - 1.1.23.82/32
        - 1.1.23.84/32
        - 1.1.23.86/32
        - 1.1.23.88/32
        - 1.1.23.90/32
        - 1.1.23.92/32
        - 1.1.23.94/32
        - 1.1.23.96/32
        - 1.1.23.98/32
        - 1.1.23.100/32
        - 1.1.23.102/32
        - 1.1.23.104/32
        - 1.1.23.106/32
        - 1.1.23.108/32
        - 1.1.23.110/32
        - 1.1.23.112/32
        - 1.1.23.114/32
        - 1.1.23.116/32
        - 1.1.23.118/32
        - 1.1.23.120/32
        - 1.1.23.122/32
        - 1.1.23.124/32
        - 1.1.23.126/32
        - 1.1.23.128/32
        - 1.1.23.130/32
        - 1.1.23.132/32
        - 1.1.23.134/32
        - 1.1.23.136/32
        - 1.1.23.138/32
        - 1.1.23.140/32
        - 1.1.23.142/32
        - 1.1.23.144/32
        - 1.1.23.146/32
        - 1.1.23.148/32
        - 1.1.23.150/32
        - 1.1.23.152/32
        - 1.1.23.154/32
        - 1.1.23.156/32
        - 1.1.23.158/32
        - 1.1.23.160/32
        - 1.1.23.162/32
        - 1.1.23.164/32
        - 1.1.23.166/32
        - 1.1.23.168/32
        - 1.1.23.170/32
        - 1.1.23.172/32
        - 1.1.23.174/32
        - 1.1.23.176/32
        - 1.1.23.178/32
        - 1.1.23.180/32
        - 1.1.23.182/32
        - 1.1.23.184/32
        - 1.1.23.186/32
        - 1.1.23.188/32
        - 1.1.23.190/32
        - 1.1.23.192/32
        - 1.1.23.194/32
        - 1.1.23.196/32
        - 1.1.23.198/32
        - 1.1.23.200/32
        - 1.1.23.202/32
        - 1.1.23.204/32
        - 1.1.23.206/32
        - 1.1.23.208/32
        - 1.1.23.210/32
        - 1.1.23.212/32
        - 1.1.23.214/32
        - 1.1.23.216/32
        - 1.1.23.218/32
        - 1.1.23.220/32
        - 1.1.23.222/32
        - 1.1.23.224/32
        - 1.1.23.226/32
        - 1.1.23.228/32
        - 1.1.23.230/32
        - 1.1.23.232/32
        - 1.1.23.234/32
        - 1.1.23.236/32
        - 1.1.23.238/32
        - 1.1.23.240/32
        - 1.1.23.242/32
        - 1.1.23.244/32
        - 1.1.23.246/32
        - 1.1.23.248/32
        - 1.1.23.250/32
        - 1.1.23.252/32
        - 1.1.23.254/32
        - 1.1.24.2/32
        - 1.1.24.4/32
        - 1.1.24.6/32
        - 1.1.24.8/32
        - 1.1.24.10/32
        - 1.1.24.12/32
        - 1.1.24.14/32
        - 1.1.24.16/32
        - 1.1.24.18/32
        - 1.1.24.20/32
        - 1.1.24.22/32
        - 1.1.24.24/32
        - 1.1.24.26/32
        - 1.1.24.28/32
        - 1.1.24.30/32
        - 1.1.24.32/32
        - 1.1.24.34/32
        - 1.1.24.36/32
        - 1.1.24.38/32
        - 1.1.24.40/32
        - 1.1.24.42/32
        - 1.1.24.44/32
        - 1.1.24.46/32
        - 1.1.24.48/32
        - 1.1.24.50/32
        - 1.1.24.52/32
        - 1.1.24.54/32
        - 1.1.24.56/32
        - 1.1.24.58/32
        - 1.1.24.60/32
        - 1.1.24.62/32
        - 1.1.24.64/32
        - 1.1.24.66/32
        - 1.1.24.68/32
        - 1.1.24.70/32
        - 1.1.24.72/32
        - 1.1.24.74/32
        - 1.1.24.76/32
        - 1.1.24.78/32
        - 1.1.24.80/32
        - 1.1.24.82/32
        - 1.1.24.84/32
        - 1.1.24.86/32
        - 1.1.24.88/32
        - 1.1.24.90/32
        - 1.1.24.92/32
        - 1.1.24.94/32
        - 1.1.24.96/32
        - 1.1.24.98/32
        - 1.1.24.100/32
        - 1.1.24.102/32
        - 1.1.24.104/32
        - 1.1.24.106/32
        - 1.1.24.108/32
        - 1.1.24.110/32
        - 1.1.24.112/32
        - 1.1.24.114/32
        - 1.1.24.116/32
        - 1.1.24.118/32
        - 1.1.24.120/32
        - 1.1.24.122/32
        - 1.1.24.124/32
        - 1.1.24.126/32
        - 1.1.24.128/32
        - 1.1.24.130/32
        - 1.1.24.132/32
        - 1.1.24.134/32
        - 1.1.24.136/32
        - 1.1.24.138/32
        - 1.1.24.140/32
        - 1.1.24.142/32
        - 1.1.24.144/32
        - 1.1.24.146/32
        - 1.1.24.148/32
        - 1.1.24.150/32
        - 1.1.24.152/32
        - 1.1.24.154/32
        - 1.1.24.156/32
        - 1.1.24.158/32
        - 1.1.24.160/32
        - 1.1.24.162/32
        - 1.1.24.164/32
        - 1.1.24.166/32
        - 1.1.24.168/32
        - 1.1.24.170/32
        - 1.1.24.172/32
        - 1.1.24.174/32
        - 1.1.24.176/32
        - 1.1.24.178/32
        - 1.1.24.180/32
        - 1.1.24.182/32
        - 1.1.24.184/32
        - 1.1.24.186/32
        - 1.1.24.188/32
        - 1.1.24.190/32
        - 1.1.24.192/32
        - 1.1.24.194/32
        - 1.1.24.196/32
        - 1.1.24.198/32
        - 1.1.24.200/32
        - 1.1.24.202/32
        - 1.1.24.204/32
        - 1.1.24.206/32
        - 1.1.24.208/32
        - 1.1.24.210/32
        - 1.1.24.212/32
        - 1.1.24.214/32
        - 1.1.24.216/32
        - 1.1.24.218/32
        - 1.1.24.220/32
        - 1.1.24.222/32
        - 1.1.24.224/32
        - 1.1.24.226/32
        - 1.1.24.228/32
        - 1.1.24.230/32
        - 1.1.24.232/32
        - 1.1.24.234/32
        - 1.1.24.236/32
        - 1.1.24.238/32
        - 1.1.24.240/32
        - 1.1.24.242/32
        - 1.1.24.244/32
        - 1.1.24.246/32
        - 1.1.24.248/32
        - 1.1.24.250/32
        - 1.1.24.252/32
        - 1.1.24.254/32
        - 1.1.25.2/32
        - 1.1.25.4/32
        - 1.1.25.6/32
        - 1.1.25.8/32
        - 1.1.25.10/32
        - 1.1.25.12/32
        - 1.1.25.14/32
        - 1.1.25.16/32
        - 1.1.25.18/32
        - 1.1.25.20/32
        - 1.1.25.22/32
        - 1.1.25.24/32
        - 1.1.25.26/32
        - 1.1.25.28/32
        - 1.1.25.30/32
        - 1.1.25.32/32
        - 1.1.25.34/32
        - 1.1.25.36/32
        - 1.1.25.38/32
        - 1.1.25.40/32
        - 1.1.25.42/32
        - 1.1.25.44/32
        - 1.1.25.46/32
        - 1.1.25.48/32
        - 1.1.25.50/32
        - 1.1.25.52/32
        - 1.1.25.54/32
        - 1.1.25.56/32
        - 1.1.25.58/32
        - 1.1.25.60/32
        - 1.1.25.62/32
        - 1.1.25.64/32
        - 1.1.25.66/32
        - 1.1.25.68/32
        - 1.1.25.70/32
        - 1.1.25.72/32
        - 1.1.25.74/32
        - 1.1.25.76/32
        - 1.1.25.78/32
        - 1.1.25.80/32
        - 1.1.25.82/32
        - 1.1.25.84/32
        - 1.1.25.86/32
        - 1.1.25.88/32
        - 1.1.25.90/32
        - 1.1.25.92/32
        - 1.1.25.94/32
        - 1.1.25.96/32
        - 1.1.25.98/32
        - 1.1.25.100/32
        - 1.1.25.102/32
        - 1.1.25.104/32
        - 1.1.25.106/32
        - 1.1.25.108/32
        - 1.1.25.110/32
        - 1.1.25.112/32
        - 1.1.25.114/32
        - 1.1.25.116/32
        - 1.1.25.118/32
        - 1.1.25.120/32
        - 1.1.25.122/32
        - 1.1.25.124/32
        - 1.1.25.126/32
        - 1.1.25.128/32
        - 1.1.25.130/32
        - 1.1.25.132/32
        - 1.1.25.134/32
        - 1.1.25.136/32
        - 1.1.25.138/32
        - 1.1.25.140/32
        - 1.1.25.142/32
        - 1.1.25.144/32
        - 1.1.25.146/32
        - 1.1.25.148/32
        - 1.1.25.150/32
        - 1.1.25.152/32
        - 1.1.25.154/32
        - 1.1.25.156/32
        - 1.1.25.158/32
        - 1.1.25.160/32
        - 1.1.25.162/32
        - 1.1.25.164/32
        - 1.1.25.166/32
        - 1.1.25.168/32
        - 1.1.25.170/32
        - 1.1.25.172/32
        - 1.1.25.174/32
        - 1.1.25.176/32
        - 1.1.25.178/32
        - 1.1.25.180/32
        - 1.1.25.182/32
        - 1.1.25.184/32
        - 1.1.25.186/32
        - 1.1.25.188/32
        - 1.1.25.190/32
        - 1.1.25.192/32
        - 1.1.25.194/32
        - 1.1.25.196/32
        - 1.1.25.198/32
        - 1.1.25.200/32
        - 1.1.25.202/32
        - 1.1.25.204/32
        - 1.1.25.206/32
        - 1.1.25.208/32
        - 1.1.25.210/32
        - 1.1.25.212/32
        - 1.1.25.214/32
        - 1.1.25.216/32
        - 1.1.25.218/32
        - 1.1.25.220/32
        - 1.1.25.222/32
        - 1.1.25.224/32
        - 1.1.25.226/32
        - 1.1.25.228/32
        - 1.1.25.230/32
        - 1.1.25.232/32
        - 1.1.25.234/32
        - 1.1.25.236/32
        - 1.1.25.238/32
        - 1.1.25.240/32
        - 1.1.25.242/32
        - 1.1.25.244/32
        - 1.1.25.246/32
        - 1.1.25.248/32
        - 1.1.25.250/32
        - 1.1.25.252/32
        - 1.1.25.254/32
        - 1.1.26.2/32
        - 1.1.26.4/32
        - 1.1.26.6/32
        - 1.1.26.8/32
        - 1.1.26.10/32
        - 1.1.26.12/32
        - 1.1.26.14/32
        - 1.1.26.16/32
        - 1.1.26.18/32
        - 1.1.26.20/32
        - 1.1.26.22/32
        - 1.1.26.24/32
        - 1.1.26.26/32
        - 1.1.26.28/32
        - 1.1.26.30/32
        - 1.1.26.32/32
        - 1.1.26.34/32
        - 1.1.26.36/32
        - 1.1.26.38/32
        - 1.1.26.40/32
        - 1.1.26.42/32
        - 1.1.26.44/32
        - 1.1.26.46/32
        - 1.1.26.48/32
        - 1.1.26.50/32
        - 1.1.26.52/32
        - 1.1.26.54/32
        - 1.1.26.56/32
        - 1.1.26.58/32
        - 1.1.26.60/32
        - 1.1.26.62/32
        - 1.1.26.64/32
        - 1.1.26.66/32
        - 1.1.26.68/32
        - 1.1.26.70/32
        - 1.1.26.72/32
        - 1.1.26.74/32
        - 1.1.26.76/32
        - 1.1.26.78/32
        - 1.1.26.80/32
        - 1.1.26.82/32
        - 1.1.26.84/32
        - 1.1.26.86/32
        - 1.1.26.88/32
        - 1.1.26.90/32
        - 1.1.26.92/32
        - 1.1.26.94/32
        - 1.1.26.96/32
        - 1.1.26.98/32
        - 1.1.26.100/32
        - 1.1.26.102/32
        - 1.1.26.104/32
        - 1.1.26.106/32
        - 1.1.26.108/32
        - 1.1.26.110/32
        - 1.1.26.112/32
        - 1.1.26.114/32
        - 1.1.26.116/32
        - 1.1.26.118/32
        - 1.1.26.120/32
        - 1.1.26.122/32
        - 1.1.26.124/32
        - 1.1.26.126/32
        - 1.1.26.128/32
        - 1.1.26.130/32
        - 1.1.26.132/32
        - 1.1.26.134/32
        - 1.1.26.136/32
        - 1.1.26.138/32
        - 1.1.26.140/32
        - 1.1.26.142/32
        - 1.1.26.144/32
        - 1.1.26.146/32
        - 1.1.26.148/32
        - 1.1.26.150/32
        - 1.1.26.152/32
        - 1.1.26.154/32
        - 1.1.26.156/32
        - 1.1.26.158/32
        - 1.1.26.160/32
        - 1.1.26.162/32
        - 1.1.26.164/32
        - 1.1.26.166/32
        - 1.1.26.168/32
        - 1.1.26.170/32
        - 1.1.26.172/32
        - 1.1.26.174/32
        - 1.1.26.176/32
        - 1.1.26.178/32
        - 1.1.26.180/32
        - 1.1.26.182/32
        - 1.1.26.184/32
        - 1.1.26.186/32
        - 1.1.26.188/32
        - 1.1.26.190/32
        - 1.1.26.192/32
        - 1.1.26.194/32
        - 1.1.26.196/32
        - 1.1.26.198/32
        - 1.1.26.200/32
        - 1.1.26.202/32
        - 1.1.26.204/32
        - 1.1.26.206/32
        - 1.1.26.208/32
        - 1.1.26.210/32
        - 1.1.26.212/32
        - 1.1.26.214/32
        - 1.1.26.216/32
        - 1.1.26.218/32
        - 1.1.26.220/32
        - 1.1.26.222/32
        - 1.1.26.224/32
        - 1.1.26.226/32
        - 1.1.26.228/32
        - 1.1.26.230/32
        - 1.1.26.232/32
        - 1.1.26.234/32
        - 1.1.26.236/32
        - 1.1.26.238/32
        - 1.1.26.240/32
        - 1.1.26.242/32
        - 1.1.26.244/32
        - 1.1.26.246/32
        - 1.1.26.248/32
        - 1.1.26.250/32
        - 1.1.26.252/32
        - 1.1.26.254/32
        - 1.1.27.2/32
        - 1.1.27.4/32
        - 1.1.27.6/32
        - 1.1.27.8/32
        - 1.1.27.10/32
        - 1.1.27.12/32
        - 1.1.27.14/32
        - 1.1.27.16/32
        - 1.1.27.18/32
        - 1.1.27.20/32
        - 1.1.27.22/32
        - 1.1.27.24/32
        - 1.1.27.26/32
        - 1.1.27.28/32
        - 1.1.27.30/32
        - 1.1.27.32/32
        - 1.1.27.34/32
        - 1.1.27.36/32
        - 1.1.27.38/32
        - 1.1.27.40/32
        - 1.1.27.42/32
        - 1.1.27.44/32
        - 1.1.27.46/32
        - 1.1.27.48/32
        - 1.1.27.50/32
        - 1.1.27.52/32
        - 1.1.27.54/32
        - 1.1.27.56/32
        - 1.1.27.58/32
        - 1.1.27.60/32
        - 1.1.27.62/32
        - 1.1.27.64/32
        - 1.1.27.66/32
        - 1.1.27.68/32
        - 1.1.27.70/32
        - 1.1.27.72/32
        - 1.1.27.74/32
        - 1.1.27.76/32
        - 1.1.27.78/32
        - 1.1.27.80/32
        - 1.1.27.82/32
        - 1.1.27.84/32
        - 1.1.27.86/32
        - 1.1.27.88/32
        - 1.1.27.90/32
        - 1.1.27.92/32
        - 1.1.27.94/32
        - 1.1.27.96/32
        - 1.1.27.98/32
        - 1.1.27.100/32
        - 1.1.27.102/32
        - 1.1.27.104/32
        - 1.1.27.106/32
        - 1.1.27.108/32
        - 1.1.27.110/32
        - 1.1.27.112/32
        - 1.1.27.114/32
        - 1.1.27.116/32
        - 1.1.27.118/32
        - 1.1.27.120/32
        - 1.1.27.122/32
        - 1.1.27.124/32
        - 1.1.27.126/32
        - 1.1.27.128/32
        - 1.1.27.130/32
        - 1.1.27.132/32
        - 1.1.27.134/32
        - 1.1.27.136/32
        - 1.1.27.138/32
        - 1.1.27.140/32
        - 1.1.27.142/32
        - 1.1.27.144/32
        - 1.1.27.146/32
        - 1.1.27.148/32
        - 1.1.27.150/32
        - 1.1.27.152/32
        - 1.1.27.154/32
        - 1.1.27.156/32
        - 1.1.27.158/32
        - 1.1.27.160/32
        - 1.1.27.162/32
        - 1.1.27.164/32
        - 1.1.27.166/32
        - 1.1.27.168/32
        - 1.1.27.170/32
        - 1.1.27.172/32
        - 1.1.27.174/32
        - 1.1.27.176/32
        - 1.1.27.178/32
        - 1.1.27.180/32
        - 1.1.27.182/32
        - 1.1.27.184/32
        - 1.1.27.186/32
        - 1.1.27.188/32
        - 1.1.27.190/32
        - 1.1.27.192/32
        - 1.1.27.194/32
        - 1.1.27.196/32
        - 1.1.27.198/32
        - 1.1.27.200/32
        - 1.1.27.202/32
        - 1.1.27.204/32
        - 1.1.27.206/32
        - 1.1.27.208/32
        - 1.1.27.210/32
        - 1.1.27.212/32
        - 1.1.27.214/32
        - 1.1.27.216/32
        - 1.1.27.218/32
        - 1.1.27.220/32
        - 1.1.27.222/32
        - 1.1.27.224/32
        - 1.1.27.226/32
        - 1.1.27.228/32
        - 1.1.27.230/32
        - 1.1.27.232/32
        - 1.1.27.234/32
        - 1.1.27.236/32
        - 1.1.27.238/32
        - 1.1.27.240/32
        - 1.1.27.242/32
        - 1.1.27.244/32
        - 1.1.27.246/32
        - 1.1.27.248/32
        - 1.1.27.250/32
        - 1.1.27.252/32
        - 1.1.27.254/32
        - 1.1.28.2/32
        - 1.1.28.4/32
        - 1.1.28.6/32
        - 1.1.28.8/32
        - 1.1.28.10/32
        - 1.1.28.12/32
        - 1.1.28.14/32
        - 1.1.28.16/32
        - 1.1.28.18/32
        - 1.1.28.20/32
        - 1.1.28.22/32
        - 1.1.28.24/32
        - 1.1.28.26/32
        - 1.1.28.28/32
        - 1.1.28.30/32
        - 1.1.28.32/32
        - 1.1.28.34/32
        - 1.1.28.36/32
        - 1.1.28.38/32
        - 1.1.28.40/32
        - 1.1.28.42/32
        - 1.1.28.44/32
        - 1.1.28.46/32
        - 1.1.28.48/32
        - 1.1.28.50/32
        - 1.1.28.52/32
        - 1.1.28.54/32
        - 1.1.28.56/32
        - 1.1.28.58/32
        - 1.1.28.60/32
        - 1.1.28.62/32
        - 1.1.28.64/32
        - 1.1.28.66/32
        - 1.1.28.68/32
        - 1.1.28.70/32
        - 1.1.28.72/32
        - 1.1.28.74/32
        - 1.1.28.76/32
        - 1.1.28.78/32
        - 1.1.28.80/32
        - 1.1.28.82/32
        - 1.1.28.84/32
        - 1.1.28.86/32
        - 1.1.28.88/32
        - 1.1.28.90/32
        - 1.1.28.92/32
        - 1.1.28.94/32
        - 1.1.28.96/32
        - 1.1.28.98/32
        - 1.1.28.100/32
        - 1.1.28.102/32
        - 1.1.28.104/32
        - 1.1.28.106/32
        - 1.1.28.108/32
        - 1.1.28.110/32
        - 1.1.28.112/32
        - 1.1.28.114/32
        - 1.1.28.116/32
        - 1.1.28.118/32
        - 1.1.28.120/32
        - 1.1.28.122/32
        - 1.1.28.124/32
        - 1.1.28.126/32
        - 1.1.28.128/32
        - 1.1.28.130/32
        - 1.1.28.132/32
        - 1.1.28.134/32
        - 1.1.28.136/32
        - 1.1.28.138/32
        - 1.1.28.140/32
        - 1.1.28.142/32
        - 1.1.28.144/32
        - 1.1.28.146/32
        - 1.1.28.148/32
        - 1.1.28.150/32
        - 1.1.28.152/32
        - 1.1.28.154/32
        - 1.1.28.156/32
        - 1.1.28.158/32
        - 1.1.28.160/32
        - 1.1.28.162/32
        - 1.1.28.164/32
        - 1.1.28.166/32
        - 1.1.28.168/32
        - 1.1.28.170/32
        - 1.1.28.172/32
        - 1.1.28.174/32
        - 1.1.28.176/32
        - 1.1.28.178/32
        - 1.1.28.180/32
        - 1.1.28.182/32
        - 1.1.28.184/32
        - 1.1.28.186/32
        - 1.1.28.188/32
        - 1.1.28.190/32
        - 1.1.28.192/32
        - 1.1.28.194/32
        - 1.1.28.196/32
        - 1.1.28.198/32
        - 1.1.28.200/32
        - 1.1.28.202/32
        - 1.1.28.204/32
        - 1.1.28.206/32
        - 1.1.28.208/32
        - 1.1.28.210/32
        - 1.1.28.212/32
        - 1.1.28.214/32
        - 1.1.28.216/32
        - 1.1.28.218/32
        - 1.1.28.220/32
        - 1.1.28.222/32
        - 1.1.28.224/32
        - 1.1.28.226/32
        - 1.1.28.228/32
        - 1.1.28.230/32
        - 1.1.28.232/32
        - 1.1.28.234/32
        - 1.1.28.236/32
        - 1.1.28.238/32
        - 1.1.28.240/32
        - 1.1.28.242/32
        - 1.1.28.244/32
        - 1.1.28.246/32
        - 1.1.28.248/32
        - 1.1.28.250/32
        - 1.1.28.252/32
        - 1.1.28.254/32
        - 1.1.29.2/32
        - 1.1.29.4/32
        - 1.1.29.6/32
        - 1.1.29.8/32
        - 1.1.29.10/32
        - 1.1.29.12/32
        - 1.1.29.14/32
        - 1.1.29.16/32
        - 1.1.29.18/32
        - 1.1.29.20/32
        - 1.1.29.22/32
        - 1.1.29.24/32
        - 1.1.29.26/32
        - 1.1.29.28/32
        - 1.1.29.30/32
        - 1.1.29.32/32
        - 1.1.29.34/32
        - 1.1.29.36/32
        - 1.1.29.38/32
        - 1.1.29.40/32
        - 1.1.29.42/32
        - 1.1.29.44/32
        - 1.1.29.46/32
        - 1.1.29.48/32
        - 1.1.29.50/32
        - 1.1.29.52/32
        - 1.1.29.54/32
        - 1.1.29.56/32
        - 1.1.29.58/32
        - 1.1.29.60/32
        - 1.1.29.62/32
        - 1.1.29.64/32
        - 1.1.29.66/32
        - 1.1.29.68/32
        - 1.1.29.70/32
        - 1.1.29.72/32
        - 1.1.29.74/32
        - 1.1.29.76/32
        - 1.1.29.78/32
        - 1.1.29.80/32
        - 1.1.29.82/32
        - 1.1.29.84/32
        - 1.1.29.86/32
        - 1.1.29.88/32
        - 1.1.29.90/32
        - 1.1.29.92/32
        - 1.1.29.94/32
        - 1.1.29.96/32
        - 1.1.29.98/32
        - 1.1.29.100/32
        - 1.1.29.102/32
        - 1.1.29.104/32
        - 1.1.29.106/32
        - 1.1.29.108/32
        - 1.1.29.110/32
        - 1.1.29.112/32
        - 1.1.29.114/32
        - 1.1.29.116/32
        - 1.1.29.118/32
        - 1.1.29.120/32
        - 1.1.29.122/32
        - 1.1.29.124/32
        - 1.1.29.126/32
        - 1.1.29.128/32
        - 1.1.29.130/32
        - 1.1.29.132/32
        - 1.1.29.134/32
        - 1.1.29.136/32
        - 1.1.29.138/32
        - 1.1.29.140/32
        - 1.1.29.142/32
        - 1.1.29.144/32
        - 1.1.29.146/32
        - 1.1.29.148/32
        - 1.1.29.150/32
        - 1.1.29.152/32
        - 1.1.29.154/32
        - 1.1.29.156/32
        - 1.1.29.158/32
        - 1.1.29.160/32
        - 1.1.29.162/32
        - 1.1.29.164/32
        - 1.1.29.166/32
        - 1.1.29.168/32
        - 1.1.29.170/32
        - 1.1.29.172/32
        - 1.1.29.174/32
        - 1.1.29.176/32
        - 1.1.29.178/32
        - 1.1.29.180/32
        - 1.1.29.182/32
        - 1.1.29.184/32
        - 1.1.29.186/32
        - 1.1.29.188/32
        - 1.1.29.190/32
        - 1.1.29.192/32
        - 1.1.29.194/32
        - 1.1.29.196/32
        - 1.1.29.198/32
        - 1.1.29.200/32
        - 1.1.29.202/32
        - 1.1.29.204/32
        - 1.1.29.206/32
        - 1.1.29.208/32
        - 1.1.29.210/32
        - 1.1.29.212/32
        - 1.1.29.214/32
        - 1.1.29.216/32
        - 1.1.29.218/32
        - 1.1.29.220/32
        - 1.1.29.222/32
        - 1.1.29.224/32
        - 1.1.29.226/32
        - 1.1.29.228/32
        - 1.1.29.230/32
        - 1.1.29.232/32
        - 1.1.29.234/32
        - 1.1.29.236/32
        - 1.1.29.238/32
        - 1.1.29.240/32
        - 1.1.29.242/32
        - 1.1.29.244/32
        - 1.1.29.246/32
        - 1.1.29.248/32
        - 1.1.29.250/32
        - 1.1.29.252/32
        - 1.1.29.254/32
        - 1.1.30.2/32
        - 1.1.30.4/32
        - 1.1.30.6/32
        - 1.1.30.8/32
        - 1.1.30.10/32
        - 1.1.30.12/32
        - 1.1.30.14/32
        - 1.1.30.16/32
        - 1.1.30.18/32
        - 1.1.30.20/32
        - 1.1.30.22/32
        - 1.1.30.24/32
        - 1.1.30.26/32
        - 1.1.30.28/32
        - 1.1.30.30/32
        - 1.1.30.32/32
        - 1.1.30.34/32
        - 1.1.30.36/32
        - 1.1.30.38/32
        - 1.1.30.40/32
        - 1.1.30.42/32
        - 1.1.30.44/32
        - 1.1.30.46/32
        - 1.1.30.48/32
        - 1.1.30.50/32
        - 1.1.30.52/32
        - 1.1.30.54/32
        - 1.1.30.56/32
        - 1.1.30.58/32
        - 1.1.30.60/32
        - 1.1.30.62/32
        - 1.1.30.64/32
        - 1.1.30.66/32
        - 1.1.30.68/32
        - 1.1.30.70/32
        - 1.1.30.72/32
        - 1.1.30.74/32
        - 1.1.30.76/32
        - 1.1.30.78/32
        - 1.1.30.80/32
        - 1.1.30.82/32
        - 1.1.30.84/32
        - 1.1.30.86/32
        - 1.1.30.88/32
        - 1.1.30.90/32
        - 1.1.30.92/32
        - 1.1.30.94/32
        - 1.1.30.96/32
        - 1.1.30.98/32
        - 1.1.30.100/32
        - 1.1.30.102/32
        - 1.1.30.104/32
        - 1.1.30.106/32
        - 1.1.30.108/32
        - 1.1.30.110/32
        - 1.1.30.112/32
        - 1.1.30.114/32
        - 1.1.30.116/32
        - 1.1.30.118/32
        - 1.1.30.120/32
        - 1.1.30.122/32
        - 1.1.30.124/32
        - 1.1.30.126/32
        - 1.1.30.128/32
        - 1.1.30.130/32
        - 1.1.30.132/32
        - 1.1.30.134/32
        - 1.1.30.136/32
        - 1.1.30.138/32
        - 1.1.30.140/32
        - 1.1.30.142/32
        - 1.1.30.144/32
        - 1.1.30.146/32
        - 1.1.30.148/32
        - 1.1.30.150/32
        - 1.1.30.152/32
        - 1.1.30.154/32
        - 1.1.30.156/32
        - 1.1.30.158/32
        - 1.1.30.160/32
        - 1.1.30.162/32
        - 1.1.30.164/32
        - 1.1.30.166/32
        - 1.1.30.168/32
        - 1.1.30.170/32
        - 1.1.30.172/32
        - 1.1.30.174/32
        - 1.1.30.176/32
        - 1.1.30.178/32
        - 1.1.30.180/32
        - 1.1.30.182/32
        - 1.1.30.184/32
        - 1.1.30.186/32
        - 1.1.30.188/32
        - 1.1.30.190/32
        - 1.1.30.192/32
        - 1.1.30.194/32
        - 1.1.30.196/32
        - 1.1.30.198/32
        - 1.1.30.200/32
        - 1.1.30.202/32
        - 1.1.30.204/32
        - 1.1.30.206/32
        - 1.1.30.208/32
        - 1.1.30.210/32
        - 1.1.30.212/32
        - 1.1.30.214/32
        - 1.1.30.216/32
        - 1.1.30.218/32
        - 1.1.30.220/32
        - 1.1.30.222/32
        - 1.1.30.224/32
        - 1.1.30.226/32
        - 1.1.30.228/32
        - 1.1.30.230/32
        - 1.1.30.232/32
        - 1.1.30.234/32
        - 1.1.30.236/32
        - 1.1.30.238/32
        - 1.1.30.240/32
        - 1.1.30.242/32
        - 1.1.30.244/32
        - 1.1.30.246/32
        - 1.1.30.248/32
        - 1.1.30.250/32
        - 1.1.30.252/32
        - 1.1.30.254/32
        - 1.1.31.2/32
        - 1.1.31.4/32
        - 1.1.31.6/32
        - 1.1.31.8/32
        - 1.1.31.10/32
        - 1.1.31.12/32
        - 1.1.31.14/32
        - 1.1.31.16/32
        - 1.1.31.18/32
        - 1.1.31.20/32
        - 1.1.31.22/32
        - 1.1.31.24/32
        - 1.1.31.26/32
        - 1.1.31.28/32
        - 1.1.31.30/32
        - 1.1.31.32/32
        - 1.1.31.34/32
        - 1.1.31.36/32
        - 1.1.31.38/32
        - 1.1.31.40/32
        - 1.1.31.42/32
        - 1.1.31.44/32
        - 1.1.31.46/32
        - 1.1.31.48/32
        - 1.1.31.50/32
        - 1.1.31.52/32
        - 1.1.31.54/32
        - 1.1.31.56/32
        - 1.1.31.58/32
        - 1.1.31.60/32
        - 1.1.31.62/32
        - 1.1.31.64/32
        - 1.1.31.66/32
        - 1.1.31.68/32
        - 1.1.31.70/32
        - 1.1.31.72/32
        - 1.1.31.74/32
        - 1.1.31.76/32
        - 1.1.31.78/32
        - 1.1.31.80/32
        - 1.1.31.82/32
        - 1.1.31.84/32
        - 1.1.31.86/32
        - 1.1.31.88/32
        - 1.1.31.90/32
        - 1.1.31.92/32
        - 1.1.31.94/32
        - 1.1.31.96/32
        - 1.1.31.98/32
        - 1.1.31.100/32
        - 1.1.31.102/32
        - 1.1.31.104/32
        - 1.1.31.106/32
        - 1.1.31.108/32
        - 1.1.31.110/32
        - 1.1.31.112/32
        - 1.1.31.114/32
        - 1.1.31.116/32
        - 1.1.31.118/32
        - 1.1.31.120/32
        - 1.1.31.122/32
        - 1.1.31.124/32
        - 1.1.31.126/32
        - 1.1.31.128/32
        - 1.1.31.130/32
        - 1.1.31.132/32
        - 1.1.31.134/32
        - 1.1.31.136/32
        - 1.1.31.138/32
        - 1.1.31.140/32
        - 1.1.31.142/32
        - 1.1.31.144/32
        - 1.1.31.146/32
        - 1.1.31.148/32
        - 1.1.31.150/32
        - 1.1.31.152/32
        - 1.1.31.154/32
        - 1.1.31.156/32
        - 1.1.31.158/32
        - 1.1.31.160/32
        - 1.1.31.162/32
        - 1.1.31.164/32
        - 1.1.31.166/32
        - 1.1.31.168/32
        - 1.1.31.170/32
        - 1.1.31.172/32
        - 1.1.31.174/32
        - 1.1.31.176/32
        - 1.1.31.178/32
        - 1.1.31.180/32
        - 1.1.31.182/32
        - 1.1.31.184/32
        - 1.1.31.186/32
        - 1.1.31.188/32
        - 1.1.31.190/32
        - 1.1.31.192/32
        - 1.1.31.194/32
        - 1.1.31.196/32
        - 1.1.31.198/32
        - 1.1.31.200/32
        - 1.1.31.202/32
        - 1.1.31.204/32
        - 1.1.31.206/32
        - 1.1.31.208/32
        - 1.1.31.210/32
        - 1.1.31.212/32
        - 1.1.31.214/32
        - 1.1.31.216/32
        - 1.1.31.218/32
        - 1.1.31.220/32
        - 1.1.31.222/32
        - 1.1.31.224/32
        - 1.1.31.226/32
        - 1.1.31.228/32
        - 1.1.31.230/32
        - 1.1.31.232/32
        - 1.1.31.234/32
        - 1.1.31.236/32
        - 1.1.31.238/32
        - 1.1.31.240/32
        - 1.1.31.242/32
        - 1.1.31.244/32
        - 1.1.31.246/32
        - 1.1.31.248/32
        - 1.1.31.250/32
        - 1.1.31.252/32
        - 1.1.31.254/32
        - 1.1.32.2/32
        - 1.1.32.4/32
        - 1.1.32.6/32
        - 1.1.32.8/32
        - 1.1.32.10/32
        - 1.1.32.12/32
        - 1.1.32.14/32
        - 1.1.32.16/32
        - 1.1.32.18/32
        - 1.1.32.20/32
        - 1.1.32.22/32
        - 1.1.32.24/32
        - 1.1.32.26/32
        - 1.1.32.28/32
        - 1.1.32.30/32
        - 1.1.32.32/32
        - 1.1.32.34/32
        - 1.1.32.36/32
        - 1.1.32.38/32
        - 1.1.32.40/32
        - 1.1.32.42/32
        - 1.1.32.44/32
        - 1.1.32.46/32
        - 1.1.32.48/32
        - 1.1.32.50/32
        - 1.1.32.52/32
        - 1.1.32.54/32
        - 1.1.32.56/32
        - 1.1.32.58/32
        - 1.1.32.60/32
        - 1.1.32.62/32
        - 1.1.32.64/32
        - 1.1.32.66/32
        - 1.1.32.68/32
        - 1.1.32.70/32
        - 1.1.32.72/32
        - 1.1.32.74/32
        - 1.1.32.76/32
        - 1.1.32.78/32
        - 1.1.32.80/32
        - 1.1.32.82/32
        - 1.1.32.84/32
        - 1.1.32.86/32
        - 1.1.32.88/32
        - 1.1.32.90/32
        - 1.1.32.92/32
        - 1.1.32.94/32
        - 1.1.32.96/32
        - 1.1.32.98/32
        - 1.1.32.100/32
        - 1.1.32.102/32
        - 1.1.32.104/32
        - 1.1.32.106/32
        - 1.1.32.108/32
        - 1.1.32.110/32
        - 1.1.32.112/32
        - 1.1.32.114/32
        - 1.1.32.116/32
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerAzureCidrYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerAzureCidrYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerAzureCidrYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerAzureCidrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-azure-cidr.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerClbYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    replicas: 1
    endpointPublishingStrategy:
      loadBalancer:
        providerParameters:
          aws:
            type: Classic
          type: AWS
        scope: External
      type: LoadBalancerService
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerClbYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerClbYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerClbYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerClbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-clb.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerExternalYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    replicas: 1
    endpointPublishingStrategy:
      loadBalancer:
        scope: External
      type: LoadBalancerService
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerExternalYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerExternalYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerExternalYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerExternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-external.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerHnProxyYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    replicas: 1
    endpointPublishingStrategy:
      hostNetwork:
        protocol: PROXY
      type: HostNetwork
    nodePlacement:
      nodeSelector:
        matchLabels:
          kubernetes.io/os: linux
          node-role.kubernetes.io/worker: ""
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerHnProxyYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerHnProxyYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerHnProxyYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerHnProxyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-hn-PROXY.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerHostnetworkOnlyYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    replicas: 1
    endpointPublishingStrategy:
      type: HostNetwork
      hostNetwork:
        httpPort:  ${{HTTPPORT}}
        httpsPort: ${{HTTPSPORT}}
        statsPort: ${{STATSPORT}}
    nodePlacement:
      nodeSelector:
        matchLabels:
          kubernetes.io/os: linux
          node-role.kubernetes.io/worker: ""
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
- name: HTTPPORT
- name: HTTPSPORT
- name: STATSPORT
`)

func testExtendedTestdataRouterIngresscontrollerHostnetworkOnlyYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerHostnetworkOnlyYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerHostnetworkOnlyYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerHostnetworkOnlyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-hostnetwork-only.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerNpProxyYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    replicas: 1
    endpointPublishingStrategy:
      nodePort:
        protocol: PROXY
      type: NodePortService
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerNpProxyYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerNpProxyYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerNpProxyYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerNpProxyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-np-PROXY.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerNpYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    replicas: 1
    endpointPublishingStrategy:
      type: NodePortService
    routeAdmission:
      namespaceOwnership: Strict
      wildcardPolicy: WildcardsDisallowed
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerNpYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerNpYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerNpYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerNpYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-np.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerPrivateYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    replicas: 1
    endpointPublishingStrategy:
      type: Private
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerPrivateYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerPrivateYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerPrivateYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerPrivateYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-private.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerShardYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain:  ${SHARD}-${DOMAIN}
    replicas: 1
    routeSelector:
      matchLabels:
        shard: ${SHARD}
    endpointPublishingStrategy:
      type: NodePortService
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
- name: SHARD
`)

func testExtendedTestdataRouterIngresscontrollerShardYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerShardYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerShardYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerShardYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-shard.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerSidecarYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    endpointPublishingStrategy:
      type: NodePortService
    replicas: 1
    logging:
      access:
        destination:
          type: Container
          container: {}
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerSidecarYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerSidecarYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerSidecarYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerSidecarYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-sidecar.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerSyslogYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    domain: ${DOMAIN}
    endpointPublishingStrategy:
      type: NodePortService
    replicas: 1
    logging:
      access:
        destination:
          type: Syslog
          syslog:
            address: 1.2.3.4
            port: 514
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerSyslogYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerSyslogYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerSyslogYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerSyslogYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-syslog.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIngresscontrollerTuningYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: operator.openshift.io/v1
  kind: IngressController
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    tuningOptions: 
      headerBufferBytes: 16385
      headerBufferMaxRewriteBytes: 4097
      threadCount: 4
      maxConnections: -1
    domain: ${DOMAIN}
    replicas: 1
    endpointPublishingStrategy:
      type: NodePortService
    nodePlacement:
      nodeSelector:
        matchLabels:
          beta.kubernetes.io/os: linux
      tolerations:
      - effect: NoSchedule
        operator: Exists
parameters:
- name: NAME
- name: NAMESPACE
  value: openshift-ingress-operator
- name: DOMAIN
`)

func testExtendedTestdataRouterIngresscontrollerTuningYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIngresscontrollerTuningYaml, nil
}

func testExtendedTestdataRouterIngresscontrollerTuningYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIngresscontrollerTuningYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ingresscontroller-tuning.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterIpfailoverYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
    labels:
      ipfailover: hello-openshift
  spec:
    strategy:
      type: Recreate
    replicas: 2
    selector:
      matchLabels:
        ipfailover: hello-openshift
    template:
      metadata:
        labels:
          ipfailover: hello-openshift
      spec:
        serviceAccountName: ipfailover
        privileged: true
        hostNetwork: true
        nodeSelector:
          node-role.kubernetes.io/worker: ""
        containers:
        - name: openshift-ipfailover
          image: ${IMAGE}
          ports:
          - containerPort: 63000
            hostPort: 63000
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          volumeMounts:
          - name: lib-modules
            mountPath: /lib/modules
            readOnly: true
          - name: host-slash
            mountPath: /host
            readOnly: true
            mountPropagation: HostToContainer
          - name: etc-sysconfig
            mountPath: /etc/sysconfig
            readOnly: true
          env:
          - name: OPENSHIFT_HA_CONFIG_NAME
            value: "ipfailover"
          - name: OPENSHIFT_HA_VIRTUAL_IPS
            value: ${VIRTUALIPS}
          - name: OPENSHIFT_HA_VIP_GROUPS
            value: "10"
          - name: OPENSHIFT_HA_NETWORK_INTERFACE
            value: ${HAINTERFACE}
          - name: OPENSHIFT_HA_MONITOR_PORT
            value: ${MONITORPORT}
          - name: OPENSHIFT_HA_VRRP_ID_OFFSET
            value: ${VRRP_ID_OFFSET}
          - name: OPENSHIFT_HA_REPLICA_COUNT
            value: "2"
          - name: OPENSHIFT_HA_IPTABLES_CHAIN
            value: "INPUT"
          - name: OPENSHIFT_HA_PREEMPTION
            value: "nopreempt"
          - name: OPENSHIFT_HA_CHECK_INTERVAL
            value: "5"
          livenessProbe:
            initialDelaySeconds: 10
            exec:
              command:
              - pgrep
              - keepalived
        volumes:
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: host-slash
          hostPath:
            path: /
        - name: etc-sysconfig
          hostPath:
            path: /etc/sysconfig
parameters:
- name: NAME
- name: NAMESPACE
- name: IMAGE
- name: VIRTUALIPS
  value: "192.168.123.123"
- name: MONITORPORT
  value: "22"
- name: HAINTERFACE
- name: VRRP_ID_OFFSET
  value: "9"
`)

func testExtendedTestdataRouterIpfailoverYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterIpfailoverYaml, nil
}

func testExtendedTestdataRouterIpfailoverYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterIpfailoverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ipfailover.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterMicroshiftIngressDestcaYaml = []byte(`apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-ms-reen
  annotations:
    route.openshift.io/destination-ca-certificate-secret: service-secret
    route.openshift.io/termination: reencrypt
spec:
  rules:
  - host: service-secure-test.example.com
    http:
      paths:
      - backend:
          service:
            name: service-secure
            port:
              number: 27443
        path: "/"
        pathType: Prefix
`)

func testExtendedTestdataRouterMicroshiftIngressDestcaYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterMicroshiftIngressDestcaYaml, nil
}

func testExtendedTestdataRouterMicroshiftIngressDestcaYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterMicroshiftIngressDestcaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/microshift-ingress-destca.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterMicroshiftIngressHttpYaml = []byte(`apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-on-microshift
spec:
  rules:
  - host: service-unsecure-test.example.com
    http:
      paths:
      - backend:
          service:
            name: service-unsecure
            port:
              number: 27017
        path: "/"
        pathType: Prefix
`)

func testExtendedTestdataRouterMicroshiftIngressHttpYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterMicroshiftIngressHttpYaml, nil
}

func testExtendedTestdataRouterMicroshiftIngressHttpYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterMicroshiftIngressHttpYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/microshift-ingress-http.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterOcp57404StatefulSetYaml = []byte(`apiVersion: v1
kind: List
items:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: echoenv-sts
  spec:
    selector:
      matchLabels:
        app: echoenv-sts
    replicas: 2
    template:
      metadata:
        labels:
          app: echoenv-sts
      spec:
        terminationGracePeriodSeconds: 10
        containers:
        - name: nginx
          image: quay.io/openshifttest/nginx-alpine@sha256:cee6930776b92dc1e93b73f9e5965925d49cff3d2e91e1d071c2f0ff72cbca29
          ports:
          - containerPort: 8080
            name: web
- apiVersion: v1
  kind: Service
  metadata:
    name: echoenv-statefulset-service 
    labels:
      app: echoenv-sts
  spec:
    ports:
    - port: 8080
      name: web
    clusterIP: None
    selector:
      app: echoenv-sts

`)

func testExtendedTestdataRouterOcp57404StatefulSetYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterOcp57404StatefulSetYaml, nil
}

func testExtendedTestdataRouterOcp57404StatefulSetYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterOcp57404StatefulSetYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ocp57404-stateful-set.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterOcp73771RoleYaml = []byte(`apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
  resourceNames: ["mytls"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-reader-binding
subjects:
- kind: ServiceAccount
  name: router
  namespace: openshift-ingress
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
---
`)

func testExtendedTestdataRouterOcp73771RoleYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterOcp73771RoleYaml, nil
}

func testExtendedTestdataRouterOcp73771RoleYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterOcp73771RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/ocp73771-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterRsyslogdPodYaml = []byte(`kind: Pod
apiVersion: v1
metadata:
  name: rsyslogd-pod
  labels:
    name: rsyslogd
spec:
  containers:
  - image: quay.io/openshifttest/rsyslogd-container@sha256:e806eb41f05d7cc6eec96bf09c7bcb692f97562d4a983cb019289bd048d9aee2
    name: rsyslogd-container
    securityContext:
      privileged: true
    ports:
    - containerPort: 514
      protocol: TCP
    - containerPort: 514
      protocol: UDP
    resources:
      limits:
        memory: 340Mi
`)

func testExtendedTestdataRouterRsyslogdPodYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterRsyslogdPodYaml, nil
}

func testExtendedTestdataRouterRsyslogdPodYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterRsyslogdPodYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/rsyslogd-pod.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterSccBug2007246Json = []byte(`{
    "allowHostDirVolumePlugin": false,
    "allowHostIPC": false,
    "allowHostNetwork": false,
    "allowHostPID": false,
    "allowHostPorts": false,
    "allowPrivilegeEscalation": false,
    "allowPrivilegedContainer": false,
    "allowedCapabilities": null,
    "apiVersion": "security.openshift.io/v1",
    "defaultAddCapabilities": null,
    "fsGroup": {
        "type": "MustRunAs"
    },
    "groups": [
        "system:authenticated"
    ],
    "kind": "SecurityContextConstraints",
    "metadata": {
        "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true",
            "kubernetes.io/description": "restricted denies access to all host features and requires pods to be run with a UID, and SELinux context that are allocated to the namespace.  This is the most restrictive SCC and it is used by default for authenticated users.",
            "release.openshift.io/create-only": "true"
        },
        "name": "custom-restricted"
    },
    "priority": null,
    "readOnlyRootFilesystem": false,
    "requiredDropCapabilities": [
        "KILL",
        "MKNOD",
        "SETUID",
        "SETGID"
    ],
    "runAsUser": {
        "type": "MustRunAsRange"
    },
    "seLinuxContext": {
        "type": "MustRunAs"
    },
    "supplementalGroups": {
        "type": "RunAsAny"
    },
    "users": [],
    "volumes": [
        "configMap",
        "downwardAPI",
        "emptyDir",
        "persistentVolumeClaim",
        "projected",
        "secret"
    ]
}
`)

func testExtendedTestdataRouterSccBug2007246JsonBytes() ([]byte, error) {
	return _testExtendedTestdataRouterSccBug2007246Json, nil
}

func testExtendedTestdataRouterSccBug2007246Json() (*asset, error) {
	bytes, err := testExtendedTestdataRouterSccBug2007246JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/scc-bug2007246.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterSubdomainRoutesAlphaShardRouteYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
    labels:
      shard: alpha
    name: ${SUBDOMAIN_NAME}-unsecure
  namespace: ${NAMESPACE}
  spec:
    subdomain: ${SUBDOMAIN_NAME}
    to:
      kind: Service
      name: service-unsecure
parameters:
- name: NAMESPACE
- name: SUBDOMAIN_NAME
`)

func testExtendedTestdataRouterSubdomainRoutesAlphaShardRouteYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterSubdomainRoutesAlphaShardRouteYaml, nil
}

func testExtendedTestdataRouterSubdomainRoutesAlphaShardRouteYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterSubdomainRoutesAlphaShardRouteYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/subdomain-routes/alpha-shard-route.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterSubdomainRoutesOcp51148RouteYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
    labels:
      name: service-unsecure
    name: ${SUBDOMAIN_NAME}-unsecure1
  namespace: ${NAMESPACE}
  spec:
    subdomain: ${SUBDOMAIN_NAME}
    to:
      kind: Service
      name: service-unsecure
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
    labels:
      name: service-unsecure
    name: ${SUBDOMAIN_NAME}-unsecure2
  namespace: ${NAMESPACE}
  spec:
    to:
      kind: Service
      name: service-unsecure
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
    labels:
      name: service-unsecure
    name: ${SUBDOMAIN_NAME}-unsecure3
  namespace: ${NAMESPACE}
  spec:
    host: man-${NAMESPACE}.${DOMAIN}
    subdomain: ${SUBDOMAIN_NAME}
    to:
      kind: Service
      name: service-unsecure
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
    labels:
      name: service-unsecure
    name: ${SUBDOMAIN_NAME}-unsecure4
  namespace: ${NAMESPACE}
  spec:
    host: bar-${NAMESPACE}.${DOMAIN}
    to:
      kind: Service
      name: service-unsecure
parameters:
- name: NAMESPACE
- name: DOMAIN
- name: SUBDOMAIN_NAME
`)

func testExtendedTestdataRouterSubdomainRoutesOcp51148RouteYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterSubdomainRoutesOcp51148RouteYaml, nil
}

func testExtendedTestdataRouterSubdomainRoutesOcp51148RouteYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterSubdomainRoutesOcp51148RouteYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/subdomain-routes/ocp51148-route.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterSubdomainRoutesRouteYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
    labels:
      name: service-unsecure
    name: ${SUBDOMAIN_NAME}-unsecure
  namespace: ${NAMESPACE}
  spec:
    subdomain: ${SUBDOMAIN_NAME}
    to:
      kind: Service
      name: service-unsecure
parameters:
- name: NAMESPACE
- name: SUBDOMAIN_NAME
`)

func testExtendedTestdataRouterSubdomainRoutesRouteYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterSubdomainRoutesRouteYaml, nil
}

func testExtendedTestdataRouterSubdomainRoutesRouteYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterSubdomainRoutesRouteYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/subdomain-routes/route.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterSvcAdditionalBackendYaml = []byte(`apiVersion: v1
kind: List
items:
- kind: Service
  apiVersion: v1
  metadata:
    labels:
        name: service-secure2
    name: service-secure2
  spec:
      ports:
         - name: https
           protocol: TCP
           port: 27443
           targetPort: 8443
      selector:
        name: web-server-rc
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      name: service-unsecure2
    name: service-unsecure2
  spec:
    internalTrafficPolicy: Cluster
    ports:
    - name: http
      port: 27017
      protocol: TCP
      targetPort: 8080
    selector:
      name: web-server-rc
    type: ClusterIP
`)

func testExtendedTestdataRouterSvcAdditionalBackendYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterSvcAdditionalBackendYaml, nil
}

func testExtendedTestdataRouterSvcAdditionalBackendYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterSvcAdditionalBackendYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/svc-additional-backend.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterTemplateWebServerDeployYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: ${DEPLOY_NAME}
      labels:
        name: ${DEPLOY_NAME}
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: ${DEPLOY_NAME}
      template:
        metadata:
          labels:
            name: ${DEPLOY_NAME}
        spec:
          containers:
          - image: quay.io/openshifttest/nginx-alpine@sha256:cee6930776b92dc1e93b73f9e5965925d49cff3d2e91e1d071c2f0ff72cbca29
            name: nginx
            ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: ${SVC_SECURE_NAME}
      name: ${SVC_SECURE_NAME}
    spec:
      ports:
      - name: https
        port: 27443
        protocol: TCP
        targetPort: 8443
      selector:
        name: ${DEPLOY_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: ${SVC_UNSECURE_NAME}
      name: ${SVC_UNSECURE_NAME}
    spec:
      ports:
      - name: http
        port: 27017
        protocol: TCP
        targetPort: 8080
      selector:
        name: ${DEPLOY_NAME}
parameters:
- name: DEPLOY_NAME
  value: web-server-deploy
- name: SVC_SECURE_NAME
  value: service-secure
- name: SVC_UNSECURE_NAME
  value: service-unsecure
`)

func testExtendedTestdataRouterTemplateWebServerDeployYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterTemplateWebServerDeployYaml, nil
}

func testExtendedTestdataRouterTemplateWebServerDeployYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterTemplateWebServerDeployYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/template-web-server-deploy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterTestClientPodWithprivilegeYaml = []byte(`apiVersion: v1
kind: Pod
metadata:
  labels:
    app: hello-pod
  name: hello-pod
spec:
  containers:
  - image: quay.io/openshifttest/nginx-alpine@sha256:cee6930776b92dc1e93b73f9e5965925d49cff3d2e91e1d071c2f0ff72cbca29
    name: hello-pod
    securityContext:
      privileged: true
    ports:
    - containerPort: 8080
    - containerPort: 8443
`)

func testExtendedTestdataRouterTestClientPodWithprivilegeYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterTestClientPodWithprivilegeYaml, nil
}

func testExtendedTestdataRouterTestClientPodWithprivilegeYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterTestClientPodWithprivilegeYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/test-client-pod-withprivilege.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterTestClientPodYaml = []byte(`apiVersion: v1
kind: Pod
metadata:
  labels:
    app: hello-pod
  name: hello-pod
spec:
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  containers:
  - image: quay.io/openshifttest/nginx-alpine@sha256:cee6930776b92dc1e93b73f9e5965925d49cff3d2e91e1d071c2f0ff72cbca29
    name: hello-pod
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    ports:
    - containerPort: 8080
    - containerPort: 8443
`)

func testExtendedTestdataRouterTestClientPodYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterTestClientPodYaml, nil
}

func testExtendedTestdataRouterTestClientPodYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterTestClientPodYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/test-client-pod.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterTestpod60350Yaml = []byte(`apiVersion: v1
kind: Pod 
metadata:
  name: testpod-60350
  labels:
    app: testpod-60350
spec:
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  containers:
  - name: myapp-container
    image: quay.io/openshifttest/busybox@sha256:c5439d7db88ab5423999530349d327b04279ad3161d7596d2126dfb5b02bfd1f
    name: testpod-60350
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    command: ['sh', '-c', 'echo The app is running! && sleep 3600']
  dnsPolicy: ClusterFirst
  dnsConfig:
     searches: [8th.com, 9th.com, 10th.com, 11th.com, 12th.com, 13th.com, 14th.com, 15th.com, 16th.com, 17th.com, 18th.com, 19th.com, 20th.com, 21th.com, 22th.com, 23th.com, 24th.com, 25th.com, 26th.com, 27th.com, 28th.com, 29th.com, 30th.com, 31th.com, 32th.com]
`)

func testExtendedTestdataRouterTestpod60350YamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterTestpod60350Yaml, nil
}

func testExtendedTestdataRouterTestpod60350Yaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterTestpod60350YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/testpod-60350.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterTestpod60492Yaml = []byte(`apiVersion: v1
kind: Pod 
metadata:
  name: testpod-60492
  labels:
    app: testpod-60492
spec:
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  containers:
  - name: myapp-container
    image: quay.io/openshifttest/busybox@sha256:c5439d7db88ab5423999530349d327b04279ad3161d7596d2126dfb5b02bfd1f
    name: testpod-60492
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    command: ['sh', '-c', 'echo The app is running! && sleep 3600']
  dnsPolicy: ClusterFirst
  dnsConfig:
     searches: [t47x6d4lzz1zxm1bakrmiceb0tljzl9n8r19kqu9s3731ectkllp9mezn7cldozt25nlenyh5jus5b9rr687u2icimakjpyf4rsux3c66giulc0d2ipsa6bpa6dykgd0mc25r1m89hvzjcix73sdwfbu5q67t0c131i1fqne0o7we20ve2emh1046h9m854wfxo0spb2gv5d65v9x2ibuiti7rhr2y8u72hil5cutp63sbhi832kf3v4vuxa0]

`)

func testExtendedTestdataRouterTestpod60492YamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterTestpod60492Yaml, nil
}

func testExtendedTestdataRouterTestpod60492Yaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterTestpod60492YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/testpod-60492.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterWebServerDeployYaml = []byte(`apiVersion: v1
kind: List
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: web-server-deploy
    labels:
      app: web-server-deploy
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: web-server-deploy
    template:
      metadata:
        labels:
          name: web-server-deploy
      spec:
        containers:
        - name: nginx
          image: quay.io/openshifttest/nginx-alpine@sha256:cee6930776b92dc1e93b73f9e5965925d49cff3d2e91e1d071c2f0ff72cbca29
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
- kind: Service
  apiVersion: v1
  metadata:
      labels:
          name: service-secure
      name: service-secure
  spec:
      ports:
         - name: https
           protocol: TCP
           port: 27443
           targetPort: 8443
      selector:
        name: web-server-deploy
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: service-unsecure
    name: service-unsecure
  spec:
    ports:
    - name: http
      port: 27017
      protocol: TCP
      targetPort: 8080
    selector:
      name: web-server-deploy`)

func testExtendedTestdataRouterWebServerDeployYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterWebServerDeployYaml, nil
}

func testExtendedTestdataRouterWebServerDeployYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterWebServerDeployYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/web-server-deploy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterWebServerSignedDeployYaml = []byte(`apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: nginx-config
  data:
    nginx.conf: |
      events {
          worker_connections 1024;
      }

      http {
          server {
              listen		8080;
              listen       [::]:8080;
              location / {
                  root /data/http;
              }
          }

          server {
              listen           	    8443 ssl http2 default;
              listen           	    [::]:8443 ssl http2 default;
              server_name      	    _;
              ssl_certificate  	    certs/tls.crt;
              ssl_certificate_key  	certs/tls.key;
              location / {
                  root /data/https-default;
              }
          }
      }
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: web-server-deploy
    labels:
      name: web-server-deploy
  spec:
    replicas: 1
    selector:
      matchExpressions:
       - {key: name, operator: In, values: [web-server-deploy]}
    template:
      metadata:
        labels:
          name: web-server-deploy
      spec:
        containers:
        - name: nginx
          image: quay.io/openshifttest/nginx-alpine@sha256:cee6930776b92dc1e93b73f9e5965925d49cff3d2e91e1d071c2f0ff72cbca29
          volumeMounts:
          - name: service-secret
            mountPath: /etc/nginx/certs/
          - name: nginx-config
            mountPath: /etc/nginx/
        volumes:
        - name: service-secret
          secret:
            secretName: service-secret
        - name: nginx-config
          configMap:
            name: nginx-config
- kind: Service
  apiVersion: v1
  metadata:
      annotations:
          service.beta.openshift.io/serving-cert-secret-name: service-secret
      labels:
          name: service-secure
      name: service-secure
  spec:
      ports:
         - name: https
           protocol: TCP
           port: 27443
           targetPort: 8443
      selector:
        name: web-server-deploy
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: service-unsecure
    name: service-unsecure
  spec:
    ports:
    - name: http
      port: 27017
      protocol: TCP
      targetPort: 8080
    selector:
      name: web-server-deploy
`)

func testExtendedTestdataRouterWebServerSignedDeployYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterWebServerSignedDeployYaml, nil
}

func testExtendedTestdataRouterWebServerSignedDeployYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterWebServerSignedDeployYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/web-server-signed-deploy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testExtendedTestdataRouterWebServerV4v6rcYaml = []byte(`apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ReplicationController
  metadata:
    labels:
      name: web-server-v4v6rc
    name: web-server-v4v6rc
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          name: web-server-v4v6rc
      spec:
        containers:
        - image: quay.io/openshifttest/nginx-alpine@sha256:cee6930776b92dc1e93b73f9e5965925d49cff3d2e91e1d071c2f0ff72cbca29
          name: nginx
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: service-securev4v6
    name: service-securev4v6
  spec:
    ipFamilyPolicy: PreferDualStack
    ports:
    - name: https
      port: 27443
      protocol: TCP
      targetPort: 8443
    selector:
      name: web-server-v4v6rc
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: service-unsecurev4v6
    name: service-unsecurev4v6
  spec:
    ipFamilyPolicy: PreferDualStack
    ports:
    - name: http
      port: 27017
      protocol: TCP
      targetPort: 8080
    selector:
      name: web-server-v4v6rc
`)

func testExtendedTestdataRouterWebServerV4v6rcYamlBytes() ([]byte, error) {
	return _testExtendedTestdataRouterWebServerV4v6rcYaml, nil
}

func testExtendedTestdataRouterWebServerV4v6rcYaml() (*asset, error) {
	bytes, err := testExtendedTestdataRouterWebServerV4v6rcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/extended/testdata/router/web-server-v4v6rc.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"test/extended/testdata/router/49802-route.yaml":                        testExtendedTestdataRouter49802RouteYaml,
	"test/extended/testdata/router/awslb/awslbcontroller.yaml":              testExtendedTestdataRouterAwslbAwslbcontrollerYaml,
	"test/extended/testdata/router/awslb/ingress-test.yaml":                 testExtendedTestdataRouterAwslbIngressTestYaml,
	"test/extended/testdata/router/awslb/namespace.yaml":                    testExtendedTestdataRouterAwslbNamespaceYaml,
	"test/extended/testdata/router/awslb/operatorgroup.yaml":                testExtendedTestdataRouterAwslbOperatorgroupYaml,
	"test/extended/testdata/router/awslb/podsvc.yaml":                       testExtendedTestdataRouterAwslbPodsvcYaml,
	"test/extended/testdata/router/awslb/sts-albc-perms-policy.json":        testExtendedTestdataRouterAwslbStsAlbcPermsPolicyJson,
	"test/extended/testdata/router/awslb/sts-albo-perms-policy.json":        testExtendedTestdataRouterAwslbStsAlboPermsPolicyJson,
	"test/extended/testdata/router/awslb/subscription-src-qe-sts.yaml":      testExtendedTestdataRouterAwslbSubscriptionSrcQeStsYaml,
	"test/extended/testdata/router/awslb/subscription-src-qe.yaml":          testExtendedTestdataRouterAwslbSubscriptionSrcQeYaml,
	"test/extended/testdata/router/bug1826225-proh2-deploy.yaml":            testExtendedTestdataRouterBug1826225Proh2DeployYaml,
	"test/extended/testdata/router/bug2013004-lb-services.yaml":             testExtendedTestdataRouterBug2013004LbServicesYaml,
	"test/extended/testdata/router/ca-bundle.pem":                           testExtendedTestdataRouterCaBundlePem,
	"test/extended/testdata/router/coreDNS-pod.yaml":                        testExtendedTestdataRouterCorednsPodYaml,
	"test/extended/testdata/router/egressfirewall-multiDomain.yaml":         testExtendedTestdataRouterEgressfirewallMultidomainYaml,
	"test/extended/testdata/router/egressfirewall-wildcard.yaml":            testExtendedTestdataRouterEgressfirewallWildcardYaml,
	"test/extended/testdata/router/error-page-404.http":                     testExtendedTestdataRouterErrorPage404Http,
	"test/extended/testdata/router/error-page-503.http":                     testExtendedTestdataRouterErrorPage503Http,
	"test/extended/testdata/router/error-page2-404.http":                    testExtendedTestdataRouterErrorPage2404Http,
	"test/extended/testdata/router/error-page2-503.http":                    testExtendedTestdataRouterErrorPage2503Http,
	"test/extended/testdata/router/extdns/aws-sts-creds-secret.yaml":        testExtendedTestdataRouterExtdnsAwsStsCredsSecretYaml,
	"test/extended/testdata/router/extdns/ns-external-dns-operator.yaml":    testExtendedTestdataRouterExtdnsNsExternalDnsOperatorYaml,
	"test/extended/testdata/router/extdns/operatorgroup.yaml":               testExtendedTestdataRouterExtdnsOperatorgroupYaml,
	"test/extended/testdata/router/extdns/sample-aws-rt.yaml":               testExtendedTestdataRouterExtdnsSampleAwsRtYaml,
	"test/extended/testdata/router/extdns/sample-aws-sharedvpc-rt.yaml":     testExtendedTestdataRouterExtdnsSampleAwsSharedvpcRtYaml,
	"test/extended/testdata/router/extdns/sample-aws-sts-rt.yaml":           testExtendedTestdataRouterExtdnsSampleAwsStsRtYaml,
	"test/extended/testdata/router/extdns/sample-azure-rt.yaml":             testExtendedTestdataRouterExtdnsSampleAzureRtYaml,
	"test/extended/testdata/router/extdns/sample-gcp-svc.yaml":              testExtendedTestdataRouterExtdnsSampleGcpSvcYaml,
	"test/extended/testdata/router/extdns/sts-exdns-perms-policy.json":      testExtendedTestdataRouterExtdnsStsExdnsPermsPolicyJson,
	"test/extended/testdata/router/extdns/subscription.yaml":                testExtendedTestdataRouterExtdnsSubscriptionYaml,
	"test/extended/testdata/router/gateway.yaml":                            testExtendedTestdataRouterGatewayYaml,
	"test/extended/testdata/router/gatewayclass.yaml":                       testExtendedTestdataRouterGatewayclassYaml,
	"test/extended/testdata/router/httpbin-deploy.yaml":                     testExtendedTestdataRouterHttpbinDeployYaml,
	"test/extended/testdata/router/httpbin-pod-withprivilege.json":          testExtendedTestdataRouterHttpbinPodWithprivilegeJson,
	"test/extended/testdata/router/httpbin-service_secure.json":             testExtendedTestdataRouterHttpbinService_secureJson,
	"test/extended/testdata/router/httproute.yaml":                          testExtendedTestdataRouterHttprouteYaml,
	"test/extended/testdata/router/ingress-destCA.yaml":                     testExtendedTestdataRouterIngressDestcaYaml,
	"test/extended/testdata/router/ingress-resource.yaml":                   testExtendedTestdataRouterIngressResourceYaml,
	"test/extended/testdata/router/ingress-with-class.yaml":                 testExtendedTestdataRouterIngressWithClassYaml,
	"test/extended/testdata/router/ingresscontroller-IBMproxy.yaml":         testExtendedTestdataRouterIngresscontrollerIbmproxyYaml,
	"test/extended/testdata/router/ingresscontroller-azure-cidr.yaml":       testExtendedTestdataRouterIngresscontrollerAzureCidrYaml,
	"test/extended/testdata/router/ingresscontroller-clb.yaml":              testExtendedTestdataRouterIngresscontrollerClbYaml,
	"test/extended/testdata/router/ingresscontroller-external.yaml":         testExtendedTestdataRouterIngresscontrollerExternalYaml,
	"test/extended/testdata/router/ingresscontroller-hn-PROXY.yaml":         testExtendedTestdataRouterIngresscontrollerHnProxyYaml,
	"test/extended/testdata/router/ingresscontroller-hostnetwork-only.yaml": testExtendedTestdataRouterIngresscontrollerHostnetworkOnlyYaml,
	"test/extended/testdata/router/ingresscontroller-np-PROXY.yaml":         testExtendedTestdataRouterIngresscontrollerNpProxyYaml,
	"test/extended/testdata/router/ingresscontroller-np.yaml":               testExtendedTestdataRouterIngresscontrollerNpYaml,
	"test/extended/testdata/router/ingresscontroller-private.yaml":          testExtendedTestdataRouterIngresscontrollerPrivateYaml,
	"test/extended/testdata/router/ingresscontroller-shard.yaml":            testExtendedTestdataRouterIngresscontrollerShardYaml,
	"test/extended/testdata/router/ingresscontroller-sidecar.yaml":          testExtendedTestdataRouterIngresscontrollerSidecarYaml,
	"test/extended/testdata/router/ingresscontroller-syslog.yaml":           testExtendedTestdataRouterIngresscontrollerSyslogYaml,
	"test/extended/testdata/router/ingresscontroller-tuning.yaml":           testExtendedTestdataRouterIngresscontrollerTuningYaml,
	"test/extended/testdata/router/ipfailover.yaml":                         testExtendedTestdataRouterIpfailoverYaml,
	"test/extended/testdata/router/microshift-ingress-destca.yaml":          testExtendedTestdataRouterMicroshiftIngressDestcaYaml,
	"test/extended/testdata/router/microshift-ingress-http.yaml":            testExtendedTestdataRouterMicroshiftIngressHttpYaml,
	"test/extended/testdata/router/ocp57404-stateful-set.yaml":              testExtendedTestdataRouterOcp57404StatefulSetYaml,
	"test/extended/testdata/router/ocp73771-role.yaml":                      testExtendedTestdataRouterOcp73771RoleYaml,
	"test/extended/testdata/router/rsyslogd-pod.yaml":                       testExtendedTestdataRouterRsyslogdPodYaml,
	"test/extended/testdata/router/scc-bug2007246.json":                     testExtendedTestdataRouterSccBug2007246Json,
	"test/extended/testdata/router/subdomain-routes/alpha-shard-route.yaml": testExtendedTestdataRouterSubdomainRoutesAlphaShardRouteYaml,
	"test/extended/testdata/router/subdomain-routes/ocp51148-route.yaml":    testExtendedTestdataRouterSubdomainRoutesOcp51148RouteYaml,
	"test/extended/testdata/router/subdomain-routes/route.yaml":             testExtendedTestdataRouterSubdomainRoutesRouteYaml,
	"test/extended/testdata/router/svc-additional-backend.yaml":             testExtendedTestdataRouterSvcAdditionalBackendYaml,
	"test/extended/testdata/router/template-web-server-deploy.yaml":         testExtendedTestdataRouterTemplateWebServerDeployYaml,
	"test/extended/testdata/router/test-client-pod-withprivilege.yaml":      testExtendedTestdataRouterTestClientPodWithprivilegeYaml,
	"test/extended/testdata/router/test-client-pod.yaml":                    testExtendedTestdataRouterTestClientPodYaml,
	"test/extended/testdata/router/testpod-60350.yaml":                      testExtendedTestdataRouterTestpod60350Yaml,
	"test/extended/testdata/router/testpod-60492.yaml":                      testExtendedTestdataRouterTestpod60492Yaml,
	"test/extended/testdata/router/web-server-deploy.yaml":                  testExtendedTestdataRouterWebServerDeployYaml,
	"test/extended/testdata/router/web-server-signed-deploy.yaml":           testExtendedTestdataRouterWebServerSignedDeployYaml,
	"test/extended/testdata/router/web-server-v4v6rc.yaml":                  testExtendedTestdataRouterWebServerV4v6rcYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"test": {nil, map[string]*bintree{
		"extended": {nil, map[string]*bintree{
			"testdata": {nil, map[string]*bintree{
				"router": {nil, map[string]*bintree{
					"49802-route.yaml": {testExtendedTestdataRouter49802RouteYaml, map[string]*bintree{}},
					"awslb": {nil, map[string]*bintree{
						"awslbcontroller.yaml":         {testExtendedTestdataRouterAwslbAwslbcontrollerYaml, map[string]*bintree{}},
						"ingress-test.yaml":            {testExtendedTestdataRouterAwslbIngressTestYaml, map[string]*bintree{}},
						"namespace.yaml":               {testExtendedTestdataRouterAwslbNamespaceYaml, map[string]*bintree{}},
						"operatorgroup.yaml":           {testExtendedTestdataRouterAwslbOperatorgroupYaml, map[string]*bintree{}},
						"podsvc.yaml":                  {testExtendedTestdataRouterAwslbPodsvcYaml, map[string]*bintree{}},
						"sts-albc-perms-policy.json":   {testExtendedTestdataRouterAwslbStsAlbcPermsPolicyJson, map[string]*bintree{}},
						"sts-albo-perms-policy.json":   {testExtendedTestdataRouterAwslbStsAlboPermsPolicyJson, map[string]*bintree{}},
						"subscription-src-qe-sts.yaml": {testExtendedTestdataRouterAwslbSubscriptionSrcQeStsYaml, map[string]*bintree{}},
						"subscription-src-qe.yaml":     {testExtendedTestdataRouterAwslbSubscriptionSrcQeYaml, map[string]*bintree{}},
					}},
					"bug1826225-proh2-deploy.yaml":    {testExtendedTestdataRouterBug1826225Proh2DeployYaml, map[string]*bintree{}},
					"bug2013004-lb-services.yaml":     {testExtendedTestdataRouterBug2013004LbServicesYaml, map[string]*bintree{}},
					"ca-bundle.pem":                   {testExtendedTestdataRouterCaBundlePem, map[string]*bintree{}},
					"coreDNS-pod.yaml":                {testExtendedTestdataRouterCorednsPodYaml, map[string]*bintree{}},
					"egressfirewall-multiDomain.yaml": {testExtendedTestdataRouterEgressfirewallMultidomainYaml, map[string]*bintree{}},
					"egressfirewall-wildcard.yaml":    {testExtendedTestdataRouterEgressfirewallWildcardYaml, map[string]*bintree{}},
					"error-page-404.http":             {testExtendedTestdataRouterErrorPage404Http, map[string]*bintree{}},
					"error-page-503.http":             {testExtendedTestdataRouterErrorPage503Http, map[string]*bintree{}},
					"error-page2-404.http":            {testExtendedTestdataRouterErrorPage2404Http, map[string]*bintree{}},
					"error-page2-503.http":            {testExtendedTestdataRouterErrorPage2503Http, map[string]*bintree{}},
					"extdns": {nil, map[string]*bintree{
						"aws-sts-creds-secret.yaml":     {testExtendedTestdataRouterExtdnsAwsStsCredsSecretYaml, map[string]*bintree{}},
						"ns-external-dns-operator.yaml": {testExtendedTestdataRouterExtdnsNsExternalDnsOperatorYaml, map[string]*bintree{}},
						"operatorgroup.yaml":            {testExtendedTestdataRouterExtdnsOperatorgroupYaml, map[string]*bintree{}},
						"sample-aws-rt.yaml":            {testExtendedTestdataRouterExtdnsSampleAwsRtYaml, map[string]*bintree{}},
						"sample-aws-sharedvpc-rt.yaml":  {testExtendedTestdataRouterExtdnsSampleAwsSharedvpcRtYaml, map[string]*bintree{}},
						"sample-aws-sts-rt.yaml":        {testExtendedTestdataRouterExtdnsSampleAwsStsRtYaml, map[string]*bintree{}},
						"sample-azure-rt.yaml":          {testExtendedTestdataRouterExtdnsSampleAzureRtYaml, map[string]*bintree{}},
						"sample-gcp-svc.yaml":           {testExtendedTestdataRouterExtdnsSampleGcpSvcYaml, map[string]*bintree{}},
						"sts-exdns-perms-policy.json":   {testExtendedTestdataRouterExtdnsStsExdnsPermsPolicyJson, map[string]*bintree{}},
						"subscription.yaml":             {testExtendedTestdataRouterExtdnsSubscriptionYaml, map[string]*bintree{}},
					}},
					"gateway.yaml":                            {testExtendedTestdataRouterGatewayYaml, map[string]*bintree{}},
					"gatewayclass.yaml":                       {testExtendedTestdataRouterGatewayclassYaml, map[string]*bintree{}},
					"httpbin-deploy.yaml":                     {testExtendedTestdataRouterHttpbinDeployYaml, map[string]*bintree{}},
					"httpbin-pod-withprivilege.json":          {testExtendedTestdataRouterHttpbinPodWithprivilegeJson, map[string]*bintree{}},
					"httpbin-service_secure.json":             {testExtendedTestdataRouterHttpbinService_secureJson, map[string]*bintree{}},
					"httproute.yaml":                          {testExtendedTestdataRouterHttprouteYaml, map[string]*bintree{}},
					"ingress-destCA.yaml":                     {testExtendedTestdataRouterIngressDestcaYaml, map[string]*bintree{}},
					"ingress-resource.yaml":                   {testExtendedTestdataRouterIngressResourceYaml, map[string]*bintree{}},
					"ingress-with-class.yaml":                 {testExtendedTestdataRouterIngressWithClassYaml, map[string]*bintree{}},
					"ingresscontroller-IBMproxy.yaml":         {testExtendedTestdataRouterIngresscontrollerIbmproxyYaml, map[string]*bintree{}},
					"ingresscontroller-azure-cidr.yaml":       {testExtendedTestdataRouterIngresscontrollerAzureCidrYaml, map[string]*bintree{}},
					"ingresscontroller-clb.yaml":              {testExtendedTestdataRouterIngresscontrollerClbYaml, map[string]*bintree{}},
					"ingresscontroller-external.yaml":         {testExtendedTestdataRouterIngresscontrollerExternalYaml, map[string]*bintree{}},
					"ingresscontroller-hn-PROXY.yaml":         {testExtendedTestdataRouterIngresscontrollerHnProxyYaml, map[string]*bintree{}},
					"ingresscontroller-hostnetwork-only.yaml": {testExtendedTestdataRouterIngresscontrollerHostnetworkOnlyYaml, map[string]*bintree{}},
					"ingresscontroller-np-PROXY.yaml":         {testExtendedTestdataRouterIngresscontrollerNpProxyYaml, map[string]*bintree{}},
					"ingresscontroller-np.yaml":               {testExtendedTestdataRouterIngresscontrollerNpYaml, map[string]*bintree{}},
					"ingresscontroller-private.yaml":          {testExtendedTestdataRouterIngresscontrollerPrivateYaml, map[string]*bintree{}},
					"ingresscontroller-shard.yaml":            {testExtendedTestdataRouterIngresscontrollerShardYaml, map[string]*bintree{}},
					"ingresscontroller-sidecar.yaml":          {testExtendedTestdataRouterIngresscontrollerSidecarYaml, map[string]*bintree{}},
					"ingresscontroller-syslog.yaml":           {testExtendedTestdataRouterIngresscontrollerSyslogYaml, map[string]*bintree{}},
					"ingresscontroller-tuning.yaml":           {testExtendedTestdataRouterIngresscontrollerTuningYaml, map[string]*bintree{}},
					"ipfailover.yaml":                         {testExtendedTestdataRouterIpfailoverYaml, map[string]*bintree{}},
					"microshift-ingress-destca.yaml":          {testExtendedTestdataRouterMicroshiftIngressDestcaYaml, map[string]*bintree{}},
					"microshift-ingress-http.yaml":            {testExtendedTestdataRouterMicroshiftIngressHttpYaml, map[string]*bintree{}},
					"ocp57404-stateful-set.yaml":              {testExtendedTestdataRouterOcp57404StatefulSetYaml, map[string]*bintree{}},
					"ocp73771-role.yaml":                      {testExtendedTestdataRouterOcp73771RoleYaml, map[string]*bintree{}},
					"rsyslogd-pod.yaml":                       {testExtendedTestdataRouterRsyslogdPodYaml, map[string]*bintree{}},
					"scc-bug2007246.json":                     {testExtendedTestdataRouterSccBug2007246Json, map[string]*bintree{}},
					"subdomain-routes": {nil, map[string]*bintree{
						"alpha-shard-route.yaml": {testExtendedTestdataRouterSubdomainRoutesAlphaShardRouteYaml, map[string]*bintree{}},
						"ocp51148-route.yaml":    {testExtendedTestdataRouterSubdomainRoutesOcp51148RouteYaml, map[string]*bintree{}},
						"route.yaml":             {testExtendedTestdataRouterSubdomainRoutesRouteYaml, map[string]*bintree{}},
					}},
					"svc-additional-backend.yaml":        {testExtendedTestdataRouterSvcAdditionalBackendYaml, map[string]*bintree{}},
					"template-web-server-deploy.yaml":    {testExtendedTestdataRouterTemplateWebServerDeployYaml, map[string]*bintree{}},
					"test-client-pod-withprivilege.yaml": {testExtendedTestdataRouterTestClientPodWithprivilegeYaml, map[string]*bintree{}},
					"test-client-pod.yaml":               {testExtendedTestdataRouterTestClientPodYaml, map[string]*bintree{}},
					"testpod-60350.yaml":                 {testExtendedTestdataRouterTestpod60350Yaml, map[string]*bintree{}},
					"testpod-60492.yaml":                 {testExtendedTestdataRouterTestpod60492Yaml, map[string]*bintree{}},
					"web-server-deploy.yaml":             {testExtendedTestdataRouterWebServerDeployYaml, map[string]*bintree{}},
					"web-server-signed-deploy.yaml":      {testExtendedTestdataRouterWebServerSignedDeployYaml, map[string]*bintree{}},
					"web-server-v4v6rc.yaml":             {testExtendedTestdataRouterWebServerV4v6rcYaml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
