// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/project/v1"
	projectv1 "github.com/openshift/client-go/project/applyconfigurations/project/v1"
	typedprojectv1 "github.com/openshift/client-go/project/clientset/versioned/typed/project/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeProjects implements ProjectInterface
type fakeProjects struct {
	*gentype.FakeClientWithListAndApply[*v1.Project, *v1.ProjectList, *projectv1.ProjectApplyConfiguration]
	Fake *FakeProjectV1
}

func newFakeProjects(fake *FakeProjectV1) typedprojectv1.ProjectInterface {
	return &fakeProjects{
		gentype.NewFakeClientWithListAndApply[*v1.Project, *v1.ProjectList, *projectv1.ProjectApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("projects"),
			v1.SchemeGroupVersion.WithKind("Project"),
			func() *v1.Project { return &v1.Project{} },
			func() *v1.ProjectList { return &v1.ProjectList{} },
			func(dst, src *v1.ProjectList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ProjectList) []*v1.Project { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.ProjectList, items []*v1.Project) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
